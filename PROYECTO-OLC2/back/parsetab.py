
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALTER AND AS ASSIGN BASE BEGIN CAS CASE COLUMN COMMA CONCATENAR CONTAR CREATE DATA DATE DATETIME DECIMAL DECIMAL_VALUE DECLARE DELETE DIVIDE DROP ELSE END EQUALS EXEC FROM FUNCTION GREATER_EQ GREATER_THAN HOY ID IF INSERT INT INTEGER_VALUE INTO KEY LESS_EQ LESS_THAN L_PAREN MINUS NAME NCHAR NOT NOT_EQ NOT_SIGN NULL NVARCHAR OR PLUS PRIMARY PROCEDURE REFERENCE RETURN R_PAREN SELECT SEMICOLON SET STRING SUBSTRAER SUMA TABLE THEN TIMES TRUNCATE UPDATE USE VALUES WHEN WHERE WHILEinit   : statementsstatements : statements statementstatements : statement    : create_database_statement\n                    | use_statement\n                    | declare_statement\n                    | set_statement\n                    | create_table_statement\n                    | select_statement\n                    | insert_statement\n                    | create_function_statement\n                    | create_procedure_statement\n                    | alter_table_statement\n                    | if_statement\n                    | exec_statement\n                    | drop_table_statement\n                    | update_statement\n                    | while_statement\n                    | truncate_statement\n                    | delete_statementcreate_database_statement    : CREATE DATA BASE NAME SEMICOLONuse_statement   : USE NAME SEMICOLONdeclare_statement   : DECLARE ID AS type SEMICOLONset_statement   : SET assignments SEMICOLONassignments    : assignments COMMA ID ASSIGN aassignments    : ID ASSIGN acreate_table_statement : CREATE TABLE NAME L_PAREN properties R_PAREN SEMICOLONproperties : properties COMMA propertyproperties : propertyproperty   : NAME type null_prod PRIMARY KEYproperty   : NAME type null_prodproperty   : NAME type null_prod REFERENCE NAME L_PAREN NAME R_PARENnull_prod  : NOT NULLnull_prod  : NULLnull_prod  : select_statement   : SELECT columns FROM NAME SEMICOLONselect_statement   : SELECT columns FROM NAME WHERE a SEMICOLONinsert_statement   : INSERT INTO NAME L_PAREN columns R_PAREN VALUES L_PAREN vals R_PAREN SEMICOLONcolumns    : columns COMMA columncolumns    : columncolumn   : TIMES\n                | NAME\n                | case_statement\n                | call_function_prodvals   : vals COMMA avals   : acreate_function_statement  : CREATE FUNCTION NAME L_PAREN parameters R_PAREN RETURN type AS BEGIN statements END SEMICOLONcreate_procedure_statement : CREATE PROCEDURE NAME L_PAREN parameters R_PAREN AS BEGIN statements END SEMICOLONparameters : parameters COMMA ID AS typeparameters : ID AS typealter_table_statement  : ALTER TABLE NAME ADD COLUMN NAME type SEMICOLONalter_table_statement  : ALTER TABLE NAME DROP COLUMN NAME SEMICOLONif_statement   : IF a THEN statements END IF SEMICOLONif_statement   : IF a THEN statements ELSE statements END IF SEMICOLONif_statement   : IF L_PAREN a COMMA a COMMA a R_PAREN SEMICOLONexec_statement : EXEC NAME vals SEMICOLONdrop_table_statement   : DROP TABLE NAME SEMICOLONupdate_statement   : UPDATE NAME SET column_assignments WHERE a SEMICOLONcolumn_assignments  : column_assignments COMMA NAME ASSIGN acolumn_assignments : NAME ASSIGN awhile_statement    : WHILE a BEGIN statements END SEMICOLONtruncate_statement : TRUNCATE TABLE NAME SEMICOLONdelete_statement : DELETE FROM NAME WHERE a SEMICOLONcase_statement : CASE when_statements END NAMEwhen_statements : WHEN a THEN a when_statementswhen_statements : ELSE THEN atype : INT\n            | DECIMAL\n            | DATE\n            | DATETIMEtype : NCHAR L_PAREN a R_PAREN\n            | NVARCHAR L_PAREN a R_PARENa    : a OR ba  : bb  : b AND cb  : cc  : NOT_SIGN dc  : dd    : d EQUALS e\n            | d NOT_EQ e\n            | d LESS_THAN e\n            | d GREATER_THAN e\n            | d LESS_EQ e\n            | d GREATER_EQ e\n    d  : ee    : e PLUS f\n            | e MINUS fe  : ff    : f TIMES g\n            | f DIVIDE gf  : gg  : MINUS hg  : hh    : INTEGER_VALUEh    : DECIMAL_VALUEh    : STRINGh    : IDh    : NAMEh    : if_statementcall_function_prod   : HOY L_PAREN R_PAREN\n                            | CONCATENAR L_PAREN a COMMA a R_PAREN\n                            | SUBSTRAER L_PAREN a R_PAREN\n                            | CONTAR L_PAREN a R_PAREN\n                            | SUMA L_PAREN a R_PAREN\n                            | CAS L_PAREN a AS type R_PAREN\n    '
    
_lr_action_items = {'CREATE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,85,87,104,123,153,154,168,172,173,175,182,186,200,226,231,232,236,244,250,251,254,261,263,271,273,274,276,280,281,282,285,],[-3,21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-22,-24,-3,-3,-57,21,-56,21,-62,-21,-23,-36,-3,21,-61,-63,-27,-37,-52,-53,-58,-3,-51,21,-54,-55,-3,21,-48,-38,-47,]),'USE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,85,87,104,123,153,154,168,172,173,175,182,186,200,226,231,232,236,244,250,251,254,261,263,271,273,274,276,280,281,282,285,],[-3,22,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-22,-24,-3,-3,-57,22,-56,22,-62,-21,-23,-36,-3,22,-61,-63,-27,-37,-52,-53,-58,-3,-51,22,-54,-55,-3,22,-48,-38,-47,]),'DECLARE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,85,87,104,123,153,154,168,172,173,175,182,186,200,226,231,232,236,244,250,251,254,261,263,271,273,274,276,280,281,282,285,],[-3,23,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-22,-24,-3,-3,-57,23,-56,23,-62,-21,-23,-36,-3,23,-61,-63,-27,-37,-52,-53,-58,-3,-51,23,-54,-55,-3,23,-48,-38,-47,]),'SET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,77,85,87,104,123,153,154,168,172,173,175,182,186,200,226,231,232,236,244,250,251,254,261,263,271,273,274,276,280,281,282,285,],[-3,24,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,122,-22,-24,-3,-3,-57,24,-56,24,-62,-21,-23,-36,-3,24,-61,-63,-27,-37,-52,-53,-58,-3,-51,24,-54,-55,-3,24,-48,-38,-47,]),'SELECT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,85,87,104,123,153,154,168,172,173,175,182,186,200,226,231,232,236,244,250,251,254,261,263,271,273,274,276,280,281,282,285,],[-3,25,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-22,-24,-3,-3,-57,25,-56,25,-62,-21,-23,-36,-3,25,-61,-63,-27,-37,-52,-53,-58,-3,-51,25,-54,-55,-3,25,-48,-38,-47,]),'INSERT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,85,87,104,123,153,154,168,172,173,175,182,186,200,226,231,232,236,244,250,251,254,261,263,271,273,274,276,280,281,282,285,],[-3,26,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-22,-24,-3,-3,-57,26,-56,26,-62,-21,-23,-36,-3,26,-61,-63,-27,-37,-52,-53,-58,-3,-51,26,-54,-55,-3,26,-48,-38,-47,]),'ALTER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,85,87,104,123,153,154,168,172,173,175,182,186,200,226,231,232,236,244,250,251,254,261,263,271,273,274,276,280,281,282,285,],[-3,27,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-22,-24,-3,-3,-57,27,-56,27,-62,-21,-23,-36,-3,27,-61,-63,-27,-37,-52,-53,-58,-3,-51,27,-54,-55,-3,27,-48,-38,-47,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,29,32,60,63,67,76,85,87,89,93,96,97,98,99,100,104,105,107,109,110,111,112,113,114,115,116,117,118,123,143,153,154,156,168,169,172,173,174,175,182,183,184,185,186,187,189,191,199,200,203,204,226,227,231,232,236,244,250,251,252,254,255,261,262,263,271,273,274,276,280,281,282,285,],[-3,29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,29,29,29,29,29,29,-22,-24,29,29,29,29,29,29,29,-3,29,29,29,29,29,29,29,29,29,29,29,29,-3,29,-57,29,29,-56,29,29,-62,29,-21,-23,29,29,29,-36,29,29,29,225,-3,29,29,29,29,-61,-63,-27,-37,-52,-53,264,-58,29,-3,29,-51,29,-54,-55,-3,29,-48,-38,-47,]),'EXEC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,85,87,104,123,153,154,168,172,173,175,182,186,200,226,231,232,236,244,250,251,254,261,263,271,273,274,276,280,281,282,285,],[-3,30,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-22,-24,-3,-3,-57,30,-56,30,-62,-21,-23,-36,-3,30,-61,-63,-27,-37,-52,-53,-58,-3,-51,30,-54,-55,-3,30,-48,-38,-47,]),'DROP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,85,87,102,104,123,153,154,168,172,173,175,182,186,200,226,231,232,236,244,250,251,254,261,263,271,273,274,276,280,281,282,285,],[-3,28,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-22,-24,152,-3,-3,-57,28,-56,28,-62,-21,-23,-36,-3,28,-61,-63,-27,-37,-52,-53,-58,-3,-51,28,-54,-55,-3,28,-48,-38,-47,]),'UPDATE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,85,87,104,123,153,154,168,172,173,175,182,186,200,226,231,232,236,244,250,251,254,261,263,271,273,274,276,280,281,282,285,],[-3,31,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-22,-24,-3,-3,-57,31,-56,31,-62,-21,-23,-36,-3,31,-61,-63,-27,-37,-52,-53,-58,-3,-51,31,-54,-55,-3,31,-48,-38,-47,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,85,87,104,123,153,154,168,172,173,175,182,186,200,226,231,232,236,244,250,251,254,261,263,271,273,274,276,280,281,282,285,],[-3,32,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-22,-24,-3,-3,-57,32,-56,32,-62,-21,-23,-36,-3,32,-61,-63,-27,-37,-52,-53,-58,-3,-51,32,-54,-55,-3,32,-48,-38,-47,]),'TRUNCATE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,85,87,104,123,153,154,168,172,173,175,182,186,200,226,231,232,236,244,250,251,254,261,263,271,273,274,276,280,281,282,285,],[-3,33,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-22,-24,-3,-3,-57,33,-56,33,-62,-21,-23,-36,-3,33,-61,-63,-27,-37,-52,-53,-58,-3,-51,33,-54,-55,-3,33,-48,-38,-47,]),'DELETE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,85,87,104,123,153,154,168,172,173,175,182,186,200,226,231,232,236,244,250,251,254,261,263,271,273,274,276,280,281,282,285,],[-3,34,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-22,-24,-3,-3,-57,34,-56,34,-62,-21,-23,-36,-3,34,-61,-63,-27,-37,-52,-53,-58,-3,-51,34,-54,-55,-3,34,-48,-38,-47,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,85,87,153,168,173,175,182,186,231,232,236,244,250,251,254,263,273,274,281,282,285,],[-3,0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-22,-24,-57,-56,-62,-21,-23,-36,-61,-63,-27,-37,-52,-53,-58,-51,-54,-55,-48,-38,-47,]),'END':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,61,62,64,65,66,68,69,70,71,72,73,74,75,85,87,92,104,108,119,123,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,172,173,175,182,186,190,200,226,231,232,236,244,245,250,251,254,261,263,271,273,274,276,280,281,282,285,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-74,-76,-78,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,-22,-24,141,-3,-77,-92,-3,-57,199,-73,-75,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,-56,206,-62,-21,-23,-36,-66,-3,252,-61,-63,-27,-37,-65,-52,-53,-58,-3,-51,277,-54,-55,-3,284,-48,-38,-47,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,49,61,62,64,65,66,68,69,70,71,72,73,74,75,85,87,104,108,119,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,173,175,182,186,219,231,232,236,244,250,251,254,263,273,274,281,282,285,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,94,-74,-76,-78,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,-22,-24,-3,-77,-92,-57,200,-73,-75,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,-56,-62,-21,-23,-36,94,-61,-63,-27,-37,-52,-53,-58,-51,-54,-55,-48,-38,-47,]),'DATA':([21,],[35,]),'TABLE':([21,27,28,33,],[36,57,58,79,]),'FUNCTION':([21,],[37,]),'PROCEDURE':([21,],[38,]),'NAME':([22,25,29,30,31,32,36,37,38,56,57,58,60,63,67,76,79,80,81,89,90,91,93,96,97,98,99,100,105,107,109,110,111,112,113,114,115,116,117,118,122,127,141,143,150,156,169,174,183,184,185,187,189,191,197,198,203,204,205,210,227,255,257,262,275,],[39,44,74,76,77,74,82,83,84,101,102,103,74,74,74,74,124,125,126,74,139,44,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,170,176,188,74,44,74,74,74,74,74,74,74,74,74,223,224,74,74,230,176,74,74,268,74,279,]),'ID':([23,24,29,32,60,63,67,76,88,89,93,96,97,98,99,100,105,107,109,110,111,112,113,114,115,116,117,118,128,129,143,156,169,174,183,184,185,187,189,191,203,204,212,227,255,262,],[40,42,73,73,73,73,73,73,137,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,180,180,73,73,73,73,73,73,73,73,73,73,73,73,239,73,73,73,]),'TIMES':([25,66,68,69,70,71,72,73,74,75,91,119,150,164,165,166,167,251,273,274,],[46,117,-91,-93,-94,-95,-96,-97,-98,-99,46,-92,46,117,117,-89,-90,-53,-54,-55,]),'CASE':([25,91,150,],[49,49,49,]),'HOY':([25,91,150,],[50,50,50,]),'CONCATENAR':([25,91,150,],[51,51,51,]),'SUBSTRAER':([25,91,150,],[52,52,52,]),'CONTAR':([25,91,150,],[53,53,53,]),'SUMA':([25,91,150,],[54,54,54,]),'CAS':([25,91,150,],[55,55,55,]),'INTO':([26,],[56,]),'L_PAREN':([29,50,51,52,53,54,55,82,83,84,101,135,136,248,268,],[60,95,96,97,98,99,100,127,128,129,150,183,184,262,275,]),'NOT_SIGN':([29,32,60,76,89,93,96,97,98,99,100,105,107,143,156,169,174,183,184,185,187,189,191,203,204,227,255,262,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'MINUS':([29,32,60,63,65,66,68,69,70,71,72,73,74,75,76,89,93,96,97,98,99,100,105,107,109,110,111,112,113,114,115,116,117,118,119,143,156,158,159,160,161,162,163,164,165,166,167,169,174,183,184,185,187,189,191,203,204,227,251,255,262,273,274,],[67,67,67,67,116,-88,-91,-93,-94,-95,-96,-97,-98,-99,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-92,67,67,116,116,116,116,116,116,-86,-87,-89,-90,67,67,67,67,67,67,67,67,67,67,67,-53,67,67,-54,-55,]),'INTEGER_VALUE':([29,32,60,63,67,76,89,93,96,97,98,99,100,105,107,109,110,111,112,113,114,115,116,117,118,143,156,169,174,183,184,185,187,189,191,203,204,227,255,262,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'DECIMAL_VALUE':([29,32,60,63,67,76,89,93,96,97,98,99,100,105,107,109,110,111,112,113,114,115,116,117,118,143,156,169,174,183,184,185,187,189,191,203,204,227,255,262,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'STRING':([29,32,60,63,67,76,89,93,96,97,98,99,100,105,107,109,110,111,112,113,114,115,116,117,118,143,156,169,174,183,184,185,187,189,191,203,204,227,255,262,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'FROM':([34,43,44,45,46,47,48,140,144,188,192,193,194,246,247,],[80,90,-42,-40,-41,-43,-44,-39,-100,-64,-102,-103,-104,-101,-105,]),'BASE':([35,],[81,]),'SEMICOLON':([39,41,61,62,64,65,66,68,69,70,71,72,73,74,75,103,108,119,120,121,124,126,130,131,132,133,134,138,139,155,157,158,159,160,161,162,163,164,165,166,167,202,206,207,209,217,218,224,225,229,242,243,249,251,264,265,273,274,277,278,284,],[85,87,-74,-76,-78,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,153,-77,-92,168,-46,173,175,182,-67,-68,-69,-70,-26,186,-73,-75,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,-45,231,232,236,-25,244,250,251,254,-71,-72,263,-53,273,274,-54,-55,281,282,285,]),'AS':([40,61,62,64,65,66,68,69,70,71,72,73,74,75,108,119,131,132,133,134,149,155,157,158,159,160,161,162,163,164,165,166,167,180,214,239,242,243,251,259,273,274,],[86,-74,-76,-78,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,-77,-92,-67,-68,-69,-70,195,-73,-75,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,213,241,260,-71,-72,-53,269,-54,-55,]),'COMMA':([41,43,44,45,46,47,48,61,62,64,65,66,68,69,70,71,72,73,74,75,106,108,119,120,121,131,132,133,134,138,140,144,145,155,157,158,159,160,161,162,163,164,165,166,167,171,177,178,179,181,188,192,193,194,196,201,202,208,217,228,233,235,237,240,242,243,246,247,251,258,266,267,270,272,273,274,283,],[88,91,-42,-40,-41,-43,-44,-74,-76,-78,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,156,-77,-92,169,-46,-67,-68,-69,-70,-26,-39,-100,191,-73,-75,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,205,210,-29,212,212,-64,-102,-103,-104,91,227,-45,-35,-25,-60,-31,-34,-28,-50,-71,-72,-101,-105,-53,-33,-59,-30,-49,169,-54,-55,-32,]),'ASSIGN':([42,137,170,230,],[89,185,203,255,]),'R_PAREN':([44,45,46,47,48,61,62,64,65,66,68,69,70,71,72,73,74,75,95,108,119,121,131,132,133,134,140,144,146,147,148,155,157,158,159,160,161,162,163,164,165,166,167,177,178,179,181,188,192,193,194,196,202,208,215,216,220,221,233,235,237,240,242,243,246,247,251,253,258,267,270,272,273,274,279,283,],[-42,-40,-41,-43,-44,-74,-76,-78,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,144,-77,-92,-46,-67,-68,-69,-70,-39,-100,192,193,194,-73,-75,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,209,-29,211,214,-64,-102,-103,-104,222,-45,-35,242,243,246,247,-31,-34,-28,-50,-71,-72,-101,-105,-53,265,-33,-30,-49,278,-54,-55,283,-32,]),'WHEN':([49,61,62,64,65,66,68,69,70,71,72,73,74,75,108,119,155,157,158,159,160,161,162,163,164,165,166,167,219,251,273,274,],[93,-74,-76,-78,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,-77,-92,-73,-75,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,93,-53,-54,-55,]),'THEN':([59,61,62,64,65,66,68,69,70,71,72,73,74,75,94,108,119,142,155,157,158,159,160,161,162,163,164,165,166,167,251,273,274,],[104,-74,-76,-78,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,143,-77,-92,189,-73,-75,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,-53,-54,-55,]),'OR':([59,61,62,64,65,66,68,69,70,71,72,73,74,75,78,106,108,119,121,138,142,145,146,147,148,149,155,157,158,159,160,161,162,163,164,165,166,167,190,201,202,207,215,216,217,218,219,220,228,229,251,253,266,273,274,],[105,-74,-76,-78,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,105,105,-77,-92,105,105,105,105,105,105,105,105,-73,-75,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,105,105,105,105,105,105,105,105,105,105,105,105,-53,105,105,-54,-55,]),'BEGIN':([61,62,64,65,66,68,69,70,71,72,73,74,75,78,108,119,155,157,158,159,160,161,162,163,164,165,166,167,241,251,269,273,274,],[-74,-76,-78,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,123,-77,-92,-73,-75,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,261,-53,276,-54,-55,]),'WHERE':([61,62,64,65,66,68,69,70,71,72,73,74,75,108,119,125,139,155,157,158,159,160,161,162,163,164,165,166,167,171,228,251,266,273,274,],[-74,-76,-78,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,-77,-92,174,187,-73,-75,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,204,-60,-53,-59,-54,-55,]),'AND':([61,62,64,65,66,68,69,70,71,72,73,74,75,108,119,155,157,158,159,160,161,162,163,164,165,166,167,251,273,274,],[107,-76,-78,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,-77,-92,107,-75,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,-53,-54,-55,]),'EQUALS':([64,65,66,68,69,70,71,72,73,74,75,108,119,158,159,160,161,162,163,164,165,166,167,251,273,274,],[109,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,109,-92,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,-53,-54,-55,]),'NOT_EQ':([64,65,66,68,69,70,71,72,73,74,75,108,119,158,159,160,161,162,163,164,165,166,167,251,273,274,],[110,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,110,-92,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,-53,-54,-55,]),'LESS_THAN':([64,65,66,68,69,70,71,72,73,74,75,108,119,158,159,160,161,162,163,164,165,166,167,251,273,274,],[111,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,111,-92,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,-53,-54,-55,]),'GREATER_THAN':([64,65,66,68,69,70,71,72,73,74,75,108,119,158,159,160,161,162,163,164,165,166,167,251,273,274,],[112,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,112,-92,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,-53,-54,-55,]),'LESS_EQ':([64,65,66,68,69,70,71,72,73,74,75,108,119,158,159,160,161,162,163,164,165,166,167,251,273,274,],[113,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,113,-92,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,-53,-54,-55,]),'GREATER_EQ':([64,65,66,68,69,70,71,72,73,74,75,108,119,158,159,160,161,162,163,164,165,166,167,251,273,274,],[114,-85,-88,-91,-93,-94,-95,-96,-97,-98,-99,114,-92,-79,-80,-81,-82,-83,-84,-86,-87,-89,-90,-53,-54,-55,]),'PLUS':([65,66,68,69,70,71,72,73,74,75,119,158,159,160,161,162,163,164,165,166,167,251,273,274,],[115,-88,-91,-93,-94,-95,-96,-97,-98,-99,-92,115,115,115,115,115,115,-86,-87,-89,-90,-53,-54,-55,]),'DIVIDE':([66,68,69,70,71,72,73,74,75,119,164,165,166,167,251,273,274,],[118,-91,-93,-94,-95,-96,-97,-98,-99,-92,118,118,-89,-90,-53,-54,-55,]),'INT':([86,176,195,213,223,238,260,],[131,131,131,131,131,131,131,]),'DECIMAL':([86,176,195,213,223,238,260,],[132,132,132,132,132,132,132,]),'DATE':([86,176,195,213,223,238,260,],[133,133,133,133,133,133,133,]),'DATETIME':([86,176,195,213,223,238,260,],[134,134,134,134,134,134,134,]),'NCHAR':([86,176,195,213,223,238,260,],[135,135,135,135,135,135,135,]),'NVARCHAR':([86,176,195,213,223,238,260,],[136,136,136,136,136,136,136,]),'ADD':([102,],[151,]),'NOT':([131,132,133,134,208,242,243,],[-67,-68,-69,-70,234,-71,-72,]),'NULL':([131,132,133,134,208,234,242,243,],[-67,-68,-69,-70,235,258,-71,-72,]),'PRIMARY':([131,132,133,134,208,233,235,242,243,258,],[-67,-68,-69,-70,-35,256,-34,-71,-72,-33,]),'REFERENCE':([131,132,133,134,208,233,235,242,243,258,],[-67,-68,-69,-70,-35,257,-34,-71,-72,-33,]),'COLUMN':([151,152,],[197,198,]),'RETURN':([211,],[238,]),'VALUES':([222,],[248,]),'KEY':([256,],[267,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'statements':([0,104,123,200,261,276,],[2,154,172,226,271,280,]),'statement':([2,154,172,226,271,280,],[3,3,3,3,3,3,]),'create_database_statement':([2,154,172,226,271,280,],[4,4,4,4,4,4,]),'use_statement':([2,154,172,226,271,280,],[5,5,5,5,5,5,]),'declare_statement':([2,154,172,226,271,280,],[6,6,6,6,6,6,]),'set_statement':([2,154,172,226,271,280,],[7,7,7,7,7,7,]),'create_table_statement':([2,154,172,226,271,280,],[8,8,8,8,8,8,]),'select_statement':([2,154,172,226,271,280,],[9,9,9,9,9,9,]),'insert_statement':([2,154,172,226,271,280,],[10,10,10,10,10,10,]),'create_function_statement':([2,154,172,226,271,280,],[11,11,11,11,11,11,]),'create_procedure_statement':([2,154,172,226,271,280,],[12,12,12,12,12,12,]),'alter_table_statement':([2,154,172,226,271,280,],[13,13,13,13,13,13,]),'if_statement':([2,29,32,60,63,67,76,89,93,96,97,98,99,100,105,107,109,110,111,112,113,114,115,116,117,118,143,154,156,169,172,174,183,184,185,187,189,191,203,204,226,227,255,262,271,280,],[14,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,14,75,75,14,75,75,75,75,75,75,75,75,75,14,75,75,75,14,14,]),'exec_statement':([2,154,172,226,271,280,],[15,15,15,15,15,15,]),'drop_table_statement':([2,154,172,226,271,280,],[16,16,16,16,16,16,]),'update_statement':([2,154,172,226,271,280,],[17,17,17,17,17,17,]),'while_statement':([2,154,172,226,271,280,],[18,18,18,18,18,18,]),'truncate_statement':([2,154,172,226,271,280,],[19,19,19,19,19,19,]),'delete_statement':([2,154,172,226,271,280,],[20,20,20,20,20,20,]),'assignments':([24,],[41,]),'columns':([25,150,],[43,196,]),'column':([25,91,150,],[45,140,45,]),'case_statement':([25,91,150,],[47,47,47,]),'call_function_prod':([25,91,150,],[48,48,48,]),'a':([29,32,60,76,89,93,96,97,98,99,100,143,156,169,174,183,184,185,187,189,191,203,204,227,255,262,],[59,78,106,121,138,142,145,146,147,148,149,190,201,202,207,215,216,217,218,219,220,228,229,253,266,121,]),'b':([29,32,60,76,89,93,96,97,98,99,100,105,143,156,169,174,183,184,185,187,189,191,203,204,227,255,262,],[61,61,61,61,61,61,61,61,61,61,61,155,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'c':([29,32,60,76,89,93,96,97,98,99,100,105,107,143,156,169,174,183,184,185,187,189,191,203,204,227,255,262,],[62,62,62,62,62,62,62,62,62,62,62,62,157,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'d':([29,32,60,63,76,89,93,96,97,98,99,100,105,107,143,156,169,174,183,184,185,187,189,191,203,204,227,255,262,],[64,64,64,108,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'e':([29,32,60,63,76,89,93,96,97,98,99,100,105,107,109,110,111,112,113,114,143,156,169,174,183,184,185,187,189,191,203,204,227,255,262,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,158,159,160,161,162,163,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'f':([29,32,60,63,76,89,93,96,97,98,99,100,105,107,109,110,111,112,113,114,115,116,143,156,169,174,183,184,185,187,189,191,203,204,227,255,262,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,164,165,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'g':([29,32,60,63,76,89,93,96,97,98,99,100,105,107,109,110,111,112,113,114,115,116,117,118,143,156,169,174,183,184,185,187,189,191,203,204,227,255,262,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,166,167,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'h':([29,32,60,63,67,76,89,93,96,97,98,99,100,105,107,109,110,111,112,113,114,115,116,117,118,143,156,169,174,183,184,185,187,189,191,203,204,227,255,262,],[69,69,69,69,119,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'when_statements':([49,219,],[92,245,]),'vals':([76,262,],[120,272,]),'type':([86,176,195,213,223,238,260,],[130,208,221,240,249,259,270,]),'column_assignments':([122,],[171,]),'properties':([127,],[177,]),'property':([127,210,],[178,237,]),'parameters':([128,129,],[179,181,]),'null_prod':([208,],[233,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> statements','init',1,'p_init','grammar.py',216),
  ('statements -> statements statement','statements',2,'p_statements','grammar.py',221),
  ('statements -> <empty>','statements',0,'p_statements_2','grammar.py',227),
  ('statement -> create_database_statement','statement',1,'p_statement','grammar.py',232),
  ('statement -> use_statement','statement',1,'p_statement','grammar.py',233),
  ('statement -> declare_statement','statement',1,'p_statement','grammar.py',234),
  ('statement -> set_statement','statement',1,'p_statement','grammar.py',235),
  ('statement -> create_table_statement','statement',1,'p_statement','grammar.py',236),
  ('statement -> select_statement','statement',1,'p_statement','grammar.py',237),
  ('statement -> insert_statement','statement',1,'p_statement','grammar.py',238),
  ('statement -> create_function_statement','statement',1,'p_statement','grammar.py',239),
  ('statement -> create_procedure_statement','statement',1,'p_statement','grammar.py',240),
  ('statement -> alter_table_statement','statement',1,'p_statement','grammar.py',241),
  ('statement -> if_statement','statement',1,'p_statement','grammar.py',242),
  ('statement -> exec_statement','statement',1,'p_statement','grammar.py',243),
  ('statement -> drop_table_statement','statement',1,'p_statement','grammar.py',244),
  ('statement -> update_statement','statement',1,'p_statement','grammar.py',245),
  ('statement -> while_statement','statement',1,'p_statement','grammar.py',246),
  ('statement -> truncate_statement','statement',1,'p_statement','grammar.py',247),
  ('statement -> delete_statement','statement',1,'p_statement','grammar.py',248),
  ('create_database_statement -> CREATE DATA BASE NAME SEMICOLON','create_database_statement',5,'p_create_database_statement','grammar.py',255),
  ('use_statement -> USE NAME SEMICOLON','use_statement',3,'p_use_statement','grammar.py',261),
  ('declare_statement -> DECLARE ID AS type SEMICOLON','declare_statement',5,'p_declare_statement','grammar.py',267),
  ('set_statement -> SET assignments SEMICOLON','set_statement',3,'p_set_statement','grammar.py',274),
  ('assignments -> assignments COMMA ID ASSIGN a','assignments',5,'p_assignments','grammar.py',279),
  ('assignments -> ID ASSIGN a','assignments',3,'p_assignments_2','grammar.py',285),
  ('create_table_statement -> CREATE TABLE NAME L_PAREN properties R_PAREN SEMICOLON','create_table_statement',7,'p_create_table_statement','grammar.py',293),
  ('properties -> properties COMMA property','properties',3,'p_properties','grammar.py',297),
  ('properties -> property','properties',1,'p_properties_2','grammar.py',301),
  ('property -> NAME type null_prod PRIMARY KEY','property',5,'p_property','grammar.py',305),
  ('property -> NAME type null_prod','property',3,'p_property_2','grammar.py',309),
  ('property -> NAME type null_prod REFERENCE NAME L_PAREN NAME R_PAREN','property',8,'p_property_3','grammar.py',313),
  ('null_prod -> NOT NULL','null_prod',2,'p_null_prod','grammar.py',317),
  ('null_prod -> NULL','null_prod',1,'p_null_prod_2','grammar.py',321),
  ('null_prod -> <empty>','null_prod',0,'p_null_prod_3','grammar.py',325),
  ('select_statement -> SELECT columns FROM NAME SEMICOLON','select_statement',5,'p_select_statement','grammar.py',331),
  ('select_statement -> SELECT columns FROM NAME WHERE a SEMICOLON','select_statement',7,'p_select_statement_2','grammar.py',335),
  ('insert_statement -> INSERT INTO NAME L_PAREN columns R_PAREN VALUES L_PAREN vals R_PAREN SEMICOLON','insert_statement',11,'p_insert_statement','grammar.py',340),
  ('columns -> columns COMMA column','columns',3,'p_columns','grammar.py',346),
  ('columns -> column','columns',1,'p_columns_2','grammar.py',350),
  ('column -> TIMES','column',1,'p_column','grammar.py',353),
  ('column -> NAME','column',1,'p_column','grammar.py',354),
  ('column -> case_statement','column',1,'p_column','grammar.py',355),
  ('column -> call_function_prod','column',1,'p_column','grammar.py',356),
  ('vals -> vals COMMA a','vals',3,'p_vals','grammar.py',360),
  ('vals -> a','vals',1,'p_vals_2','grammar.py',364),
  ('create_function_statement -> CREATE FUNCTION NAME L_PAREN parameters R_PAREN RETURN type AS BEGIN statements END SEMICOLON','create_function_statement',13,'p_create_function_statement','grammar.py',370),
  ('create_procedure_statement -> CREATE PROCEDURE NAME L_PAREN parameters R_PAREN AS BEGIN statements END SEMICOLON','create_procedure_statement',11,'p_create_procedure_statement','grammar.py',374),
  ('parameters -> parameters COMMA ID AS type','parameters',5,'p_parameters','grammar.py',378),
  ('parameters -> ID AS type','parameters',3,'p_parameters_2','grammar.py',382),
  ('alter_table_statement -> ALTER TABLE NAME ADD COLUMN NAME type SEMICOLON','alter_table_statement',8,'p_alter_table_statement','grammar.py',387),
  ('alter_table_statement -> ALTER TABLE NAME DROP COLUMN NAME SEMICOLON','alter_table_statement',7,'p_alter_table_statement_2','grammar.py',391),
  ('if_statement -> IF a THEN statements END IF SEMICOLON','if_statement',7,'p_if_statement','grammar.py',404),
  ('if_statement -> IF a THEN statements ELSE statements END IF SEMICOLON','if_statement',9,'p_if_statement_2','grammar.py',409),
  ('if_statement -> IF L_PAREN a COMMA a COMMA a R_PAREN SEMICOLON','if_statement',9,'p_if_statement_3','grammar.py',415),
  ('exec_statement -> EXEC NAME vals SEMICOLON','exec_statement',4,'p_exec_statement','grammar.py',420),
  ('drop_table_statement -> DROP TABLE NAME SEMICOLON','drop_table_statement',4,'p_drop_table_statement','grammar.py',425),
  ('update_statement -> UPDATE NAME SET column_assignments WHERE a SEMICOLON','update_statement',7,'p_update_statement','grammar.py',430),
  ('column_assignments -> column_assignments COMMA NAME ASSIGN a','column_assignments',5,'p_column_assignments','grammar.py',435),
  ('column_assignments -> NAME ASSIGN a','column_assignments',3,'p_column_assignments_2','grammar.py',439),
  ('while_statement -> WHILE a BEGIN statements END SEMICOLON','while_statement',6,'p_while_statement','grammar.py',444),
  ('truncate_statement -> TRUNCATE TABLE NAME SEMICOLON','truncate_statement',4,'p_truncate_statement','grammar.py',450),
  ('delete_statement -> DELETE FROM NAME WHERE a SEMICOLON','delete_statement',6,'p_delete_statement','grammar.py',455),
  ('case_statement -> CASE when_statements END NAME','case_statement',4,'p_case_statement','grammar.py',460),
  ('when_statements -> WHEN a THEN a when_statements','when_statements',5,'p_when_statement','grammar.py',463),
  ('when_statements -> ELSE THEN a','when_statements',3,'p_when_statement_2','grammar.py',466),
  ('type -> INT','type',1,'p_type','grammar.py',469),
  ('type -> DECIMAL','type',1,'p_type','grammar.py',470),
  ('type -> DATE','type',1,'p_type','grammar.py',471),
  ('type -> DATETIME','type',1,'p_type','grammar.py',472),
  ('type -> NCHAR L_PAREN a R_PAREN','type',4,'p_type_2','grammar.py',478),
  ('type -> NVARCHAR L_PAREN a R_PAREN','type',4,'p_type_2','grammar.py',479),
  ('a -> a OR b','a',3,'p_a','grammar.py',483),
  ('a -> b','a',1,'p_a_2','grammar.py',488),
  ('b -> b AND c','b',3,'p_b','grammar.py',493),
  ('b -> c','b',1,'p_b_2','grammar.py',498),
  ('c -> NOT_SIGN d','c',2,'p_c','grammar.py',503),
  ('c -> d','c',1,'p_c_2','grammar.py',508),
  ('d -> d EQUALS e','d',3,'p_d','grammar.py',513),
  ('d -> d NOT_EQ e','d',3,'p_d','grammar.py',514),
  ('d -> d LESS_THAN e','d',3,'p_d','grammar.py',515),
  ('d -> d GREATER_THAN e','d',3,'p_d','grammar.py',516),
  ('d -> d LESS_EQ e','d',3,'p_d','grammar.py',517),
  ('d -> d GREATER_EQ e','d',3,'p_d','grammar.py',518),
  ('d -> e','d',1,'p_d_2','grammar.py',524),
  ('e -> e PLUS f','e',3,'p_e','grammar.py',529),
  ('e -> e MINUS f','e',3,'p_e','grammar.py',530),
  ('e -> f','e',1,'p_e_2','grammar.py',535),
  ('f -> f TIMES g','f',3,'p_f','grammar.py',540),
  ('f -> f DIVIDE g','f',3,'p_f','grammar.py',541),
  ('f -> g','f',1,'p_f_2','grammar.py',546),
  ('g -> MINUS h','g',2,'p_g','grammar.py',551),
  ('g -> h','g',1,'p_g_2','grammar.py',556),
  ('h -> INTEGER_VALUE','h',1,'p_h','grammar.py',561),
  ('h -> DECIMAL_VALUE','h',1,'p_h_2','grammar.py',566),
  ('h -> STRING','h',1,'p_h_3','grammar.py',571),
  ('h -> ID','h',1,'p_h_4','grammar.py',576),
  ('h -> NAME','h',1,'p_h_5','grammar.py',581),
  ('h -> if_statement','h',1,'p_h_6','grammar.py',585),
  ('call_function_prod -> HOY L_PAREN R_PAREN','call_function_prod',3,'p_call_function_prod','grammar.py',589),
  ('call_function_prod -> CONCATENAR L_PAREN a COMMA a R_PAREN','call_function_prod',6,'p_call_function_prod','grammar.py',590),
  ('call_function_prod -> SUBSTRAER L_PAREN a R_PAREN','call_function_prod',4,'p_call_function_prod','grammar.py',591),
  ('call_function_prod -> CONTAR L_PAREN a R_PAREN','call_function_prod',4,'p_call_function_prod','grammar.py',592),
  ('call_function_prod -> SUMA L_PAREN a R_PAREN','call_function_prod',4,'p_call_function_prod','grammar.py',593),
  ('call_function_prod -> CAS L_PAREN a AS type R_PAREN','call_function_prod',6,'p_call_function_prod','grammar.py',594),
]
