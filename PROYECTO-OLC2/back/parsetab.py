
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALTER AND AS ASSIGN BASE BEGIN BIT CAS CASE COLUMN COMMA CONCATENAR CONTAR CREATE DATA DATE DATETIME DECIMAL DECIMAL_VALUE DECLARE DELETE DIVIDE DROP ELSE END EQUALS EXEC FROM FUNCTION GREATER_EQ GREATER_THAN HOY ID IF INSERT INT INTEGER_VALUE INTO KEY LESS_EQ LESS_THAN L_PAREN MINUS NAME NCHAR NOT NOT_EQ NOT_SIGN NULL NVARCHAR OR PLUS PRIMARY PROCEDURE REFERENCE RETURN R_PAREN SELECT SEMICOLON SET STRING SUBSTRAER SUMA TABLE THEN TIMES TRUNCATE UPDATE USE VALUES WHEN WHERE WHILEinit   : statementsstatements : statements statementstatements : statement    : create_database_statement\n                    | use_statement\n                    | declare_statement\n                    | set_statement\n                    | create_table_statement\n                    | select_statement\n                    | insert_statement\n                    | create_function_statement\n                    | create_procedure_statement\n                    | alter_table_statement\n                    | if_statement\n                    | exec_statement\n                    | drop_table_statement\n                    | case_statement\n                    | update_statement\n                    | while_statement\n                    | truncate_statement\n                    | delete_statementcreate_database_statement    : CREATE DATA BASE NAME SEMICOLONuse_statement   : USE NAME SEMICOLONdeclare_statement   : DECLARE ID AS type SEMICOLONset_statement   : SET assignments SEMICOLONassignments    : assignments COMMA ID ASSIGN aassignments    : ID ASSIGN acreate_table_statement : CREATE TABLE NAME L_PAREN properties R_PAREN SEMICOLONproperties : properties COMMA propertyproperties : propertyproperty   : NAME type null_prod PRIMARY KEYproperty   : NAME type null_prodproperty   : NAME type null_prod REFERENCE NAME L_PAREN NAME R_PARENnull_prod  : NOT NULLnull_prod  : NULLnull_prod  : select_statement   : SELECT columns FROM NAME SEMICOLONselect_statement   : SELECT columns FROM NAME WHERE a SEMICOLONinsert_statement   : INSERT INTO NAME L_PAREN columns R_PAREN VALUES L_PAREN vals R_PAREN SEMICOLONcolumns    : columns COMMA columncolumns    : columncolumn   : TIMES\n                | NAME\n                | call_function_prodvals   : vals COMMA avals   : acreate_function_statement  : CREATE FUNCTION NAME L_PAREN parameters R_PAREN RETURN type AS BEGIN statements END SEMICOLONcreate_procedure_statement : CREATE PROCEDURE NAME L_PAREN parameters R_PAREN AS BEGIN statements END SEMICOLONparameters : parameters COMMA ID AS typeparameters : ID AS typealter_table_statement  : ALTER TABLE NAME ADD COLUMN NAME type SEMICOLONalter_table_statement  : ALTER TABLE NAME DROP COLUMN NAME SEMICOLONif_statement   : IF a THEN statement END IF SEMICOLONif_statement   : IF a THEN statement ELSE statement END IF SEMICOLONif_statement   : IF L_PAREN a COMMA a COMMA a R_PAREN SEMICOLONexec_statement : EXEC NAME vals SEMICOLONdrop_table_statement   : DROP TABLE NAME SEMICOLONupdate_statement   : UPDATE NAME SET column_assignments WHERE a SEMICOLONcolumn_assignments  : column_assignments COMMA NAME ASSIGN acolumn_assignments : NAME ASSIGN awhile_statement    : WHILE a BEGIN statements END SEMICOLONtruncate_statement : TRUNCATE TABLE NAME SEMICOLONdelete_statement : DELETE FROM NAME WHERE a SEMICOLONcase_statement : CASE WHEN a THEN a when_statement ELSE THEN a ENDwhen_statement : WHEN a THEN a when_statementwhen_statement : type : INT\n            | DECIMAL\n            | BIT\n            | NCHAR L_PAREN a R_PAREN\n            | NVARCHAR L_PAREN a R_PAREN\n            | DATE\n            | DATETIMEa    : a OR ba  : bb  : b AND cb  : cc  : NOT_SIGN dc  : dd    : d EQUALS e\n            | d NOT_EQ e\n            | d LESS_THAN e\n            | d GREATER_THAN e\n            | d LESS_EQ e\n            | d GREATER_EQ e\n    d  : ee    : e PLUS f\n            | e MINUS fe  : ff    : f TIMES g\n            | f DIVIDE gf  : gg  : MINUS hg  : hh    : INTEGER_VALUE\n            | DECIMAL_VALUE\n            | STRING\n            | ID\n            | NAMEcall_function_prod   : HOY L_PAREN R_PAREN\n                            | CONCATENAR L_PAREN a COMMA a R_PAREN\n                            | SUBSTRAER L_PAREN a R_PAREN\n                            | CONTAR L_PAREN a R_PAREN\n                            | SUMA L_PAREN a R_PAREN\n                            | CAS L_PAREN a AS type R_PAREN\n    '
    
_lr_action_items = {'CREATE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,85,87,101,121,149,164,169,170,172,179,183,194,227,228,232,240,245,246,251,258,260,270,272,273,277,281,283,284,285,288,],[-3,22,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,22,-3,-57,-56,22,-62,-22,-24,-37,22,-61,-63,-28,-38,-52,-53,-58,-3,-51,22,-54,-55,-3,-64,22,-48,-39,-47,]),'USE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,85,87,101,121,149,164,169,170,172,179,183,194,227,228,232,240,245,246,251,258,260,270,272,273,277,281,283,284,285,288,],[-3,23,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,23,-3,-57,-56,23,-62,-22,-24,-37,23,-61,-63,-28,-38,-52,-53,-58,-3,-51,23,-54,-55,-3,-64,23,-48,-39,-47,]),'DECLARE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,85,87,101,121,149,164,169,170,172,179,183,194,227,228,232,240,245,246,251,258,260,270,272,273,277,281,283,284,285,288,],[-3,24,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,24,-3,-57,-56,24,-62,-22,-24,-37,24,-61,-63,-28,-38,-52,-53,-58,-3,-51,24,-54,-55,-3,-64,24,-48,-39,-47,]),'SET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,77,85,87,101,121,149,164,169,170,172,179,183,194,227,228,232,240,245,246,251,258,260,270,272,273,277,281,283,284,285,288,],[-3,25,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,120,-23,-25,25,-3,-57,-56,25,-62,-22,-24,-37,25,-61,-63,-28,-38,-52,-53,-58,-3,-51,25,-54,-55,-3,-64,25,-48,-39,-47,]),'SELECT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,85,87,101,121,149,164,169,170,172,179,183,194,227,228,232,240,245,246,251,258,260,270,272,273,277,281,283,284,285,288,],[-3,26,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,26,-3,-57,-56,26,-62,-22,-24,-37,26,-61,-63,-28,-38,-52,-53,-58,-3,-51,26,-54,-55,-3,-64,26,-48,-39,-47,]),'INSERT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,85,87,101,121,149,164,169,170,172,179,183,194,227,228,232,240,245,246,251,258,260,270,272,273,277,281,283,284,285,288,],[-3,27,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,27,-3,-57,-56,27,-62,-22,-24,-37,27,-61,-63,-28,-38,-52,-53,-58,-3,-51,27,-54,-55,-3,-64,27,-48,-39,-47,]),'ALTER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,85,87,101,121,149,164,169,170,172,179,183,194,227,228,232,240,245,246,251,258,260,270,272,273,277,281,283,284,285,288,],[-3,28,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,28,-3,-57,-56,28,-62,-22,-24,-37,28,-61,-63,-28,-38,-52,-53,-58,-3,-51,28,-54,-55,-3,-64,28,-48,-39,-47,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,85,87,101,121,149,164,169,170,172,179,183,193,194,227,228,232,240,245,246,247,251,258,260,270,272,273,277,281,283,284,285,288,],[-3,30,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,30,-3,-57,-56,30,-62,-22,-24,-37,219,30,-61,-63,-28,-38,-52,-53,261,-58,-3,-51,30,-54,-55,-3,-64,30,-48,-39,-47,]),'EXEC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,85,87,101,121,149,164,169,170,172,179,183,194,227,228,232,240,245,246,251,258,260,270,272,273,277,281,283,284,285,288,],[-3,31,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,31,-3,-57,-56,31,-62,-22,-24,-37,31,-61,-63,-28,-38,-52,-53,-58,-3,-51,31,-54,-55,-3,-64,31,-48,-39,-47,]),'DROP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,85,87,99,101,121,149,164,169,170,172,179,183,194,227,228,232,240,245,246,251,258,260,270,272,273,277,281,283,284,285,288,],[-3,29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,148,29,-3,-57,-56,29,-62,-22,-24,-37,29,-61,-63,-28,-38,-52,-53,-58,-3,-51,29,-54,-55,-3,-64,29,-48,-39,-47,]),'CASE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,85,87,101,121,149,164,169,170,172,179,183,194,227,228,232,240,245,246,251,258,260,270,272,273,277,281,283,284,285,288,],[-3,32,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,32,-3,-57,-56,32,-62,-22,-24,-37,32,-61,-63,-28,-38,-52,-53,-58,-3,-51,32,-54,-55,-3,-64,32,-48,-39,-47,]),'UPDATE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,85,87,101,121,149,164,169,170,172,179,183,194,227,228,232,240,245,246,251,258,260,270,272,273,277,281,283,284,285,288,],[-3,33,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,33,-3,-57,-56,33,-62,-22,-24,-37,33,-61,-63,-28,-38,-52,-53,-58,-3,-51,33,-54,-55,-3,-64,33,-48,-39,-47,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,85,87,101,121,149,164,169,170,172,179,183,194,227,228,232,240,245,246,251,258,260,270,272,273,277,281,283,284,285,288,],[-3,34,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,34,-3,-57,-56,34,-62,-22,-24,-37,34,-61,-63,-28,-38,-52,-53,-58,-3,-51,34,-54,-55,-3,-64,34,-48,-39,-47,]),'TRUNCATE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,85,87,101,121,149,164,169,170,172,179,183,194,227,228,232,240,245,246,251,258,260,270,272,273,277,281,283,284,285,288,],[-3,35,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,35,-3,-57,-56,35,-62,-22,-24,-37,35,-61,-63,-28,-38,-52,-53,-58,-3,-51,35,-54,-55,-3,-64,35,-48,-39,-47,]),'DELETE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,85,87,101,121,149,164,169,170,172,179,183,194,227,228,232,240,245,246,251,258,260,270,272,273,277,281,283,284,285,288,],[-3,36,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,36,-3,-57,-56,36,-62,-22,-24,-37,36,-61,-63,-28,-38,-52,-53,-58,-3,-51,36,-54,-55,-3,-64,36,-48,-39,-47,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,85,87,149,164,170,172,179,183,227,228,232,240,245,246,251,260,272,273,281,284,285,288,],[-3,0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,-57,-56,-62,-22,-24,-37,-61,-63,-28,-38,-52,-53,-58,-51,-54,-55,-64,-48,-39,-47,]),'END':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,61,62,64,65,66,68,69,70,71,72,73,74,85,87,105,116,121,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,169,170,172,179,183,220,227,228,232,240,245,246,251,258,260,270,272,273,275,277,281,283,284,285,288,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-75,-77,-79,-86,-89,-92,-94,-95,-96,-97,-98,-99,-23,-25,-78,-93,-3,-57,193,-74,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,-56,201,-62,-22,-24,-37,247,-61,-63,-28,-38,-52,-53,-58,-3,-51,278,-54,-55,281,-3,-64,287,-48,-39,-47,]),'ELSE':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,61,62,64,65,66,68,69,70,71,72,73,74,85,87,105,116,149,150,151,153,154,155,156,157,158,159,160,161,162,163,164,170,172,179,183,197,223,227,228,232,240,245,246,251,260,272,273,274,280,281,284,285,288,],[-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-75,-77,-79,-86,-89,-92,-94,-95,-96,-97,-98,-99,-23,-25,-78,-93,-57,194,-74,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,-56,-62,-22,-24,-37,-66,250,-61,-63,-28,-38,-52,-53,-58,-51,-54,-55,-66,-65,-64,-48,-39,-47,]),'DATA':([22,],[37,]),'TABLE':([22,28,29,35,],[38,57,58,79,]),'FUNCTION':([22,],[39,]),'PROCEDURE':([22,],[40,]),'NAME':([23,26,30,31,33,34,38,39,40,56,57,58,60,63,67,75,76,79,80,81,89,90,91,93,94,95,96,97,102,104,106,107,108,109,110,111,112,113,114,115,120,125,146,152,165,166,171,180,181,182,184,185,191,192,198,199,200,205,221,222,252,254,259,263,264,276,],[41,46,74,75,77,74,82,83,84,98,99,100,74,74,74,74,74,122,123,124,74,138,46,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,167,173,46,74,74,74,74,74,74,74,74,74,217,218,74,74,226,173,74,74,74,267,74,74,74,282,]),'ID':([24,25,30,34,60,63,67,75,76,88,89,93,94,95,96,97,102,104,106,107,108,109,110,111,112,113,114,115,126,127,152,165,166,171,180,181,182,184,185,198,199,207,221,222,252,259,263,264,],[42,44,73,73,73,73,73,73,73,136,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,177,177,73,73,73,73,73,73,73,73,73,73,73,235,73,73,73,73,73,73,]),'TIMES':([26,66,68,69,70,71,72,73,74,91,116,146,160,161,162,163,],[48,114,-92,-94,-95,-96,-97,-98,-99,48,-93,48,114,114,-90,-91,]),'HOY':([26,91,146,],[50,50,50,]),'CONCATENAR':([26,91,146,],[51,51,51,]),'SUBSTRAER':([26,91,146,],[52,52,52,]),'CONTAR':([26,91,146,],[53,53,53,]),'SUMA':([26,91,146,],[54,54,54,]),'CAS':([26,91,146,],[55,55,55,]),'INTO':([27,],[56,]),'L_PAREN':([30,50,51,52,53,54,55,82,83,84,98,132,133,243,267,],[60,92,93,94,95,96,97,125,126,127,146,180,181,259,276,]),'NOT_SIGN':([30,34,60,75,76,89,93,94,95,96,97,102,104,152,165,166,171,180,181,182,184,185,198,199,221,222,252,259,263,264,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'MINUS':([30,34,60,63,65,66,68,69,70,71,72,73,74,75,76,89,93,94,95,96,97,102,104,106,107,108,109,110,111,112,113,114,115,116,152,154,155,156,157,158,159,160,161,162,163,165,166,171,180,181,182,184,185,198,199,221,222,252,259,263,264,],[67,67,67,67,113,-89,-92,-94,-95,-96,-97,-98,-99,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-93,67,113,113,113,113,113,113,-87,-88,-90,-91,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'INTEGER_VALUE':([30,34,60,63,67,75,76,89,93,94,95,96,97,102,104,106,107,108,109,110,111,112,113,114,115,152,165,166,171,180,181,182,184,185,198,199,221,222,252,259,263,264,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'DECIMAL_VALUE':([30,34,60,63,67,75,76,89,93,94,95,96,97,102,104,106,107,108,109,110,111,112,113,114,115,152,165,166,171,180,181,182,184,185,198,199,221,222,252,259,263,264,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'STRING':([30,34,60,63,67,75,76,89,93,94,95,96,97,102,104,106,107,108,109,110,111,112,113,114,115,152,165,166,171,180,181,182,184,185,198,199,221,222,252,259,263,264,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'WHEN':([32,61,62,64,65,66,68,69,70,71,72,73,74,105,116,151,153,154,155,156,157,158,159,160,161,162,163,197,274,],[76,-75,-77,-79,-86,-89,-92,-94,-95,-96,-97,-98,-99,-78,-93,-74,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,222,222,]),'FROM':([36,45,46,47,48,49,139,140,186,187,188,241,242,],[80,90,-43,-41,-42,-44,-40,-100,-102,-103,-104,-101,-105,]),'BASE':([37,],[81,]),'SEMICOLON':([41,43,61,62,64,65,66,68,69,70,71,72,73,74,100,105,116,117,118,122,124,128,129,130,131,134,135,137,138,151,153,154,155,156,157,158,159,160,161,162,163,196,201,202,204,212,213,218,219,225,238,239,244,261,262,278,279,287,],[85,87,-75,-77,-79,-86,-89,-92,-94,-95,-96,-97,-98,-99,149,-78,-93,164,-46,170,172,179,-67,-68,-69,-72,-73,-27,183,-74,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,-45,227,228,232,-26,240,245,246,251,-70,-71,260,272,273,284,285,288,]),'AS':([42,61,62,64,65,66,68,69,70,71,72,73,74,105,116,129,130,131,134,135,145,151,153,154,155,156,157,158,159,160,161,162,163,177,209,235,238,239,256,],[86,-75,-77,-79,-86,-89,-92,-94,-95,-96,-97,-98,-99,-78,-93,-67,-68,-69,-72,-73,189,-74,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,208,237,257,-70,-71,268,]),'COMMA':([43,45,46,47,48,49,61,62,64,65,66,68,69,70,71,72,73,74,103,105,116,117,118,129,130,131,134,135,137,139,140,141,151,153,154,155,156,157,158,159,160,161,162,163,168,174,175,176,178,186,187,188,190,195,196,203,212,224,229,231,233,236,238,239,241,242,255,265,266,269,271,286,],[88,91,-43,-41,-42,-44,-75,-77,-79,-86,-89,-92,-94,-95,-96,-97,-98,-99,152,-78,-93,165,-46,-67,-68,-69,-72,-73,-27,-40,-100,185,-74,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,200,205,-30,207,207,-102,-103,-104,91,221,-45,-36,-26,-60,-32,-35,-29,-50,-70,-71,-101,-105,-34,-59,-31,-49,165,-33,]),'ASSIGN':([44,136,167,226,],[89,182,198,252,]),'R_PAREN':([46,47,48,49,61,62,64,65,66,68,69,70,71,72,73,74,92,105,116,118,129,130,131,134,135,139,140,142,143,144,151,153,154,155,156,157,158,159,160,161,162,163,174,175,176,178,186,187,188,190,196,203,210,211,214,215,229,231,233,236,238,239,241,242,248,255,266,269,271,282,286,],[-43,-41,-42,-44,-75,-77,-79,-86,-89,-92,-94,-95,-96,-97,-98,-99,140,-78,-93,-46,-67,-68,-69,-72,-73,-40,-100,186,187,188,-74,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,204,-30,206,209,-102,-103,-104,216,-45,-36,238,239,241,242,-32,-35,-29,-50,-70,-71,-101,-105,262,-34,-31,-49,279,286,-33,]),'THEN':([59,61,62,64,65,66,68,69,70,71,72,73,74,105,116,119,151,153,154,155,156,157,158,159,160,161,162,163,249,250,],[101,-75,-77,-79,-86,-89,-92,-94,-95,-96,-97,-98,-99,-78,-93,166,-74,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,263,264,]),'OR':([59,61,62,64,65,66,68,69,70,71,72,73,74,78,103,105,116,118,119,137,141,142,143,144,145,151,153,154,155,156,157,158,159,160,161,162,163,195,196,197,202,210,211,212,213,214,224,225,248,249,265,274,275,],[102,-75,-77,-79,-86,-89,-92,-94,-95,-96,-97,-98,-99,102,102,-78,-93,102,102,102,102,102,102,102,102,-74,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'BEGIN':([61,62,64,65,66,68,69,70,71,72,73,74,78,105,116,151,153,154,155,156,157,158,159,160,161,162,163,237,268,],[-75,-77,-79,-86,-89,-92,-94,-95,-96,-97,-98,-99,121,-78,-93,-74,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,258,277,]),'WHERE':([61,62,64,65,66,68,69,70,71,72,73,74,105,116,123,138,151,153,154,155,156,157,158,159,160,161,162,163,168,224,265,],[-75,-77,-79,-86,-89,-92,-94,-95,-96,-97,-98,-99,-78,-93,171,184,-74,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,199,-60,-59,]),'AND':([61,62,64,65,66,68,69,70,71,72,73,74,105,116,151,153,154,155,156,157,158,159,160,161,162,163,],[104,-77,-79,-86,-89,-92,-94,-95,-96,-97,-98,-99,-78,-93,104,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,]),'EQUALS':([64,65,66,68,69,70,71,72,73,74,105,116,154,155,156,157,158,159,160,161,162,163,],[106,-86,-89,-92,-94,-95,-96,-97,-98,-99,106,-93,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,]),'NOT_EQ':([64,65,66,68,69,70,71,72,73,74,105,116,154,155,156,157,158,159,160,161,162,163,],[107,-86,-89,-92,-94,-95,-96,-97,-98,-99,107,-93,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,]),'LESS_THAN':([64,65,66,68,69,70,71,72,73,74,105,116,154,155,156,157,158,159,160,161,162,163,],[108,-86,-89,-92,-94,-95,-96,-97,-98,-99,108,-93,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,]),'GREATER_THAN':([64,65,66,68,69,70,71,72,73,74,105,116,154,155,156,157,158,159,160,161,162,163,],[109,-86,-89,-92,-94,-95,-96,-97,-98,-99,109,-93,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,]),'LESS_EQ':([64,65,66,68,69,70,71,72,73,74,105,116,154,155,156,157,158,159,160,161,162,163,],[110,-86,-89,-92,-94,-95,-96,-97,-98,-99,110,-93,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,]),'GREATER_EQ':([64,65,66,68,69,70,71,72,73,74,105,116,154,155,156,157,158,159,160,161,162,163,],[111,-86,-89,-92,-94,-95,-96,-97,-98,-99,111,-93,-80,-81,-82,-83,-84,-85,-87,-88,-90,-91,]),'PLUS':([65,66,68,69,70,71,72,73,74,116,154,155,156,157,158,159,160,161,162,163,],[112,-89,-92,-94,-95,-96,-97,-98,-99,-93,112,112,112,112,112,112,-87,-88,-90,-91,]),'DIVIDE':([66,68,69,70,71,72,73,74,116,160,161,162,163,],[115,-92,-94,-95,-96,-97,-98,-99,-93,115,115,-90,-91,]),'INT':([86,173,189,208,217,234,257,],[129,129,129,129,129,129,129,]),'DECIMAL':([86,173,189,208,217,234,257,],[130,130,130,130,130,130,130,]),'BIT':([86,173,189,208,217,234,257,],[131,131,131,131,131,131,131,]),'NCHAR':([86,173,189,208,217,234,257,],[132,132,132,132,132,132,132,]),'NVARCHAR':([86,173,189,208,217,234,257,],[133,133,133,133,133,133,133,]),'DATE':([86,173,189,208,217,234,257,],[134,134,134,134,134,134,134,]),'DATETIME':([86,173,189,208,217,234,257,],[135,135,135,135,135,135,135,]),'ADD':([99,],[147,]),'NOT':([129,130,131,134,135,203,238,239,],[-67,-68,-69,-72,-73,230,-70,-71,]),'NULL':([129,130,131,134,135,203,230,238,239,],[-67,-68,-69,-72,-73,231,255,-70,-71,]),'PRIMARY':([129,130,131,134,135,203,229,231,238,239,255,],[-67,-68,-69,-72,-73,-36,253,-35,-70,-71,-34,]),'REFERENCE':([129,130,131,134,135,203,229,231,238,239,255,],[-67,-68,-69,-72,-73,-36,254,-35,-70,-71,-34,]),'COLUMN':([147,148,],[191,192,]),'RETURN':([206,],[234,]),'VALUES':([216,],[243,]),'KEY':([253,],[266,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'statements':([0,121,258,277,],[2,169,270,283,]),'statement':([2,101,169,194,270,283,],[3,150,3,220,3,3,]),'create_database_statement':([2,101,169,194,270,283,],[4,4,4,4,4,4,]),'use_statement':([2,101,169,194,270,283,],[5,5,5,5,5,5,]),'declare_statement':([2,101,169,194,270,283,],[6,6,6,6,6,6,]),'set_statement':([2,101,169,194,270,283,],[7,7,7,7,7,7,]),'create_table_statement':([2,101,169,194,270,283,],[8,8,8,8,8,8,]),'select_statement':([2,101,169,194,270,283,],[9,9,9,9,9,9,]),'insert_statement':([2,101,169,194,270,283,],[10,10,10,10,10,10,]),'create_function_statement':([2,101,169,194,270,283,],[11,11,11,11,11,11,]),'create_procedure_statement':([2,101,169,194,270,283,],[12,12,12,12,12,12,]),'alter_table_statement':([2,101,169,194,270,283,],[13,13,13,13,13,13,]),'if_statement':([2,101,169,194,270,283,],[14,14,14,14,14,14,]),'exec_statement':([2,101,169,194,270,283,],[15,15,15,15,15,15,]),'drop_table_statement':([2,101,169,194,270,283,],[16,16,16,16,16,16,]),'case_statement':([2,101,169,194,270,283,],[17,17,17,17,17,17,]),'update_statement':([2,101,169,194,270,283,],[18,18,18,18,18,18,]),'while_statement':([2,101,169,194,270,283,],[19,19,19,19,19,19,]),'truncate_statement':([2,101,169,194,270,283,],[20,20,20,20,20,20,]),'delete_statement':([2,101,169,194,270,283,],[21,21,21,21,21,21,]),'assignments':([25,],[43,]),'columns':([26,146,],[45,190,]),'column':([26,91,146,],[47,139,47,]),'call_function_prod':([26,91,146,],[49,49,49,]),'a':([30,34,60,75,76,89,93,94,95,96,97,152,165,166,171,180,181,182,184,185,198,199,221,222,252,259,263,264,],[59,78,103,118,119,137,141,142,143,144,145,195,196,197,202,210,211,212,213,214,224,225,248,249,265,118,274,275,]),'b':([30,34,60,75,76,89,93,94,95,96,97,102,152,165,166,171,180,181,182,184,185,198,199,221,222,252,259,263,264,],[61,61,61,61,61,61,61,61,61,61,61,151,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'c':([30,34,60,75,76,89,93,94,95,96,97,102,104,152,165,166,171,180,181,182,184,185,198,199,221,222,252,259,263,264,],[62,62,62,62,62,62,62,62,62,62,62,62,153,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'d':([30,34,60,63,75,76,89,93,94,95,96,97,102,104,152,165,166,171,180,181,182,184,185,198,199,221,222,252,259,263,264,],[64,64,64,105,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'e':([30,34,60,63,75,76,89,93,94,95,96,97,102,104,106,107,108,109,110,111,152,165,166,171,180,181,182,184,185,198,199,221,222,252,259,263,264,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,154,155,156,157,158,159,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'f':([30,34,60,63,75,76,89,93,94,95,96,97,102,104,106,107,108,109,110,111,112,113,152,165,166,171,180,181,182,184,185,198,199,221,222,252,259,263,264,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,160,161,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'g':([30,34,60,63,75,76,89,93,94,95,96,97,102,104,106,107,108,109,110,111,112,113,114,115,152,165,166,171,180,181,182,184,185,198,199,221,222,252,259,263,264,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,162,163,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'h':([30,34,60,63,67,75,76,89,93,94,95,96,97,102,104,106,107,108,109,110,111,112,113,114,115,152,165,166,171,180,181,182,184,185,198,199,221,222,252,259,263,264,],[69,69,69,69,116,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'vals':([75,259,],[117,271,]),'type':([86,173,189,208,217,234,257,],[128,203,215,236,244,256,269,]),'column_assignments':([120,],[168,]),'properties':([125,],[174,]),'property':([125,205,],[175,233,]),'parameters':([126,127,],[176,178,]),'when_statement':([197,274,],[223,280,]),'null_prod':([203,],[229,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> statements','init',1,'p_init','grammar.py',198),
  ('statements -> statements statement','statements',2,'p_statements','grammar.py',202),
  ('statements -> <empty>','statements',0,'p_statements_2','grammar.py',206),
  ('statement -> create_database_statement','statement',1,'p_statement','grammar.py',210),
  ('statement -> use_statement','statement',1,'p_statement','grammar.py',211),
  ('statement -> declare_statement','statement',1,'p_statement','grammar.py',212),
  ('statement -> set_statement','statement',1,'p_statement','grammar.py',213),
  ('statement -> create_table_statement','statement',1,'p_statement','grammar.py',214),
  ('statement -> select_statement','statement',1,'p_statement','grammar.py',215),
  ('statement -> insert_statement','statement',1,'p_statement','grammar.py',216),
  ('statement -> create_function_statement','statement',1,'p_statement','grammar.py',217),
  ('statement -> create_procedure_statement','statement',1,'p_statement','grammar.py',218),
  ('statement -> alter_table_statement','statement',1,'p_statement','grammar.py',219),
  ('statement -> if_statement','statement',1,'p_statement','grammar.py',220),
  ('statement -> exec_statement','statement',1,'p_statement','grammar.py',221),
  ('statement -> drop_table_statement','statement',1,'p_statement','grammar.py',222),
  ('statement -> case_statement','statement',1,'p_statement','grammar.py',223),
  ('statement -> update_statement','statement',1,'p_statement','grammar.py',224),
  ('statement -> while_statement','statement',1,'p_statement','grammar.py',225),
  ('statement -> truncate_statement','statement',1,'p_statement','grammar.py',226),
  ('statement -> delete_statement','statement',1,'p_statement','grammar.py',227),
  ('create_database_statement -> CREATE DATA BASE NAME SEMICOLON','create_database_statement',5,'p_create_database_statement','grammar.py',233),
  ('use_statement -> USE NAME SEMICOLON','use_statement',3,'p_use_statement','grammar.py',238),
  ('declare_statement -> DECLARE ID AS type SEMICOLON','declare_statement',5,'p_declare_statement','grammar.py',243),
  ('set_statement -> SET assignments SEMICOLON','set_statement',3,'p_set_statement','grammar.py',248),
  ('assignments -> assignments COMMA ID ASSIGN a','assignments',5,'p_assignments','grammar.py',253),
  ('assignments -> ID ASSIGN a','assignments',3,'p_assignments_2','grammar.py',257),
  ('create_table_statement -> CREATE TABLE NAME L_PAREN properties R_PAREN SEMICOLON','create_table_statement',7,'p_create_table_statement','grammar.py',262),
  ('properties -> properties COMMA property','properties',3,'p_properties','grammar.py',266),
  ('properties -> property','properties',1,'p_properties_2','grammar.py',269),
  ('property -> NAME type null_prod PRIMARY KEY','property',5,'p_property','grammar.py',273),
  ('property -> NAME type null_prod','property',3,'p_property_2','grammar.py',277),
  ('property -> NAME type null_prod REFERENCE NAME L_PAREN NAME R_PAREN','property',8,'p_property_3','grammar.py',281),
  ('null_prod -> NOT NULL','null_prod',2,'p_null_prod','grammar.py',285),
  ('null_prod -> NULL','null_prod',1,'p_null_prod_2','grammar.py',288),
  ('null_prod -> <empty>','null_prod',0,'p_null_prod_3','grammar.py',292),
  ('select_statement -> SELECT columns FROM NAME SEMICOLON','select_statement',5,'p_select_statement','grammar.py',297),
  ('select_statement -> SELECT columns FROM NAME WHERE a SEMICOLON','select_statement',7,'p_select_statement_2','grammar.py',301),
  ('insert_statement -> INSERT INTO NAME L_PAREN columns R_PAREN VALUES L_PAREN vals R_PAREN SEMICOLON','insert_statement',11,'p_insert_statement','grammar.py',307),
  ('columns -> columns COMMA column','columns',3,'p_columns','grammar.py',313),
  ('columns -> column','columns',1,'p_columns_2','grammar.py',317),
  ('column -> TIMES','column',1,'p_column','grammar.py',321),
  ('column -> NAME','column',1,'p_column','grammar.py',322),
  ('column -> call_function_prod','column',1,'p_column','grammar.py',323),
  ('vals -> vals COMMA a','vals',3,'p_vals','grammar.py',327),
  ('vals -> a','vals',1,'p_vals_2','grammar.py',331),
  ('create_function_statement -> CREATE FUNCTION NAME L_PAREN parameters R_PAREN RETURN type AS BEGIN statements END SEMICOLON','create_function_statement',13,'p_create_function_statement','grammar.py',336),
  ('create_procedure_statement -> CREATE PROCEDURE NAME L_PAREN parameters R_PAREN AS BEGIN statements END SEMICOLON','create_procedure_statement',11,'p_create_procedure_statement','grammar.py',340),
  ('parameters -> parameters COMMA ID AS type','parameters',5,'p_parameters','grammar.py',343),
  ('parameters -> ID AS type','parameters',3,'p_parameters_2','grammar.py',347),
  ('alter_table_statement -> ALTER TABLE NAME ADD COLUMN NAME type SEMICOLON','alter_table_statement',8,'p_alter_table_statement','grammar.py',351),
  ('alter_table_statement -> ALTER TABLE NAME DROP COLUMN NAME SEMICOLON','alter_table_statement',7,'p_alter_table_statement_2','grammar.py',355),
  ('if_statement -> IF a THEN statement END IF SEMICOLON','if_statement',7,'p_if_statement','grammar.py',368),
  ('if_statement -> IF a THEN statement ELSE statement END IF SEMICOLON','if_statement',9,'p_if_statement2','grammar.py',371),
  ('if_statement -> IF L_PAREN a COMMA a COMMA a R_PAREN SEMICOLON','if_statement',9,'p_if_statement3','grammar.py',375),
  ('exec_statement -> EXEC NAME vals SEMICOLON','exec_statement',4,'p_exec_statement','grammar.py',381),
  ('drop_table_statement -> DROP TABLE NAME SEMICOLON','drop_table_statement',4,'p_drop_table_statement','grammar.py',386),
  ('update_statement -> UPDATE NAME SET column_assignments WHERE a SEMICOLON','update_statement',7,'p_update_statement','grammar.py',391),
  ('column_assignments -> column_assignments COMMA NAME ASSIGN a','column_assignments',5,'p_column_assignments','grammar.py',395),
  ('column_assignments -> NAME ASSIGN a','column_assignments',3,'p_column_assignments_2','grammar.py',399),
  ('while_statement -> WHILE a BEGIN statements END SEMICOLON','while_statement',6,'p_while_statement','grammar.py',405),
  ('truncate_statement -> TRUNCATE TABLE NAME SEMICOLON','truncate_statement',4,'p_truncate_statement','grammar.py',411),
  ('delete_statement -> DELETE FROM NAME WHERE a SEMICOLON','delete_statement',6,'p_delete_statement','grammar.py',416),
  ('case_statement -> CASE WHEN a THEN a when_statement ELSE THEN a END','case_statement',10,'p_case_statement','grammar.py',421),
  ('when_statement -> WHEN a THEN a when_statement','when_statement',5,'p_when_statement','grammar.py',424),
  ('when_statement -> <empty>','when_statement',0,'p_when_statement2','grammar.py',427),
  ('type -> INT','type',1,'p_type','grammar.py',430),
  ('type -> DECIMAL','type',1,'p_type','grammar.py',431),
  ('type -> BIT','type',1,'p_type','grammar.py',432),
  ('type -> NCHAR L_PAREN a R_PAREN','type',4,'p_type','grammar.py',433),
  ('type -> NVARCHAR L_PAREN a R_PAREN','type',4,'p_type','grammar.py',434),
  ('type -> DATE','type',1,'p_type','grammar.py',435),
  ('type -> DATETIME','type',1,'p_type','grammar.py',436),
  ('a -> a OR b','a',3,'p_a','grammar.py',439),
  ('a -> b','a',1,'p_a_2','grammar.py',442),
  ('b -> b AND c','b',3,'p_b','grammar.py',445),
  ('b -> c','b',1,'p_b_2','grammar.py',449),
  ('c -> NOT_SIGN d','c',2,'p_c','grammar.py',453),
  ('c -> d','c',1,'p_c_2','grammar.py',457),
  ('d -> d EQUALS e','d',3,'p_d','grammar.py',461),
  ('d -> d NOT_EQ e','d',3,'p_d','grammar.py',462),
  ('d -> d LESS_THAN e','d',3,'p_d','grammar.py',463),
  ('d -> d GREATER_THAN e','d',3,'p_d','grammar.py',464),
  ('d -> d LESS_EQ e','d',3,'p_d','grammar.py',465),
  ('d -> d GREATER_EQ e','d',3,'p_d','grammar.py',466),
  ('d -> e','d',1,'p_d_2','grammar.py',471),
  ('e -> e PLUS f','e',3,'p_e','grammar.py',475),
  ('e -> e MINUS f','e',3,'p_e','grammar.py',476),
  ('e -> f','e',1,'p_e_2','grammar.py',480),
  ('f -> f TIMES g','f',3,'p_f','grammar.py',484),
  ('f -> f DIVIDE g','f',3,'p_f','grammar.py',485),
  ('f -> g','f',1,'p_f_2','grammar.py',489),
  ('g -> MINUS h','g',2,'p_g','grammar.py',493),
  ('g -> h','g',1,'p_g_2','grammar.py',497),
  ('h -> INTEGER_VALUE','h',1,'p_h','grammar.py',501),
  ('h -> DECIMAL_VALUE','h',1,'p_h','grammar.py',502),
  ('h -> STRING','h',1,'p_h','grammar.py',503),
  ('h -> ID','h',1,'p_h','grammar.py',504),
  ('h -> NAME','h',1,'p_h','grammar.py',505),
  ('call_function_prod -> HOY L_PAREN R_PAREN','call_function_prod',3,'p_call_function_prod','grammar.py',509),
  ('call_function_prod -> CONCATENAR L_PAREN a COMMA a R_PAREN','call_function_prod',6,'p_call_function_prod','grammar.py',510),
  ('call_function_prod -> SUBSTRAER L_PAREN a R_PAREN','call_function_prod',4,'p_call_function_prod','grammar.py',511),
  ('call_function_prod -> CONTAR L_PAREN a R_PAREN','call_function_prod',4,'p_call_function_prod','grammar.py',512),
  ('call_function_prod -> SUMA L_PAREN a R_PAREN','call_function_prod',4,'p_call_function_prod','grammar.py',513),
  ('call_function_prod -> CAS L_PAREN a AS type R_PAREN','call_function_prod',6,'p_call_function_prod','grammar.py',514),
]
