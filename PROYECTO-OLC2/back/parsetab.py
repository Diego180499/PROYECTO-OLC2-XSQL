
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALTER AND AS ASSIGN BASE BEGIN BIT CASE CAST COLUMN COMMA CONCATENAR CONTAR CREATE DATA DATE DATETIME DECIMAL DECIMAL_VALUE DECLARE DELETE DIVIDE DROP ELSE END EQUALS EXEC FROM FUNCTION GREATER_EQ GREATER_THAN HOY ID IF INSERT INT INTEGER_VALUE INTO KEY LESS_EQ LESS_THAN L_PAREN MINUS NAME NCHAR NOT NOT_EQ NOT_SIGN NULL NVARCHAR OR PLUS PRIMARY PROCEDURE REFERENCE RETURN R_PAREN SELECT SEMICOLON SET STRING SUBSTRAER SUMA TABLE THEN TIMES TRUNCATE UPDATE USE VALUES WHEN WHERE WHILEinit   : statementsstatements : statements statementstatements : statement    : create_database_statement\n                    | use_statement\n                    | declare_statement\n                    | set_statement\n                    | create_table_statement\n                    | select_statement\n                    | insert_statement\n                    | create_function_statement\n                    | create_procedure_statement\n                    | alter_table_statement\n                    | if_statement\n                    | exec_statement\n                    | drop_table_statement\n                    | case_statement\n                    | update_statement\n                    | while_statement\n                    | truncate_statement\n                    | delete_statementcreate_database_statement    : CREATE DATA BASE NAME SEMICOLONuse_statement   : USE NAME SEMICOLONdeclare_statement   : DECLARE ID AS type SEMICOLONset_statement   : SET assignments SEMICOLONassignments    : assignments COMMA ID ASSIGN aassignments    : ID ASSIGN acreate_table_statement : CREATE TABLE NAME L_PAREN properties R_PAREN SEMICOLONproperties : properties COMMA propertyproperties : propertyproperty   : NAME type null_prod PRIMARY KEYproperty   : NAME type null_prodproperty   : NAME type null_prod REFERENCE NAME L_PAREN NAME R_PARENnull_prod  : NOT NULLnull_prod  : NULLnull_prod  : select_statement   : SELECT columns FROM NAME SEMICOLONselect_statement   : SELECT columns FROM NAME WHERE a SEMICOLONinsert_statement   : INSERT INTO NAME L_PAREN columns R_PAREN VALUES L_PAREN vals R_PAREN SEMICOLONcolumns    : columns COMMA columncolumns    : columncolumn   : TIMES\n                | NAME\n                | call_function_prodvals   : vals COMMA avals   : acreate_function_statement  : CREATE FUNCTION NAME L_PAREN parameters R_PAREN RETURN type AS BEGIN statements END SEMICOLONcreate_procedure_statement : CREATE PROCEDURE NAME L_PAREN parameters R_PAREN AS BEGIN statements END SEMICOLONparameters : parameters COMMA ID AS typeparameters : ID AS typealter_table_statement  : ALTER TABLE NAME ADD COLUMN NAME type SEMICOLONalter_table_statement  : ALTER TABLE NAME DROP COLUMN NAME SEMICOLONif_statement   : IF L_PAREN a COMMA a COMMA a R_PAREN SEMICOLONexec_statement : EXEC NAME vals SEMICOLONdrop_table_statement   : DROP TABLE NAME SEMICOLONupdate_statement   : UPDATE NAME SET column_assignments WHERE a SEMICOLONcolumn_assignments  : column_assignments COMMA NAME ASSIGN acolumn_assignments : NAME ASSIGN awhile_statement    : WHILE a BEGIN statements END SEMICOLONtruncate_statement : TRUNCATE TABLE NAME SEMICOLONdelete_statement : DELETE FROM NAME WHERE a SEMICOLONcase_statement : CASE WHEN a THEN a when_statement ELSE THEN a ENDwhen_statement : WHEN a THEN a when_statementwhen_statement : type : INT\n            | DECIMAL\n            | BIT\n            | NCHAR\n            | NVARCHAR\n            | DATE\n            | DATETIMEa    : a OR ba  : bb  : b AND cb  : cc  : NOT_SIGN dc  : dd    : d EQUALS e\n            | d NOT_EQ e\n            | d LESS_THAN e\n            | d GREATER_THAN e\n            | d LESS_EQ e\n            | d GREATER_EQ e\n    d  : ee    : e PLUS f\n            | e MINUS fe  : ff    : f TIMES g\n            | f DIVIDE gf  : gg  : MINUS hg  : hh    : INTEGER_VALUE\n            | DECIMAL_VALUE\n            | STRING\n            | IDcall_function_prod   : HOY L_PAREN R_PAREN\n                            | CONCATENAR L_PAREN a COMMA a R_PAREN\n                            | SUBSTRAER L_PAREN a R_PAREN\n                            | CONTAR L_PAREN a R_PAREN\n                            | SUMA L_PAREN a R_PAREN\n                            | CAST L_PAREN a AS type R_PAREN\n    '
    
_lr_action_items = {'CREATE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,83,85,104,146,148,153,166,168,175,177,215,216,220,226,231,235,242,244,253,255,259,263,265,266,267,270,],[-3,22,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,-3,-55,-54,22,-60,-22,-24,-37,-59,-61,-28,-38,-52,-56,-3,-51,22,-53,-3,-62,22,-48,-39,-47,]),'USE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,83,85,104,146,148,153,166,168,175,177,215,216,220,226,231,235,242,244,253,255,259,263,265,266,267,270,],[-3,23,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,-3,-55,-54,23,-60,-22,-24,-37,-59,-61,-28,-38,-52,-56,-3,-51,23,-53,-3,-62,23,-48,-39,-47,]),'DECLARE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,83,85,104,146,148,153,166,168,175,177,215,216,220,226,231,235,242,244,253,255,259,263,265,266,267,270,],[-3,24,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,-3,-55,-54,24,-60,-22,-24,-37,-59,-61,-28,-38,-52,-56,-3,-51,24,-53,-3,-62,24,-48,-39,-47,]),'SET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,62,83,85,104,146,148,153,166,168,175,177,215,216,220,226,231,235,242,244,253,255,259,263,265,266,267,270,],[-3,25,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,103,-23,-25,-3,-55,-54,25,-60,-22,-24,-37,-59,-61,-28,-38,-52,-56,-3,-51,25,-53,-3,-62,25,-48,-39,-47,]),'SELECT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,83,85,104,146,148,153,166,168,175,177,215,216,220,226,231,235,242,244,253,255,259,263,265,266,267,270,],[-3,26,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,-3,-55,-54,26,-60,-22,-24,-37,-59,-61,-28,-38,-52,-56,-3,-51,26,-53,-3,-62,26,-48,-39,-47,]),'INSERT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,83,85,104,146,148,153,166,168,175,177,215,216,220,226,231,235,242,244,253,255,259,263,265,266,267,270,],[-3,27,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,-3,-55,-54,27,-60,-22,-24,-37,-59,-61,-28,-38,-52,-56,-3,-51,27,-53,-3,-62,27,-48,-39,-47,]),'ALTER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,83,85,104,146,148,153,166,168,175,177,215,216,220,226,231,235,242,244,253,255,259,263,265,266,267,270,],[-3,28,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,-3,-55,-54,28,-60,-22,-24,-37,-59,-61,-28,-38,-52,-56,-3,-51,28,-53,-3,-62,28,-48,-39,-47,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,83,85,104,146,148,153,166,168,175,177,215,216,220,226,231,235,242,244,253,255,259,263,265,266,267,270,],[-3,30,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,-3,-55,-54,30,-60,-22,-24,-37,-59,-61,-28,-38,-52,-56,-3,-51,30,-53,-3,-62,30,-48,-39,-47,]),'EXEC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,83,85,104,146,148,153,166,168,175,177,215,216,220,226,231,235,242,244,253,255,259,263,265,266,267,270,],[-3,31,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,-3,-55,-54,31,-60,-22,-24,-37,-59,-61,-28,-38,-52,-56,-3,-51,31,-53,-3,-62,31,-48,-39,-47,]),'DROP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,83,85,97,104,146,148,153,166,168,175,177,215,216,220,226,231,235,242,244,253,255,259,263,265,266,267,270,],[-3,29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,145,-3,-55,-54,29,-60,-22,-24,-37,-59,-61,-28,-38,-52,-56,-3,-51,29,-53,-3,-62,29,-48,-39,-47,]),'CASE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,83,85,104,146,148,153,166,168,175,177,215,216,220,226,231,235,242,244,253,255,259,263,265,266,267,270,],[-3,32,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,-3,-55,-54,32,-60,-22,-24,-37,-59,-61,-28,-38,-52,-56,-3,-51,32,-53,-3,-62,32,-48,-39,-47,]),'UPDATE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,83,85,104,146,148,153,166,168,175,177,215,216,220,226,231,235,242,244,253,255,259,263,265,266,267,270,],[-3,33,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,-3,-55,-54,33,-60,-22,-24,-37,-59,-61,-28,-38,-52,-56,-3,-51,33,-53,-3,-62,33,-48,-39,-47,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,83,85,104,146,148,153,166,168,175,177,215,216,220,226,231,235,242,244,253,255,259,263,265,266,267,270,],[-3,34,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,-3,-55,-54,34,-60,-22,-24,-37,-59,-61,-28,-38,-52,-56,-3,-51,34,-53,-3,-62,34,-48,-39,-47,]),'TRUNCATE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,83,85,104,146,148,153,166,168,175,177,215,216,220,226,231,235,242,244,253,255,259,263,265,266,267,270,],[-3,35,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,-3,-55,-54,35,-60,-22,-24,-37,-59,-61,-28,-38,-52,-56,-3,-51,35,-53,-3,-62,35,-48,-39,-47,]),'DELETE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,83,85,104,146,148,153,166,168,175,177,215,216,220,226,231,235,242,244,253,255,259,263,265,266,267,270,],[-3,36,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,-3,-55,-54,36,-60,-22,-24,-37,-59,-61,-28,-38,-52,-56,-3,-51,36,-53,-3,-62,36,-48,-39,-47,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,83,85,146,148,166,168,175,177,215,216,220,226,231,235,244,255,263,266,267,270,],[-3,0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-23,-25,-55,-54,-60,-22,-24,-37,-59,-61,-28,-38,-52,-56,-51,-53,-62,-48,-39,-47,]),'END':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,64,65,67,68,69,71,72,73,74,75,76,83,85,104,107,118,146,148,153,154,155,156,157,158,159,160,161,162,163,164,165,166,168,175,177,215,216,220,226,231,235,242,244,253,255,257,259,263,265,266,267,270,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-73,-75,-77,-84,-87,-90,-92,-93,-94,-95,-96,-23,-25,-3,-76,-91,-55,-54,193,-72,-74,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,-60,-22,-24,-37,-59,-61,-28,-38,-52,-56,-3,-51,260,-53,263,-3,-62,269,-48,-39,-47,]),'DATA':([22,],[37,]),'TABLE':([22,28,29,35,],[38,57,58,77,]),'FUNCTION':([22,],[39,]),'PROCEDURE':([22,],[40,]),'NAME':([23,26,31,33,38,39,40,56,57,58,77,78,79,88,89,103,122,143,185,186,192,197,238,258,],[41,46,60,62,80,81,82,96,97,98,119,120,121,135,46,151,169,46,207,208,214,169,250,264,]),'ID':([24,25,34,59,60,61,66,70,86,87,91,92,93,94,95,105,106,108,109,110,111,112,113,114,115,116,117,123,124,147,149,150,167,176,178,179,190,191,199,209,210,236,243,246,247,],[42,44,76,76,76,76,76,76,133,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,173,173,76,76,76,76,76,76,76,76,76,223,76,76,76,76,76,76,]),'TIMES':([26,69,71,72,73,74,75,76,89,118,143,162,163,164,165,],[48,116,-90,-92,-93,-94,-95,-96,48,-91,48,116,116,-88,-89,]),'HOY':([26,89,143,],[50,50,50,]),'CONCATENAR':([26,89,143,],[51,51,51,]),'SUBSTRAER':([26,89,143,],[52,52,52,]),'CONTAR':([26,89,143,],[53,53,53,]),'SUMA':([26,89,143,],[54,54,54,]),'CAST':([26,89,143,],[55,55,55,]),'INTO':([27,],[56,]),'L_PAREN':([30,50,51,52,53,54,55,80,81,82,96,229,250,],[59,90,91,92,93,94,95,122,123,124,143,243,258,]),'WHEN':([32,64,65,67,68,69,71,72,73,74,75,76,107,118,154,155,156,157,158,159,160,161,162,163,164,165,189,256,],[61,-73,-75,-77,-84,-87,-90,-92,-93,-94,-95,-96,-76,-91,-72,-74,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,210,210,]),'NOT_SIGN':([34,59,60,61,87,91,92,93,94,95,105,106,147,149,150,167,176,178,179,190,191,209,210,236,243,246,247,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'MINUS':([34,59,60,61,66,68,69,71,72,73,74,75,76,87,91,92,93,94,95,105,106,108,109,110,111,112,113,114,115,116,117,118,147,149,150,156,157,158,159,160,161,162,163,164,165,167,176,178,179,190,191,209,210,236,243,246,247,],[70,70,70,70,70,115,-87,-90,-92,-93,-94,-95,-96,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-91,70,70,70,115,115,115,115,115,115,-85,-86,-88,-89,70,70,70,70,70,70,70,70,70,70,70,70,]),'INTEGER_VALUE':([34,59,60,61,66,70,87,91,92,93,94,95,105,106,108,109,110,111,112,113,114,115,116,117,147,149,150,167,176,178,179,190,191,209,210,236,243,246,247,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'DECIMAL_VALUE':([34,59,60,61,66,70,87,91,92,93,94,95,105,106,108,109,110,111,112,113,114,115,116,117,147,149,150,167,176,178,179,190,191,209,210,236,243,246,247,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'STRING':([34,59,60,61,66,70,87,91,92,93,94,95,105,106,108,109,110,111,112,113,114,115,116,117,147,149,150,167,176,178,179,190,191,209,210,236,243,246,247,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'FROM':([36,45,46,47,48,49,136,137,180,181,182,227,228,],[78,88,-43,-41,-42,-44,-40,-97,-99,-100,-101,-98,-102,]),'BASE':([37,],[79,]),'SEMICOLON':([41,43,64,65,67,68,69,71,72,73,74,75,76,98,100,101,107,118,119,121,125,126,127,128,129,130,131,132,134,135,154,155,156,157,158,159,160,161,162,163,164,165,188,193,194,196,202,203,208,213,230,245,260,261,269,],[83,85,-73,-75,-77,-84,-87,-90,-92,-93,-94,-95,-96,146,148,-46,-76,-91,166,168,175,-65,-66,-67,-68,-69,-70,-71,-27,177,-72,-74,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,-45,215,216,220,-26,226,231,235,244,255,266,267,270,]),'AS':([42,64,65,67,68,69,71,72,73,74,75,76,107,118,126,127,128,129,130,131,132,142,154,155,156,157,158,159,160,161,162,163,164,165,173,201,223,240,],[84,-73,-75,-77,-84,-87,-90,-92,-93,-94,-95,-96,-76,-91,-65,-66,-67,-68,-69,-70,-71,183,-72,-74,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,200,225,241,251,]),'COMMA':([43,45,46,47,48,49,64,65,67,68,69,71,72,73,74,75,76,99,100,101,107,118,126,127,128,129,130,131,132,134,136,137,138,152,154,155,156,157,158,159,160,161,162,163,164,165,170,171,172,174,180,181,182,184,187,188,195,202,212,217,219,221,224,227,228,239,248,249,252,254,268,],[86,89,-43,-41,-42,-44,-73,-75,-77,-84,-87,-90,-92,-93,-94,-95,-96,147,149,-46,-76,-91,-65,-66,-67,-68,-69,-70,-71,-27,-40,-97,179,192,-72,-74,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,197,-30,199,199,-99,-100,-101,89,209,-45,-36,-26,-58,-32,-35,-29,-50,-98,-102,-34,-57,-31,-49,149,-33,]),'ASSIGN':([44,133,151,214,],[87,176,190,236,]),'R_PAREN':([46,47,48,49,64,65,67,68,69,71,72,73,74,75,76,90,101,107,118,126,127,128,129,130,131,132,136,137,139,140,141,154,155,156,157,158,159,160,161,162,163,164,165,170,171,172,174,180,181,182,184,188,195,204,205,217,219,221,224,227,228,232,239,249,252,254,264,268,],[-43,-41,-42,-44,-73,-75,-77,-84,-87,-90,-92,-93,-94,-95,-96,137,-46,-76,-91,-65,-66,-67,-68,-69,-70,-71,-40,-97,180,181,182,-72,-74,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,196,-30,198,201,-99,-100,-101,206,-45,-36,227,228,-32,-35,-29,-50,-98,-102,245,-34,-31,-49,261,268,-33,]),'BEGIN':([63,64,65,67,68,69,71,72,73,74,75,76,107,118,154,155,156,157,158,159,160,161,162,163,164,165,225,251,],[104,-73,-75,-77,-84,-87,-90,-92,-93,-94,-95,-96,-76,-91,-72,-74,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,242,259,]),'OR':([63,64,65,67,68,69,71,72,73,74,75,76,99,101,102,107,118,134,138,139,140,141,142,154,155,156,157,158,159,160,161,162,163,164,165,187,188,189,194,202,203,204,212,213,232,233,248,256,257,],[105,-73,-75,-77,-84,-87,-90,-92,-93,-94,-95,-96,105,105,105,-76,-91,105,105,105,105,105,105,-72,-74,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'THEN':([64,65,67,68,69,71,72,73,74,75,76,102,107,118,154,155,156,157,158,159,160,161,162,163,164,165,233,234,],[-73,-75,-77,-84,-87,-90,-92,-93,-94,-95,-96,150,-76,-91,-72,-74,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,246,247,]),'ELSE':([64,65,67,68,69,71,72,73,74,75,76,107,118,154,155,156,157,158,159,160,161,162,163,164,165,189,211,256,262,],[-73,-75,-77,-84,-87,-90,-92,-93,-94,-95,-96,-76,-91,-72,-74,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,-64,234,-64,-63,]),'WHERE':([64,65,67,68,69,71,72,73,74,75,76,107,118,120,135,152,154,155,156,157,158,159,160,161,162,163,164,165,212,248,],[-73,-75,-77,-84,-87,-90,-92,-93,-94,-95,-96,-76,-91,167,178,191,-72,-74,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,-58,-57,]),'AND':([64,65,67,68,69,71,72,73,74,75,76,107,118,154,155,156,157,158,159,160,161,162,163,164,165,],[106,-75,-77,-84,-87,-90,-92,-93,-94,-95,-96,-76,-91,106,-74,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,]),'EQUALS':([67,68,69,71,72,73,74,75,76,107,118,156,157,158,159,160,161,162,163,164,165,],[108,-84,-87,-90,-92,-93,-94,-95,-96,108,-91,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,]),'NOT_EQ':([67,68,69,71,72,73,74,75,76,107,118,156,157,158,159,160,161,162,163,164,165,],[109,-84,-87,-90,-92,-93,-94,-95,-96,109,-91,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,]),'LESS_THAN':([67,68,69,71,72,73,74,75,76,107,118,156,157,158,159,160,161,162,163,164,165,],[110,-84,-87,-90,-92,-93,-94,-95,-96,110,-91,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,]),'GREATER_THAN':([67,68,69,71,72,73,74,75,76,107,118,156,157,158,159,160,161,162,163,164,165,],[111,-84,-87,-90,-92,-93,-94,-95,-96,111,-91,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,]),'LESS_EQ':([67,68,69,71,72,73,74,75,76,107,118,156,157,158,159,160,161,162,163,164,165,],[112,-84,-87,-90,-92,-93,-94,-95,-96,112,-91,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,]),'GREATER_EQ':([67,68,69,71,72,73,74,75,76,107,118,156,157,158,159,160,161,162,163,164,165,],[113,-84,-87,-90,-92,-93,-94,-95,-96,113,-91,-78,-79,-80,-81,-82,-83,-85,-86,-88,-89,]),'PLUS':([68,69,71,72,73,74,75,76,118,156,157,158,159,160,161,162,163,164,165,],[114,-87,-90,-92,-93,-94,-95,-96,-91,114,114,114,114,114,114,-85,-86,-88,-89,]),'DIVIDE':([69,71,72,73,74,75,76,118,162,163,164,165,],[117,-90,-92,-93,-94,-95,-96,-91,117,117,-88,-89,]),'INT':([84,169,183,200,207,222,241,],[126,126,126,126,126,126,126,]),'DECIMAL':([84,169,183,200,207,222,241,],[127,127,127,127,127,127,127,]),'BIT':([84,169,183,200,207,222,241,],[128,128,128,128,128,128,128,]),'NCHAR':([84,169,183,200,207,222,241,],[129,129,129,129,129,129,129,]),'NVARCHAR':([84,169,183,200,207,222,241,],[130,130,130,130,130,130,130,]),'DATE':([84,169,183,200,207,222,241,],[131,131,131,131,131,131,131,]),'DATETIME':([84,169,183,200,207,222,241,],[132,132,132,132,132,132,132,]),'ADD':([97,],[144,]),'NOT':([126,127,128,129,130,131,132,195,],[-65,-66,-67,-68,-69,-70,-71,218,]),'NULL':([126,127,128,129,130,131,132,195,218,],[-65,-66,-67,-68,-69,-70,-71,219,239,]),'PRIMARY':([126,127,128,129,130,131,132,195,217,219,239,],[-65,-66,-67,-68,-69,-70,-71,-36,237,-35,-34,]),'REFERENCE':([126,127,128,129,130,131,132,195,217,219,239,],[-65,-66,-67,-68,-69,-70,-71,-36,238,-35,-34,]),'COLUMN':([144,145,],[185,186,]),'RETURN':([198,],[222,]),'VALUES':([206,],[229,]),'KEY':([237,],[249,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'statements':([0,104,242,259,],[2,153,253,265,]),'statement':([2,153,253,265,],[3,3,3,3,]),'create_database_statement':([2,153,253,265,],[4,4,4,4,]),'use_statement':([2,153,253,265,],[5,5,5,5,]),'declare_statement':([2,153,253,265,],[6,6,6,6,]),'set_statement':([2,153,253,265,],[7,7,7,7,]),'create_table_statement':([2,153,253,265,],[8,8,8,8,]),'select_statement':([2,153,253,265,],[9,9,9,9,]),'insert_statement':([2,153,253,265,],[10,10,10,10,]),'create_function_statement':([2,153,253,265,],[11,11,11,11,]),'create_procedure_statement':([2,153,253,265,],[12,12,12,12,]),'alter_table_statement':([2,153,253,265,],[13,13,13,13,]),'if_statement':([2,153,253,265,],[14,14,14,14,]),'exec_statement':([2,153,253,265,],[15,15,15,15,]),'drop_table_statement':([2,153,253,265,],[16,16,16,16,]),'case_statement':([2,153,253,265,],[17,17,17,17,]),'update_statement':([2,153,253,265,],[18,18,18,18,]),'while_statement':([2,153,253,265,],[19,19,19,19,]),'truncate_statement':([2,153,253,265,],[20,20,20,20,]),'delete_statement':([2,153,253,265,],[21,21,21,21,]),'assignments':([25,],[43,]),'columns':([26,143,],[45,184,]),'column':([26,89,143,],[47,136,47,]),'call_function_prod':([26,89,143,],[49,49,49,]),'a':([34,59,60,61,87,91,92,93,94,95,147,149,150,167,176,178,179,190,191,209,210,236,243,246,247,],[63,99,101,102,134,138,139,140,141,142,187,188,189,194,202,203,204,212,213,232,233,248,101,256,257,]),'b':([34,59,60,61,87,91,92,93,94,95,105,147,149,150,167,176,178,179,190,191,209,210,236,243,246,247,],[64,64,64,64,64,64,64,64,64,64,154,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'c':([34,59,60,61,87,91,92,93,94,95,105,106,147,149,150,167,176,178,179,190,191,209,210,236,243,246,247,],[65,65,65,65,65,65,65,65,65,65,65,155,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'d':([34,59,60,61,66,87,91,92,93,94,95,105,106,147,149,150,167,176,178,179,190,191,209,210,236,243,246,247,],[67,67,67,67,107,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'e':([34,59,60,61,66,87,91,92,93,94,95,105,106,108,109,110,111,112,113,147,149,150,167,176,178,179,190,191,209,210,236,243,246,247,],[68,68,68,68,68,68,68,68,68,68,68,68,68,156,157,158,159,160,161,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'f':([34,59,60,61,66,87,91,92,93,94,95,105,106,108,109,110,111,112,113,114,115,147,149,150,167,176,178,179,190,191,209,210,236,243,246,247,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,162,163,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'g':([34,59,60,61,66,87,91,92,93,94,95,105,106,108,109,110,111,112,113,114,115,116,117,147,149,150,167,176,178,179,190,191,209,210,236,243,246,247,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,164,165,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'h':([34,59,60,61,66,70,87,91,92,93,94,95,105,106,108,109,110,111,112,113,114,115,116,117,147,149,150,167,176,178,179,190,191,209,210,236,243,246,247,],[72,72,72,72,72,118,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'vals':([60,243,],[100,254,]),'type':([84,169,183,200,207,222,241,],[125,195,205,224,230,240,252,]),'column_assignments':([103,],[152,]),'properties':([122,],[170,]),'property':([122,197,],[171,221,]),'parameters':([123,124,],[172,174,]),'when_statement':([189,256,],[211,262,]),'null_prod':([195,],[217,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> statements','init',1,'p_init','grammar.py',198),
  ('statements -> statements statement','statements',2,'p_statements','grammar.py',202),
  ('statements -> <empty>','statements',0,'p_statements_2','grammar.py',206),
  ('statement -> create_database_statement','statement',1,'p_statement','grammar.py',210),
  ('statement -> use_statement','statement',1,'p_statement','grammar.py',211),
  ('statement -> declare_statement','statement',1,'p_statement','grammar.py',212),
  ('statement -> set_statement','statement',1,'p_statement','grammar.py',213),
  ('statement -> create_table_statement','statement',1,'p_statement','grammar.py',214),
  ('statement -> select_statement','statement',1,'p_statement','grammar.py',215),
  ('statement -> insert_statement','statement',1,'p_statement','grammar.py',216),
  ('statement -> create_function_statement','statement',1,'p_statement','grammar.py',217),
  ('statement -> create_procedure_statement','statement',1,'p_statement','grammar.py',218),
  ('statement -> alter_table_statement','statement',1,'p_statement','grammar.py',219),
  ('statement -> if_statement','statement',1,'p_statement','grammar.py',220),
  ('statement -> exec_statement','statement',1,'p_statement','grammar.py',221),
  ('statement -> drop_table_statement','statement',1,'p_statement','grammar.py',222),
  ('statement -> case_statement','statement',1,'p_statement','grammar.py',223),
  ('statement -> update_statement','statement',1,'p_statement','grammar.py',224),
  ('statement -> while_statement','statement',1,'p_statement','grammar.py',225),
  ('statement -> truncate_statement','statement',1,'p_statement','grammar.py',226),
  ('statement -> delete_statement','statement',1,'p_statement','grammar.py',227),
  ('create_database_statement -> CREATE DATA BASE NAME SEMICOLON','create_database_statement',5,'p_create_database_statement','grammar.py',233),
  ('use_statement -> USE NAME SEMICOLON','use_statement',3,'p_use_statement','grammar.py',238),
  ('declare_statement -> DECLARE ID AS type SEMICOLON','declare_statement',5,'p_declare_statement','grammar.py',243),
  ('set_statement -> SET assignments SEMICOLON','set_statement',3,'p_set_statement','grammar.py',248),
  ('assignments -> assignments COMMA ID ASSIGN a','assignments',5,'p_assignments','grammar.py',253),
  ('assignments -> ID ASSIGN a','assignments',3,'p_assignments_2','grammar.py',257),
  ('create_table_statement -> CREATE TABLE NAME L_PAREN properties R_PAREN SEMICOLON','create_table_statement',7,'p_create_table_statement','grammar.py',262),
  ('properties -> properties COMMA property','properties',3,'p_properties','grammar.py',266),
  ('properties -> property','properties',1,'p_properties_2','grammar.py',269),
  ('property -> NAME type null_prod PRIMARY KEY','property',5,'p_property','grammar.py',273),
  ('property -> NAME type null_prod','property',3,'p_property_2','grammar.py',277),
  ('property -> NAME type null_prod REFERENCE NAME L_PAREN NAME R_PAREN','property',8,'p_property_3','grammar.py',281),
  ('null_prod -> NOT NULL','null_prod',2,'p_null_prod','grammar.py',285),
  ('null_prod -> NULL','null_prod',1,'p_null_prod_2','grammar.py',288),
  ('null_prod -> <empty>','null_prod',0,'p_null_prod_3','grammar.py',292),
  ('select_statement -> SELECT columns FROM NAME SEMICOLON','select_statement',5,'p_select_statement','grammar.py',297),
  ('select_statement -> SELECT columns FROM NAME WHERE a SEMICOLON','select_statement',7,'p_select_statement_2','grammar.py',301),
  ('insert_statement -> INSERT INTO NAME L_PAREN columns R_PAREN VALUES L_PAREN vals R_PAREN SEMICOLON','insert_statement',11,'p_insert_statement','grammar.py',307),
  ('columns -> columns COMMA column','columns',3,'p_columns','grammar.py',313),
  ('columns -> column','columns',1,'p_columns_2','grammar.py',317),
  ('column -> TIMES','column',1,'p_column','grammar.py',321),
  ('column -> NAME','column',1,'p_column','grammar.py',322),
  ('column -> call_function_prod','column',1,'p_column','grammar.py',323),
  ('vals -> vals COMMA a','vals',3,'p_vals','grammar.py',327),
  ('vals -> a','vals',1,'p_vals_2','grammar.py',331),
  ('create_function_statement -> CREATE FUNCTION NAME L_PAREN parameters R_PAREN RETURN type AS BEGIN statements END SEMICOLON','create_function_statement',13,'p_create_function_statement','grammar.py',336),
  ('create_procedure_statement -> CREATE PROCEDURE NAME L_PAREN parameters R_PAREN AS BEGIN statements END SEMICOLON','create_procedure_statement',11,'p_create_procedure_statement','grammar.py',340),
  ('parameters -> parameters COMMA ID AS type','parameters',5,'p_parameters','grammar.py',343),
  ('parameters -> ID AS type','parameters',3,'p_parameters_2','grammar.py',347),
  ('alter_table_statement -> ALTER TABLE NAME ADD COLUMN NAME type SEMICOLON','alter_table_statement',8,'p_alter_table_statement','grammar.py',351),
  ('alter_table_statement -> ALTER TABLE NAME DROP COLUMN NAME SEMICOLON','alter_table_statement',7,'p_alter_table_statement_2','grammar.py',355),
  ('if_statement -> IF L_PAREN a COMMA a COMMA a R_PAREN SEMICOLON','if_statement',9,'p_if_statement','grammar.py',368),
  ('exec_statement -> EXEC NAME vals SEMICOLON','exec_statement',4,'p_exec_statement','grammar.py',373),
  ('drop_table_statement -> DROP TABLE NAME SEMICOLON','drop_table_statement',4,'p_drop_table_statement','grammar.py',378),
  ('update_statement -> UPDATE NAME SET column_assignments WHERE a SEMICOLON','update_statement',7,'p_update_statement','grammar.py',383),
  ('column_assignments -> column_assignments COMMA NAME ASSIGN a','column_assignments',5,'p_column_assignments','grammar.py',387),
  ('column_assignments -> NAME ASSIGN a','column_assignments',3,'p_column_assignments_2','grammar.py',391),
  ('while_statement -> WHILE a BEGIN statements END SEMICOLON','while_statement',6,'p_while_statement','grammar.py',397),
  ('truncate_statement -> TRUNCATE TABLE NAME SEMICOLON','truncate_statement',4,'p_truncate_statement','grammar.py',403),
  ('delete_statement -> DELETE FROM NAME WHERE a SEMICOLON','delete_statement',6,'p_delete_statement','grammar.py',408),
  ('case_statement -> CASE WHEN a THEN a when_statement ELSE THEN a END','case_statement',10,'p_case_statement','grammar.py',413),
  ('when_statement -> WHEN a THEN a when_statement','when_statement',5,'p_when_statement','grammar.py',416),
  ('when_statement -> <empty>','when_statement',0,'p_when_statement2','grammar.py',419),
  ('type -> INT','type',1,'p_type','grammar.py',422),
  ('type -> DECIMAL','type',1,'p_type','grammar.py',423),
  ('type -> BIT','type',1,'p_type','grammar.py',424),
  ('type -> NCHAR','type',1,'p_type','grammar.py',425),
  ('type -> NVARCHAR','type',1,'p_type','grammar.py',426),
  ('type -> DATE','type',1,'p_type','grammar.py',427),
  ('type -> DATETIME','type',1,'p_type','grammar.py',428),
  ('a -> a OR b','a',3,'p_a','grammar.py',431),
  ('a -> b','a',1,'p_a_2','grammar.py',434),
  ('b -> b AND c','b',3,'p_b','grammar.py',437),
  ('b -> c','b',1,'p_b_2','grammar.py',441),
  ('c -> NOT_SIGN d','c',2,'p_c','grammar.py',445),
  ('c -> d','c',1,'p_c_2','grammar.py',449),
  ('d -> d EQUALS e','d',3,'p_d','grammar.py',453),
  ('d -> d NOT_EQ e','d',3,'p_d','grammar.py',454),
  ('d -> d LESS_THAN e','d',3,'p_d','grammar.py',455),
  ('d -> d GREATER_THAN e','d',3,'p_d','grammar.py',456),
  ('d -> d LESS_EQ e','d',3,'p_d','grammar.py',457),
  ('d -> d GREATER_EQ e','d',3,'p_d','grammar.py',458),
  ('d -> e','d',1,'p_d_2','grammar.py',463),
  ('e -> e PLUS f','e',3,'p_e','grammar.py',467),
  ('e -> e MINUS f','e',3,'p_e','grammar.py',468),
  ('e -> f','e',1,'p_e_2','grammar.py',472),
  ('f -> f TIMES g','f',3,'p_f','grammar.py',476),
  ('f -> f DIVIDE g','f',3,'p_f','grammar.py',477),
  ('f -> g','f',1,'p_f_2','grammar.py',481),
  ('g -> MINUS h','g',2,'p_g','grammar.py',485),
  ('g -> h','g',1,'p_g_2','grammar.py',489),
  ('h -> INTEGER_VALUE','h',1,'p_h','grammar.py',493),
  ('h -> DECIMAL_VALUE','h',1,'p_h','grammar.py',494),
  ('h -> STRING','h',1,'p_h','grammar.py',495),
  ('h -> ID','h',1,'p_h','grammar.py',496),
  ('call_function_prod -> HOY L_PAREN R_PAREN','call_function_prod',3,'p_call_function_prod','grammar.py',500),
  ('call_function_prod -> CONCATENAR L_PAREN a COMMA a R_PAREN','call_function_prod',6,'p_call_function_prod','grammar.py',501),
  ('call_function_prod -> SUBSTRAER L_PAREN a R_PAREN','call_function_prod',4,'p_call_function_prod','grammar.py',502),
  ('call_function_prod -> CONTAR L_PAREN a R_PAREN','call_function_prod',4,'p_call_function_prod','grammar.py',503),
  ('call_function_prod -> SUMA L_PAREN a R_PAREN','call_function_prod',4,'p_call_function_prod','grammar.py',504),
  ('call_function_prod -> CAST L_PAREN a AS type R_PAREN','call_function_prod',6,'p_call_function_prod','grammar.py',505),
]
