
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALTER AND AS ASSIGN BASE BEGIN BIT CASE CAST COLUMN COMMA CONCATENAR CONTAR CREATE DATA DATE DATETIME DECIMAL DECIMAL_VALUE DECLARE DIVIDE DROP ELSE END EQUALS EXEC FOREIGN FROM FUNCTION GREATER_EQ GREATER_THAN HOY ID IF INSERT INT INTEGER_VALUE INTO KEY LESS_EQ LESS_THAN L_PAREN MINUS NAME NCHAR NOT NOT_EQ NOT_SIGN NULL NVARCHAR OR PLUS PRIMARY PROCEDURE REFERENCE RETURN RETURNS R_PAREN SELECT SEMICOLON SET STRING SUBSTRAER SUMA TABLE THEN TIMES TRUNCATE UPDATE USE VALUES WHEN WHEREinit   : statementsstatements : statements statementstatements : statement    : create_database_statement\n                    | use_statement\n                    | declare_statement\n                    | set_statement\n                    | create_table_statement\n                    | select_statement\n                    | insert_statement\n                    | create_function_statement\n                    | create_procedure_statement\n                    | alter_table_statement\n                    | alter_function_statement\n                    | alter_procedure_statement\n                    | if_statement\n                    | exec_statement\n                    | drop_table_statement\n                    | case_statement\n                    | update_statementcreate_database_statement    : CREATE DATA BASE NAME SEMICOLONuse_statement   : USE NAME SEMICOLONdeclare_statement   : DECLARE ID AS type SEMICOLONset_statement   : SET assignments SEMICOLONassignments    : assignments COMMA ID ASSIGN aassignments    : ID ASSIGN acreate_table_statement : CREATE TABLE NAME L_PAREN properties R_PAREN SEMICOLONproperties : properties COMMA propertyproperties : propertyproperty   : NAME type PRIMARY KEYproperty   : NAME typeproperty   : NAME type REFERENCE NAME L_PAREN NAME R_PARENselect_statement   : SELECT columns FROM NAME SEMICOLONselect_statement   : SELECT columns FROM NAME WHERE a SEMICOLONselect_statement   : SELECT TIMES FROM NAME SEMICOLONselect_statement    : SELECT TIMES FROM NAME WHERE a SEMICOLONinsert_statement   : INSERT INTO NAME L_PAREN columns R_PAREN VALUES L_PAREN vals R_PAREN SEMICOLONcolumns    : columns COMMA NAMEcolumns    : NAMEvals   : vals COMMA avals   : acreate_function_statement  : CREATE FUNCTION NAME L_PAREN parameters R_PAREN RETURN type AS BEGIN statements END SEMICOLONcreate_procedure_statement : CREATE PROCEDURE NAME L_PAREN parameters R_PAREN AS BEGIN statements END SEMICOLONparameters : parameters COMMA ID AS typeparameters : ID AS typealter_table_statement  : ALTER TABLE NAME ADD COLUMN NAME type SEMICOLONalter_table_statement  : ALTER TABLE NAME DROP COLUMN NAME SEMICOLONalter_function_statement   : ALTER FUNCTION alter_procedure_statement  : ALTER PROCEDURE if_statement   : IF L_PAREN a COMMA a COMMA a R_PAREN SEMICOLONexec_statement : EXEC NAME vals SEMICOLONdrop_table_statement   : DROP TABLE NAME SEMICOLONupdate_statement   : UPDATE NAME SET column_assignments WHERE a SEMICOLONcolumn_assignments  : column_assignments COMMA NAME ASSIGN acolumn_assignments : NAME ASSIGN acase_statement : type : INT\n            | DECIMAL\n            | BIT\n            | NCHAR\n            | NVARCHAR\n            | DATE\n            | DATETIMEa    : INTEGER_VALUE\n            | STRING\n    '
    
_lr_action_items = {'CREATE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,45,46,55,57,92,94,98,105,107,109,138,144,145,148,150,156,158,164,166,168,172,173,174,176,],[-3,21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-49,-22,-24,-52,-51,-21,-23,-33,-35,-27,-34,-36,-47,-53,-3,-46,21,-50,-3,21,-43,-37,-42,]),'USE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,45,46,55,57,92,94,98,105,107,109,138,144,145,148,150,156,158,164,166,168,172,173,174,176,],[-3,22,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-49,-22,-24,-52,-51,-21,-23,-33,-35,-27,-34,-36,-47,-53,-3,-46,22,-50,-3,22,-43,-37,-42,]),'DECLARE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,45,46,55,57,92,94,98,105,107,109,138,144,145,148,150,156,158,164,166,168,172,173,174,176,],[-3,23,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-49,-22,-24,-52,-51,-21,-23,-33,-35,-27,-34,-36,-47,-53,-3,-46,23,-50,-3,23,-43,-37,-42,]),'SET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,45,46,50,55,57,92,94,98,105,107,109,138,144,145,148,150,156,158,164,166,168,172,173,174,176,],[-3,24,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-49,71,-22,-24,-52,-51,-21,-23,-33,-35,-27,-34,-36,-47,-53,-3,-46,24,-50,-3,24,-43,-37,-42,]),'SELECT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,45,46,55,57,92,94,98,105,107,109,138,144,145,148,150,156,158,164,166,168,172,173,174,176,],[-3,25,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-49,-22,-24,-52,-51,-21,-23,-33,-35,-27,-34,-36,-47,-53,-3,-46,25,-50,-3,25,-43,-37,-42,]),'INSERT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,45,46,55,57,92,94,98,105,107,109,138,144,145,148,150,156,158,164,166,168,172,173,174,176,],[-3,26,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-49,-22,-24,-52,-51,-21,-23,-33,-35,-27,-34,-36,-47,-53,-3,-46,26,-50,-3,26,-43,-37,-42,]),'ALTER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,45,46,55,57,92,94,98,105,107,109,138,144,145,148,150,156,158,164,166,168,172,173,174,176,],[-3,27,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-49,-22,-24,-52,-51,-21,-23,-33,-35,-27,-34,-36,-47,-53,-3,-46,27,-50,-3,27,-43,-37,-42,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,45,46,55,57,92,94,98,105,107,109,138,144,145,148,150,156,158,164,166,168,172,173,174,176,],[-3,29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-49,-22,-24,-52,-51,-21,-23,-33,-35,-27,-34,-36,-47,-53,-3,-46,29,-50,-3,29,-43,-37,-42,]),'EXEC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,45,46,55,57,92,94,98,105,107,109,138,144,145,148,150,156,158,164,166,168,172,173,174,176,],[-3,30,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-49,-22,-24,-52,-51,-21,-23,-33,-35,-27,-34,-36,-47,-53,-3,-46,30,-50,-3,30,-43,-37,-42,]),'DROP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,45,46,55,57,64,92,94,98,105,107,109,138,144,145,148,150,156,158,164,166,168,172,173,174,176,],[-3,28,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-49,-22,-24,91,-52,-51,-21,-23,-33,-35,-27,-34,-36,-47,-53,-3,-46,28,-50,-3,28,-43,-37,-42,]),'UPDATE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,45,46,55,57,92,94,98,105,107,109,138,144,145,148,150,156,158,164,166,168,172,173,174,176,],[-3,31,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-49,-22,-24,-52,-51,-21,-23,-33,-35,-27,-34,-36,-47,-53,-3,-46,31,-50,-3,31,-43,-37,-42,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,45,46,55,57,92,94,98,105,107,109,138,144,145,148,150,158,166,173,174,176,],[-3,0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-49,-22,-24,-52,-51,-21,-23,-33,-35,-27,-34,-36,-47,-53,-46,-50,-43,-37,-42,]),'END':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,45,46,55,57,92,94,98,105,107,109,138,144,145,148,150,156,158,164,166,168,172,173,174,176,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-48,-49,-22,-24,-52,-51,-21,-23,-33,-35,-27,-34,-36,-47,-53,-3,-46,169,-50,-3,175,-43,-37,-42,]),'DATA':([21,],[32,]),'TABLE':([21,27,28,],[33,44,47,]),'FUNCTION':([21,27,],[34,45,]),'PROCEDURE':([21,27,],[35,46,]),'NAME':([22,25,30,31,33,34,35,43,44,47,51,60,61,62,71,73,89,112,113,118,121,137,161,],[36,41,49,50,52,53,54,63,64,65,72,86,87,88,96,99,41,130,131,135,99,153,167,]),'ID':([23,24,58,74,75,123,],[37,39,84,103,103,141,]),'TIMES':([25,],[42,]),'INTO':([26,],[43,]),'L_PAREN':([29,52,53,54,63,146,153,],[48,73,74,75,89,157,161,]),'BASE':([32,],[51,]),'SEMICOLON':([36,38,65,67,68,69,70,72,76,77,78,79,80,81,82,83,85,86,88,115,120,126,127,128,131,134,147,159,169,170,175,],[55,57,92,-64,-65,94,-41,98,105,-57,-58,-59,-60,-61,-62,-63,-26,107,109,-40,138,-25,144,145,148,150,158,166,173,174,176,]),'AS':([37,77,78,79,80,81,82,83,103,125,141,154,],[56,-57,-58,-59,-60,-61,-62,-63,124,143,155,162,]),'COMMA':([38,40,41,66,67,68,69,70,77,78,79,80,81,82,83,85,87,97,100,101,102,104,111,114,115,119,126,133,139,142,152,160,163,165,171,],[58,61,-39,93,-64,-65,95,-41,-57,-58,-59,-60,-61,-62,-63,-26,-38,118,121,-29,123,123,61,132,-40,-31,-25,-55,-28,-45,-30,-54,-44,95,-32,]),'ASSIGN':([39,84,96,135,],[59,106,116,151,]),'FROM':([40,41,42,87,],[60,-39,62,-38,]),'R_PAREN':([41,67,68,70,77,78,79,80,81,82,83,87,100,101,102,104,111,115,119,139,142,149,152,163,165,167,171,],[-39,-64,-65,-41,-57,-58,-59,-60,-61,-62,-63,-38,120,-29,122,125,129,-40,-31,-28,-45,159,-30,-44,170,171,-32,]),'INTEGER_VALUE':([48,49,59,93,95,106,108,110,116,117,132,151,157,],[67,67,67,67,67,67,67,67,67,67,67,67,67,]),'STRING':([48,49,59,93,95,106,108,110,116,117,132,151,157,],[68,68,68,68,68,68,68,68,68,68,68,68,68,]),'INT':([56,99,124,130,140,155,],[77,77,77,77,77,77,]),'DECIMAL':([56,99,124,130,140,155,],[78,78,78,78,78,78,]),'BIT':([56,99,124,130,140,155,],[79,79,79,79,79,79,]),'NCHAR':([56,99,124,130,140,155,],[80,80,80,80,80,80,]),'NVARCHAR':([56,99,124,130,140,155,],[81,81,81,81,81,81,]),'DATE':([56,99,124,130,140,155,],[82,82,82,82,82,82,]),'DATETIME':([56,99,124,130,140,155,],[83,83,83,83,83,83,]),'ADD':([64,],[90,]),'WHERE':([67,68,86,88,97,133,160,],[-64,-65,108,110,117,-55,-54,]),'PRIMARY':([77,78,79,80,81,82,83,119,],[-57,-58,-59,-60,-61,-62,-63,136,]),'REFERENCE':([77,78,79,80,81,82,83,119,],[-57,-58,-59,-60,-61,-62,-63,137,]),'COLUMN':([90,91,],[112,113,]),'RETURN':([122,],[140,]),'VALUES':([129,],[146,]),'KEY':([136,],[152,]),'BEGIN':([143,162,],[156,168,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'statements':([0,156,168,],[2,164,172,]),'statement':([2,164,172,],[3,3,3,]),'create_database_statement':([2,164,172,],[4,4,4,]),'use_statement':([2,164,172,],[5,5,5,]),'declare_statement':([2,164,172,],[6,6,6,]),'set_statement':([2,164,172,],[7,7,7,]),'create_table_statement':([2,164,172,],[8,8,8,]),'select_statement':([2,164,172,],[9,9,9,]),'insert_statement':([2,164,172,],[10,10,10,]),'create_function_statement':([2,164,172,],[11,11,11,]),'create_procedure_statement':([2,164,172,],[12,12,12,]),'alter_table_statement':([2,164,172,],[13,13,13,]),'alter_function_statement':([2,164,172,],[14,14,14,]),'alter_procedure_statement':([2,164,172,],[15,15,15,]),'if_statement':([2,164,172,],[16,16,16,]),'exec_statement':([2,164,172,],[17,17,17,]),'drop_table_statement':([2,164,172,],[18,18,18,]),'case_statement':([2,164,172,],[19,19,19,]),'update_statement':([2,164,172,],[20,20,20,]),'assignments':([24,],[38,]),'columns':([25,89,],[40,111,]),'a':([48,49,59,93,95,106,108,110,116,117,132,151,157,],[66,70,85,114,115,126,127,128,133,134,149,160,70,]),'vals':([49,157,],[69,165,]),'type':([56,99,124,130,140,155,],[76,119,142,147,154,163,]),'column_assignments':([71,],[97,]),'properties':([73,],[100,]),'property':([73,121,],[101,139,]),'parameters':([74,75,],[102,104,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> statements','init',1,'p_init','grammar.py',191),
  ('statements -> statements statement','statements',2,'p_statements','grammar.py',195),
  ('statements -> <empty>','statements',0,'p_statements_2','grammar.py',199),
  ('statement -> create_database_statement','statement',1,'p_statement','grammar.py',203),
  ('statement -> use_statement','statement',1,'p_statement','grammar.py',204),
  ('statement -> declare_statement','statement',1,'p_statement','grammar.py',205),
  ('statement -> set_statement','statement',1,'p_statement','grammar.py',206),
  ('statement -> create_table_statement','statement',1,'p_statement','grammar.py',207),
  ('statement -> select_statement','statement',1,'p_statement','grammar.py',208),
  ('statement -> insert_statement','statement',1,'p_statement','grammar.py',209),
  ('statement -> create_function_statement','statement',1,'p_statement','grammar.py',210),
  ('statement -> create_procedure_statement','statement',1,'p_statement','grammar.py',211),
  ('statement -> alter_table_statement','statement',1,'p_statement','grammar.py',212),
  ('statement -> alter_function_statement','statement',1,'p_statement','grammar.py',213),
  ('statement -> alter_procedure_statement','statement',1,'p_statement','grammar.py',214),
  ('statement -> if_statement','statement',1,'p_statement','grammar.py',215),
  ('statement -> exec_statement','statement',1,'p_statement','grammar.py',216),
  ('statement -> drop_table_statement','statement',1,'p_statement','grammar.py',217),
  ('statement -> case_statement','statement',1,'p_statement','grammar.py',218),
  ('statement -> update_statement','statement',1,'p_statement','grammar.py',219),
  ('create_database_statement -> CREATE DATA BASE NAME SEMICOLON','create_database_statement',5,'p_create_database_statement','grammar.py',225),
  ('use_statement -> USE NAME SEMICOLON','use_statement',3,'p_use_statement','grammar.py',230),
  ('declare_statement -> DECLARE ID AS type SEMICOLON','declare_statement',5,'p_declare_statement','grammar.py',235),
  ('set_statement -> SET assignments SEMICOLON','set_statement',3,'p_set_statement','grammar.py',240),
  ('assignments -> assignments COMMA ID ASSIGN a','assignments',5,'p_assignments','grammar.py',245),
  ('assignments -> ID ASSIGN a','assignments',3,'p_assignments_2','grammar.py',249),
  ('create_table_statement -> CREATE TABLE NAME L_PAREN properties R_PAREN SEMICOLON','create_table_statement',7,'p_create_table_statement','grammar.py',254),
  ('properties -> properties COMMA property','properties',3,'p_properties','grammar.py',258),
  ('properties -> property','properties',1,'p_properties_2','grammar.py',261),
  ('property -> NAME type PRIMARY KEY','property',4,'p_property','grammar.py',265),
  ('property -> NAME type','property',2,'p_property_2','grammar.py',269),
  ('property -> NAME type REFERENCE NAME L_PAREN NAME R_PAREN','property',7,'p_property_3','grammar.py',273),
  ('select_statement -> SELECT columns FROM NAME SEMICOLON','select_statement',5,'p_select_statement','grammar.py',278),
  ('select_statement -> SELECT columns FROM NAME WHERE a SEMICOLON','select_statement',7,'p_select_statement_2','grammar.py',282),
  ('select_statement -> SELECT TIMES FROM NAME SEMICOLON','select_statement',5,'p_select_statement_3','grammar.py',286),
  ('select_statement -> SELECT TIMES FROM NAME WHERE a SEMICOLON','select_statement',7,'p_select_statement_4','grammar.py',290),
  ('insert_statement -> INSERT INTO NAME L_PAREN columns R_PAREN VALUES L_PAREN vals R_PAREN SEMICOLON','insert_statement',11,'p_insert_statement','grammar.py',296),
  ('columns -> columns COMMA NAME','columns',3,'p_columns','grammar.py',302),
  ('columns -> NAME','columns',1,'p_columns_2','grammar.py',306),
  ('vals -> vals COMMA a','vals',3,'p_vals','grammar.py',310),
  ('vals -> a','vals',1,'p_vals_2','grammar.py',314),
  ('create_function_statement -> CREATE FUNCTION NAME L_PAREN parameters R_PAREN RETURN type AS BEGIN statements END SEMICOLON','create_function_statement',13,'p_create_function_statement','grammar.py',319),
  ('create_procedure_statement -> CREATE PROCEDURE NAME L_PAREN parameters R_PAREN AS BEGIN statements END SEMICOLON','create_procedure_statement',11,'p_create_procedure_statement','grammar.py',323),
  ('parameters -> parameters COMMA ID AS type','parameters',5,'p_parameters','grammar.py',326),
  ('parameters -> ID AS type','parameters',3,'p_parameters_2','grammar.py',330),
  ('alter_table_statement -> ALTER TABLE NAME ADD COLUMN NAME type SEMICOLON','alter_table_statement',8,'p_alter_table_statement','grammar.py',334),
  ('alter_table_statement -> ALTER TABLE NAME DROP COLUMN NAME SEMICOLON','alter_table_statement',7,'p_alter_table_statement_2','grammar.py',338),
  ('alter_function_statement -> ALTER FUNCTION','alter_function_statement',2,'p_alter_function_statement','grammar.py',342),
  ('alter_procedure_statement -> ALTER PROCEDURE','alter_procedure_statement',2,'p_alter_procedure_statement','grammar.py',346),
  ('if_statement -> IF L_PAREN a COMMA a COMMA a R_PAREN SEMICOLON','if_statement',9,'p_if_statement','grammar.py',351),
  ('exec_statement -> EXEC NAME vals SEMICOLON','exec_statement',4,'p_exec_statement','grammar.py',356),
  ('drop_table_statement -> DROP TABLE NAME SEMICOLON','drop_table_statement',4,'p_drop_table_statement','grammar.py',361),
  ('update_statement -> UPDATE NAME SET column_assignments WHERE a SEMICOLON','update_statement',7,'p_update_statement','grammar.py',366),
  ('column_assignments -> column_assignments COMMA NAME ASSIGN a','column_assignments',5,'p_column_assignments','grammar.py',370),
  ('column_assignments -> NAME ASSIGN a','column_assignments',3,'p_column_assignments_2','grammar.py',374),
  ('case_statement -> <empty>','case_statement',0,'p_case_statement','grammar.py',379),
  ('type -> INT','type',1,'p_type','grammar.py',383),
  ('type -> DECIMAL','type',1,'p_type','grammar.py',384),
  ('type -> BIT','type',1,'p_type','grammar.py',385),
  ('type -> NCHAR','type',1,'p_type','grammar.py',386),
  ('type -> NVARCHAR','type',1,'p_type','grammar.py',387),
  ('type -> DATE','type',1,'p_type','grammar.py',388),
  ('type -> DATETIME','type',1,'p_type','grammar.py',389),
  ('a -> INTEGER_VALUE','a',1,'p_a','grammar.py',392),
  ('a -> STRING','a',1,'p_a','grammar.py',393),
]
