
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALTER AND AS ASSIGN BASE BEGIN CAS CASE COLUMN COMMA CONCATENAR CONTAR CREATE DATA DATE DATETIME DECIMAL DECIMAL_VALUE DECLARE DELETE DIVIDE DROP ELSE END EQUALS EXEC FROM FUNCTION GREATER_EQ GREATER_THAN HOY ID IF INSERT INT INTEGER_VALUE INTO KEY LESS_EQ LESS_THAN L_PAREN MINUS NAME NCHAR NOT NOT_EQ NOT_SIGN NULL NVARCHAR OR PLUS POINT PRIMARY PROCEDURE REFERENCE RETURN R_PAREN SELECT SEMICOLON SET STRING SUBSTRAER SUMA TABLE THEN TIMES TRUNCATE UPDATE USE VALUES WHEN WHERE WHILEinit   : statementsstatements : statements statementstatements : statement    : create_database_statement SEMICOLON\n                    | use_statement SEMICOLON\n                    | declare_statement SEMICOLON\n                    | set_statement SEMICOLON\n                    | create_table_statement SEMICOLON\n                    | select_statement SEMICOLON\n                    | insert_statement SEMICOLON\n                    | create_function_statement SEMICOLON\n                    | create_procedure_statement SEMICOLON\n                    | alter_table_statement SEMICOLON\n                    | if_statement SEMICOLON\n                    | exec_statement SEMICOLON\n                    | drop_table_statement SEMICOLON\n                    | update_statement SEMICOLON\n                    | while_statement SEMICOLON\n                    | truncate_statement SEMICOLON\n                    | return_statement SEMICOLON\n                    | delete_statement SEMICOLONcreate_database_statement    : CREATE DATA BASE NAMEuse_statement   : USE NAMEdeclare_statement   : DECLARE ID AS typedeclare_statement   : DECLARE ID  typeset_statement   : SET assignmentsassignments    : assignments COMMA ID ASSIGN aassignments    : ID ASSIGN acreate_table_statement : CREATE TABLE NAME L_PAREN properties R_PARENproperties : properties COMMA propertyproperties : propertyproperty   : NAME type null_prod PRIMARY KEYproperty   : NAME type null_prodproperty   : NAME type null_prod REFERENCE NAME L_PAREN NAME R_PARENnull_prod  : NOT NULLnull_prod  : NULLnull_prod  : select_statement   : SELECT columns FROM NAMEselect_statement   : SELECT columns FROM NAME WHERE ainsert_statement   : INSERT INTO NAME L_PAREN columns R_PAREN VALUES L_PAREN vals R_PARENcolumns    : columns COMMA columncolumns    : columns COMMA column POINT columncolumns    : column POINT columncolumns    : columncolumn   : TIMES\n                | NAME\n                | case_statement\n                | call_function_prod\n                | if_statement NAME\n                | a NAMEvals   : vals COMMA avals   : acreate_function_statement  : CREATE FUNCTION NAME L_PAREN parameters R_PAREN RETURN type AS BEGIN statements ENDcreate_function_statement  : CREATE FUNCTION NAME L_PAREN R_PAREN RETURN type AS BEGIN statements ENDcreate_procedure_statement : CREATE PROCEDURE NAME L_PAREN parameters R_PAREN AS BEGIN statements ENDcreate_procedure_statement : CREATE PROCEDURE NAME L_PAREN R_PAREN AS BEGIN statements ENDparameters : parameters COMMA ID AS typeparameters : parameters COMMA ID typeparameters : ID typeparameters : ID AS typealter_table_statement  : ALTER TABLE NAME ADD COLUMN NAME typealter_table_statement  : ALTER TABLE NAME DROP COLUMN NAMEif_statement   : IF a THEN statements END IFif_statement   : IF a THEN statements ELSE statements END IFif_statement   : IF L_PAREN a COMMA a COMMA a R_PARENexec_statement : EXEC NAME valsexec_statement : EXEC NAME argsexec_statement : EXEC NAMEargs   : args COMMA ID ASSIGN aargs   : ID ASSIGN adrop_table_statement   : DROP TABLE NAMEupdate_statement   : UPDATE NAME SET column_assignments WHERE acolumn_assignments  : column_assignments COMMA NAME ASSIGN acolumn_assignments : NAME ASSIGN awhile_statement    : WHILE a BEGIN statements ENDtruncate_statement : TRUNCATE TABLE NAMEdelete_statement : DELETE FROM NAME WHERE acase_statement : CASE when_statements END NAMEwhen_statements : WHEN a THEN a when_statementswhen_statements : ELSE THEN atype : INT\n            | DECIMAL\n            | DATE\n            | DATETIMEtype : NCHAR L_PAREN a R_PAREN\n            | NVARCHAR L_PAREN a R_PARENa    : a OR ba  : bb  : b AND cb  : cc  : NOT_SIGN dc  : dd    : d EQUALS e\n            | d NOT_EQ e\n            | d LESS_THAN e\n            | d GREATER_THAN e\n            | d LESS_EQ e\n            | d GREATER_EQ e\n    d  : ee    : e PLUS f\n            | e MINUS fe  : ff    : f TIMES g\n            | f DIVIDE gf  : gg  : MINUS hg  : hh    : INTEGER_VALUEh    : DECIMAL_VALUEh    : STRINGh    : IDh    : NAMEh    : L_PAREN a R_PARENh    : exec_statementcall_function_prod   : HOY L_PAREN R_PAREN\n                            | CONCATENAR L_PAREN a COMMA a R_PAREN\n                            | SUBSTRAER L_PAREN a R_PAREN\n                            | CONTAR L_PAREN a R_PAREN\n                            | SUMA L_PAREN a R_PAREN\n                            | CAS L_PAREN a AS type R_PAREN\n    return_statement : RETURN a'
    
_lr_action_items = {'CREATE':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,151,158,198,205,232,264,279,296,297,306,307,311,312,316,],[-3,22,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,22,22,-3,22,-3,-3,22,-3,22,-3,22,22,]),'USE':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,151,158,198,205,232,264,279,296,297,306,307,311,312,316,],[-3,23,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,23,23,-3,23,-3,-3,23,-3,23,-3,23,23,]),'DECLARE':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,151,158,198,205,232,264,279,296,297,306,307,311,312,316,],[-3,24,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,24,24,-3,24,-3,-3,24,-3,24,-3,24,24,]),'SET':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,101,151,158,198,205,232,264,279,296,297,306,307,311,312,316,],[-3,25,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,157,-3,-3,25,25,-3,25,-3,-3,25,-3,25,-3,25,25,]),'SELECT':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,151,158,198,205,232,264,279,296,297,306,307,311,312,316,],[-3,26,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,26,26,-3,26,-3,-3,26,-3,26,-3,26,26,]),'INSERT':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,151,158,198,205,232,264,279,296,297,306,307,311,312,316,],[-3,27,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,27,27,-3,27,-3,-3,27,-3,27,-3,27,27,]),'ALTER':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,151,158,198,205,232,264,279,296,297,306,307,311,312,316,],[-3,29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,29,29,-3,29,-3,-3,29,-3,29,-3,29,29,]),'IF':([0,2,3,26,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,120,123,151,158,195,198,205,219,231,232,264,279,285,296,297,306,307,311,312,316,],[-3,31,-2,31,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,31,31,-3,-3,31,31,31,31,263,-3,31,-3,299,-3,31,-3,31,-3,31,31,]),'EXEC':([0,2,3,26,28,31,34,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,73,81,85,99,100,118,120,122,123,126,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,151,158,166,167,176,195,198,199,200,202,205,206,217,218,219,221,223,232,237,238,264,265,266,279,288,296,297,298,306,307,311,312,316,],[-3,32,-2,32,32,32,32,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-3,-3,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-3,32,32,32,32,32,-3,32,-3,32,32,-3,32,-3,32,32,]),'DROP':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,149,151,158,198,205,232,264,279,296,297,306,307,311,312,316,],[-3,30,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,197,-3,-3,30,30,-3,30,-3,-3,30,-3,30,-3,30,30,]),'UPDATE':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,151,158,198,205,232,264,279,296,297,306,307,311,312,316,],[-3,33,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,33,33,-3,33,-3,-3,33,-3,33,-3,33,33,]),'WHILE':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,151,158,198,205,232,264,279,296,297,306,307,311,312,316,],[-3,34,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,34,34,-3,34,-3,-3,34,-3,34,-3,34,34,]),'TRUNCATE':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,151,158,198,205,232,264,279,296,297,306,307,311,312,316,],[-3,35,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,35,35,-3,35,-3,-3,35,-3,35,-3,35,35,]),'RETURN':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,151,158,198,205,211,232,245,264,279,296,297,306,307,311,312,316,],[-3,28,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,28,28,247,-3,274,28,-3,-3,28,-3,28,-3,28,28,]),'DELETE':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,151,158,198,205,232,264,279,296,297,306,307,311,312,316,],[-3,36,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,36,36,-3,36,-3,-3,36,-3,36,-3,36,36,]),'$end':([0,1,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,],[-3,0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,]),'END':([3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,79,80,82,83,84,86,87,88,89,90,91,92,95,100,125,136,147,151,153,154,155,156,158,172,178,184,185,186,187,188,189,190,191,192,193,194,198,205,222,232,234,236,264,279,280,287,296,297,306,307,311,312,316,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-88,-90,-92,-99,-102,-105,-107,-108,-109,-110,-111,-114,-112,-68,174,-91,-106,-3,-66,-67,-52,-111,-3,-87,-113,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,231,240,-80,-3,-51,-70,285,-3,-79,-69,-3,308,-3,313,-3,317,319,]),'ELSE':([3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,71,79,80,82,83,84,86,87,88,89,90,91,92,95,100,136,147,151,153,154,155,156,172,178,184,185,186,187,188,189,190,191,192,193,194,198,234,236,257,287,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,127,-88,-90,-92,-99,-102,-105,-107,-108,-109,-110,-111,-114,-112,-68,-91,-106,-3,-66,-67,-52,-111,-87,-113,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,232,-51,-70,127,-69,]),'SEMICOLON':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,59,61,79,80,82,83,84,86,87,88,89,90,91,92,94,95,100,110,111,112,113,114,136,147,150,153,154,155,156,159,161,165,169,170,172,178,184,185,186,187,188,189,190,191,192,193,194,234,236,240,241,243,252,253,254,255,262,263,268,284,287,299,300,308,313,314,317,319,],[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,-23,-26,-88,-90,-92,-99,-102,-105,-107,-108,-109,-110,-111,-114,-121,-112,-68,-25,-81,-82,-83,-84,-91,-106,-71,-66,-67,-52,-111,-76,-22,-24,-28,-38,-87,-113,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,-51,-70,-75,-77,-29,-85,-86,-27,-39,-62,-63,-72,-61,-69,-64,-65,-56,-55,-40,-54,-53,]),'DATA':([22,],[55,]),'TABLE':([22,29,30,35,],[56,96,97,103,]),'FUNCTION':([22,],[57,]),'PROCEDURE':([22,],[58,]),'NAME':([23,26,28,31,32,33,34,56,57,58,64,65,70,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,99,100,103,104,105,118,119,120,122,123,126,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,153,154,155,156,157,162,166,167,172,174,176,178,184,185,186,187,188,189,190,191,192,193,194,195,199,200,202,206,217,218,219,221,223,229,230,234,236,237,238,239,244,263,265,266,287,288,290,298,299,300,310,],[59,64,95,95,100,101,95,106,107,108,-112,121,124,95,-88,-90,95,-92,-99,-102,95,-105,-107,-108,-109,-110,-111,-114,148,-112,149,150,95,95,159,160,161,95,170,64,95,64,95,95,95,95,95,95,95,-91,95,95,95,95,95,95,95,95,95,95,-106,-66,-67,-52,-111,203,207,95,95,-87,220,95,-113,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,64,95,95,95,95,95,95,64,95,95,261,262,-51,-70,95,95,269,207,-63,95,95,-69,95,303,95,-64,-65,315,]),'ID':([24,25,26,28,31,34,73,81,85,99,100,117,118,120,122,123,126,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,163,164,166,167,176,195,199,200,201,202,206,217,218,219,221,223,237,238,246,265,266,288,298,],[60,62,91,91,91,91,91,91,91,91,156,168,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,212,212,91,91,91,91,91,91,235,91,91,91,91,91,91,91,91,91,275,91,91,91,91,]),'TIMES':([26,64,79,80,82,83,84,86,87,88,89,90,91,92,95,100,120,123,136,147,153,154,155,156,172,178,184,185,186,187,188,189,190,191,192,193,194,195,219,234,236,287,],[67,-112,-88,-90,-92,-99,145,-105,-107,-108,-109,-110,-111,-114,-112,-68,67,67,-91,-106,-66,-67,-52,-111,-87,-113,-89,-93,-94,-95,-96,-97,-98,145,145,-103,-104,67,67,-51,-70,-69,]),'CASE':([26,120,123,195,219,],[71,71,71,71,71,]),'HOY':([26,120,123,195,219,],[72,72,72,72,72,]),'CONCATENAR':([26,120,123,195,219,],[74,74,74,74,74,]),'SUBSTRAER':([26,120,123,195,219,],[75,75,75,75,75,]),'CONTAR':([26,120,123,195,219,],[76,76,76,76,76,]),'SUMA':([26,120,123,195,219,],[77,77,77,77,77,]),'CAS':([26,120,123,195,219,],[78,78,78,78,78,]),'NOT_SIGN':([26,28,31,34,73,99,100,118,120,122,123,126,130,131,132,133,134,135,166,167,176,195,199,200,202,206,217,218,219,221,223,237,238,265,266,288,298,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'MINUS':([26,28,31,34,64,73,79,80,81,82,83,84,86,87,88,89,90,91,92,95,99,100,118,120,122,123,126,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,153,154,155,156,166,167,172,176,178,184,185,186,187,188,189,190,191,192,193,194,195,199,200,202,206,217,218,219,221,223,234,236,237,238,265,266,287,288,298,],[85,85,85,85,-112,85,-88,-90,85,-92,144,-102,-105,-107,-108,-109,-110,-111,-114,-112,85,85,85,85,85,85,85,85,85,85,85,85,85,-91,85,85,85,85,85,85,85,85,85,85,-106,-66,-67,-52,-111,85,85,-87,85,-113,-89,144,144,144,144,144,144,-100,-101,-103,-104,85,85,85,85,85,85,85,85,85,85,-51,-70,85,85,85,85,-69,85,85,]),'INTEGER_VALUE':([26,28,31,34,73,81,85,99,100,118,120,122,123,126,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,166,167,176,195,199,200,202,206,217,218,219,221,223,237,238,265,266,288,298,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'DECIMAL_VALUE':([26,28,31,34,73,81,85,99,100,118,120,122,123,126,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,166,167,176,195,199,200,202,206,217,218,219,221,223,237,238,265,266,288,298,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'STRING':([26,28,31,34,73,81,85,99,100,118,120,122,123,126,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,166,167,176,195,199,200,202,206,217,218,219,221,223,237,238,265,266,288,298,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'L_PAREN':([26,28,31,34,72,73,74,75,76,77,78,81,85,99,100,106,107,108,115,116,118,120,122,123,126,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,148,166,167,176,195,199,200,202,206,217,218,219,221,223,237,238,265,266,283,288,298,303,],[73,73,99,73,128,73,130,131,132,133,134,73,73,73,73,162,163,164,166,167,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,195,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,298,73,73,310,]),'INTO':([27,],[93,]),'FROM':([36,63,64,66,67,68,69,121,124,171,173,177,220,224,225,226,256,281,282,],[104,119,-46,-44,-45,-47,-48,-50,-49,-41,-43,-115,-78,-117,-118,-119,-42,-116,-120,]),'BASE':([55,],[105,]),'AS':([60,79,80,82,83,84,86,87,88,89,90,91,92,95,100,111,112,113,114,136,147,153,154,155,156,172,178,183,184,185,186,187,188,189,190,191,192,193,194,212,214,234,236,250,252,253,275,276,287,292,],[109,-88,-90,-92,-99,-102,-105,-107,-108,-109,-110,-111,-114,-112,-68,-81,-82,-83,-84,-91,-106,-66,-67,-52,-111,-87,-113,227,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,249,251,-51,-70,278,-85,-86,293,295,-69,304,]),'INT':([60,109,207,212,227,247,249,261,274,275,293,],[111,111,111,111,111,111,111,111,111,111,111,]),'DECIMAL':([60,109,207,212,227,247,249,261,274,275,293,],[112,112,112,112,112,112,112,112,112,112,112,]),'DATE':([60,109,207,212,227,247,249,261,274,275,293,],[113,113,113,113,113,113,113,113,113,113,113,]),'DATETIME':([60,109,207,212,227,247,249,261,274,275,293,],[114,114,114,114,114,114,114,114,114,114,114,]),'NCHAR':([60,109,207,212,227,247,249,261,274,275,293,],[115,115,115,115,115,115,115,115,115,115,115,]),'NVARCHAR':([60,109,207,212,227,247,249,261,274,275,293,],[116,116,116,116,116,116,116,116,116,116,116,]),'COMMA':([61,63,64,66,67,68,69,79,80,82,83,84,86,87,88,89,90,91,92,95,100,111,112,113,114,121,124,136,147,152,153,154,155,156,169,171,172,173,177,178,179,184,185,186,187,188,189,190,191,192,193,194,204,208,209,210,213,220,224,225,226,228,233,234,236,242,248,252,253,254,256,267,270,272,273,277,281,282,287,291,294,301,302,305,309,318,],[117,120,-46,-44,-45,-47,-48,-88,-90,-92,-99,-102,-105,-107,-108,-109,-110,-111,-114,-112,-68,-81,-82,-83,-84,-50,-49,-91,-106,199,200,201,-52,-111,-28,-41,-87,-43,-115,-113,223,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,239,244,-31,246,246,-78,-117,-118,-119,120,265,-51,-70,-37,-59,-85,-86,-27,-42,-74,-33,-36,-30,-60,-116,-120,-69,-35,-58,-73,-32,-57,200,-34,]),'ASSIGN':([62,156,168,203,235,269,],[118,202,217,237,266,288,]),'POINT':([64,66,67,68,69,121,124,171,177,220,224,225,226,281,282,],[-46,123,-45,-47,-48,-50,-49,219,-115,-78,-117,-118,-119,-116,-120,]),'R_PAREN':([64,66,67,68,69,79,80,82,83,84,86,87,88,89,90,91,92,95,100,111,112,113,114,121,124,128,129,136,147,152,153,154,155,156,163,164,171,172,173,177,178,180,181,182,184,185,186,187,188,189,190,191,192,193,194,208,209,210,213,215,216,220,224,225,226,228,234,236,242,248,252,253,256,258,259,270,272,273,277,281,282,286,287,291,294,302,305,309,315,318,],[-46,-44,-45,-47,-48,-88,-90,-92,-99,-102,-105,-107,-108,-109,-110,-111,-114,-112,-68,-81,-82,-83,-84,-50,-49,177,178,-91,-106,178,-66,-67,-52,-111,211,214,-41,-87,-43,-115,-113,224,225,226,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,243,-31,245,250,252,253,-78,-117,-118,-119,260,-51,-70,-37,-59,-85,-86,-42,281,282,-33,-36,-30,-60,-116,-120,300,-69,-35,-58,-32,-57,314,318,-34,]),'DIVIDE':([64,79,80,82,83,84,86,87,88,89,90,91,92,95,100,136,147,153,154,155,156,172,178,184,185,186,187,188,189,190,191,192,193,194,234,236,287,],[-112,-88,-90,-92,-99,146,-105,-107,-108,-109,-110,-111,-114,-112,-68,-91,-106,-66,-67,-52,-111,-87,-113,-89,-93,-94,-95,-96,-97,-98,146,146,-103,-104,-51,-70,-69,]),'PLUS':([64,79,80,82,83,84,86,87,88,89,90,91,92,95,100,136,147,153,154,155,156,172,178,184,185,186,187,188,189,190,191,192,193,194,234,236,287,],[-112,-88,-90,-92,143,-102,-105,-107,-108,-109,-110,-111,-114,-112,-68,-91,-106,-66,-67,-52,-111,-87,-113,-89,143,143,143,143,143,143,-100,-101,-103,-104,-51,-70,-69,]),'EQUALS':([64,79,80,82,83,84,86,87,88,89,90,91,92,95,100,136,147,153,154,155,156,172,178,184,185,186,187,188,189,190,191,192,193,194,234,236,287,],[-112,-88,-90,137,-99,-102,-105,-107,-108,-109,-110,-111,-114,-112,-68,137,-106,-66,-67,-52,-111,-87,-113,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,-51,-70,-69,]),'NOT_EQ':([64,79,80,82,83,84,86,87,88,89,90,91,92,95,100,136,147,153,154,155,156,172,178,184,185,186,187,188,189,190,191,192,193,194,234,236,287,],[-112,-88,-90,138,-99,-102,-105,-107,-108,-109,-110,-111,-114,-112,-68,138,-106,-66,-67,-52,-111,-87,-113,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,-51,-70,-69,]),'LESS_THAN':([64,79,80,82,83,84,86,87,88,89,90,91,92,95,100,136,147,153,154,155,156,172,178,184,185,186,187,188,189,190,191,192,193,194,234,236,287,],[-112,-88,-90,139,-99,-102,-105,-107,-108,-109,-110,-111,-114,-112,-68,139,-106,-66,-67,-52,-111,-87,-113,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,-51,-70,-69,]),'GREATER_THAN':([64,79,80,82,83,84,86,87,88,89,90,91,92,95,100,136,147,153,154,155,156,172,178,184,185,186,187,188,189,190,191,192,193,194,234,236,287,],[-112,-88,-90,140,-99,-102,-105,-107,-108,-109,-110,-111,-114,-112,-68,140,-106,-66,-67,-52,-111,-87,-113,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,-51,-70,-69,]),'LESS_EQ':([64,79,80,82,83,84,86,87,88,89,90,91,92,95,100,136,147,153,154,155,156,172,178,184,185,186,187,188,189,190,191,192,193,194,234,236,287,],[-112,-88,-90,141,-99,-102,-105,-107,-108,-109,-110,-111,-114,-112,-68,141,-106,-66,-67,-52,-111,-87,-113,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,-51,-70,-69,]),'GREATER_EQ':([64,79,80,82,83,84,86,87,88,89,90,91,92,95,100,136,147,153,154,155,156,172,178,184,185,186,187,188,189,190,191,192,193,194,234,236,287,],[-112,-88,-90,142,-99,-102,-105,-107,-108,-109,-110,-111,-114,-112,-68,142,-106,-66,-67,-52,-111,-87,-113,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,-51,-70,-69,]),'AND':([64,79,80,82,83,84,86,87,88,89,90,91,92,95,100,136,147,153,154,155,156,172,178,184,185,186,187,188,189,190,191,192,193,194,234,236,287,],[-112,135,-90,-92,-99,-102,-105,-107,-108,-109,-110,-111,-114,-112,-68,-91,-106,-66,-67,-52,-111,135,-113,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,-51,-70,-69,]),'OR':([64,65,79,80,82,83,84,86,87,88,89,90,91,92,94,95,98,100,102,129,136,147,152,153,154,155,156,169,172,175,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,215,216,222,233,234,236,241,254,255,257,258,267,268,286,287,301,],[-112,122,-88,-90,-92,-99,-102,-105,-107,-108,-109,-110,-111,-114,122,-112,122,-68,122,122,-91,-106,122,-66,-67,122,-111,122,-87,122,-113,122,122,122,122,122,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'WHEN':([71,79,80,82,83,84,86,87,88,89,90,91,92,95,100,136,147,153,154,155,156,172,178,184,185,186,187,188,189,190,191,192,193,194,234,236,257,287,],[126,-88,-90,-92,-99,-102,-105,-107,-108,-109,-110,-111,-114,-112,-68,-91,-106,-66,-67,-52,-111,-87,-113,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,-51,-70,126,-69,]),'THEN':([79,80,82,83,84,86,87,88,89,90,91,92,95,98,100,127,136,147,153,154,155,156,172,175,178,184,185,186,187,188,189,190,191,192,193,194,234,236,287,],[-88,-90,-92,-99,-102,-105,-107,-108,-109,-110,-111,-114,-112,151,-68,176,-91,-106,-66,-67,-52,-111,-87,221,-113,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,-51,-70,-69,]),'BEGIN':([79,80,82,83,84,86,87,88,89,90,91,92,95,100,102,136,147,153,154,155,156,172,178,184,185,186,187,188,189,190,191,192,193,194,234,236,251,278,287,295,304,],[-88,-90,-92,-99,-102,-105,-107,-108,-109,-110,-111,-114,-112,-68,158,-91,-106,-66,-67,-52,-111,-87,-113,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,-51,-70,279,296,-69,306,311,]),'WHERE':([79,80,82,83,84,86,87,88,89,90,91,92,95,100,136,147,153,154,155,156,160,170,172,178,184,185,186,187,188,189,190,191,192,193,194,204,234,236,267,287,301,],[-88,-90,-92,-99,-102,-105,-107,-108,-109,-110,-111,-114,-112,-68,-91,-106,-66,-67,-52,-111,206,218,-87,-113,-89,-93,-94,-95,-96,-97,-98,-100,-101,-103,-104,238,-51,-70,-74,-69,-73,]),'NOT':([111,112,113,114,242,252,253,],[-81,-82,-83,-84,271,-85,-86,]),'NULL':([111,112,113,114,242,252,253,271,],[-81,-82,-83,-84,272,-85,-86,291,]),'PRIMARY':([111,112,113,114,242,252,253,270,272,291,],[-81,-82,-83,-84,-37,-85,-86,289,-36,-35,]),'REFERENCE':([111,112,113,114,242,252,253,270,272,291,],[-81,-82,-83,-84,-37,-85,-86,290,-36,-35,]),'ADD':([149,],[196,]),'COLUMN':([196,197,],[229,230,]),'VALUES':([260,],[283,]),'KEY':([289,],[302,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'statements':([0,151,158,232,279,296,306,311,],[2,198,205,264,297,307,312,316,]),'statement':([2,198,205,264,297,307,312,316,],[3,3,3,3,3,3,3,3,]),'create_database_statement':([2,198,205,264,297,307,312,316,],[4,4,4,4,4,4,4,4,]),'use_statement':([2,198,205,264,297,307,312,316,],[5,5,5,5,5,5,5,5,]),'declare_statement':([2,198,205,264,297,307,312,316,],[6,6,6,6,6,6,6,6,]),'set_statement':([2,198,205,264,297,307,312,316,],[7,7,7,7,7,7,7,7,]),'create_table_statement':([2,198,205,264,297,307,312,316,],[8,8,8,8,8,8,8,8,]),'select_statement':([2,198,205,264,297,307,312,316,],[9,9,9,9,9,9,9,9,]),'insert_statement':([2,198,205,264,297,307,312,316,],[10,10,10,10,10,10,10,10,]),'create_function_statement':([2,198,205,264,297,307,312,316,],[11,11,11,11,11,11,11,11,]),'create_procedure_statement':([2,198,205,264,297,307,312,316,],[12,12,12,12,12,12,12,12,]),'alter_table_statement':([2,198,205,264,297,307,312,316,],[13,13,13,13,13,13,13,13,]),'if_statement':([2,26,120,123,195,198,205,219,264,297,307,312,316,],[14,70,70,70,70,14,14,70,14,14,14,14,14,]),'exec_statement':([2,26,28,31,34,73,81,85,99,100,118,120,122,123,126,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,166,167,176,195,198,199,200,202,205,206,217,218,219,221,223,237,238,264,265,266,288,297,298,307,312,316,],[15,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,15,92,92,92,15,92,92,92,92,92,92,92,92,15,92,92,92,15,92,15,15,15,]),'drop_table_statement':([2,198,205,264,297,307,312,316,],[16,16,16,16,16,16,16,16,]),'update_statement':([2,198,205,264,297,307,312,316,],[17,17,17,17,17,17,17,17,]),'while_statement':([2,198,205,264,297,307,312,316,],[18,18,18,18,18,18,18,18,]),'truncate_statement':([2,198,205,264,297,307,312,316,],[19,19,19,19,19,19,19,19,]),'return_statement':([2,198,205,264,297,307,312,316,],[20,20,20,20,20,20,20,20,]),'delete_statement':([2,198,205,264,297,307,312,316,],[21,21,21,21,21,21,21,21,]),'assignments':([25,],[61,]),'columns':([26,195,],[63,228,]),'a':([26,28,31,34,73,99,100,118,120,123,126,130,131,132,133,134,166,167,176,195,199,200,202,206,217,218,219,221,223,237,238,265,266,288,298,],[65,94,98,102,129,152,155,169,65,65,175,179,180,181,182,183,215,216,222,65,233,234,236,241,254,255,65,257,258,267,268,286,287,301,155,]),'column':([26,120,123,195,219,],[66,171,173,66,256,]),'case_statement':([26,120,123,195,219,],[68,68,68,68,68,]),'call_function_prod':([26,120,123,195,219,],[69,69,69,69,69,]),'b':([26,28,31,34,73,99,100,118,120,122,123,126,130,131,132,133,134,166,167,176,195,199,200,202,206,217,218,219,221,223,237,238,265,266,288,298,],[79,79,79,79,79,79,79,79,79,172,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'c':([26,28,31,34,73,99,100,118,120,122,123,126,130,131,132,133,134,135,166,167,176,195,199,200,202,206,217,218,219,221,223,237,238,265,266,288,298,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,184,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'d':([26,28,31,34,73,81,99,100,118,120,122,123,126,130,131,132,133,134,135,166,167,176,195,199,200,202,206,217,218,219,221,223,237,238,265,266,288,298,],[82,82,82,82,82,136,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'e':([26,28,31,34,73,81,99,100,118,120,122,123,126,130,131,132,133,134,135,137,138,139,140,141,142,166,167,176,195,199,200,202,206,217,218,219,221,223,237,238,265,266,288,298,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,185,186,187,188,189,190,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'f':([26,28,31,34,73,81,99,100,118,120,122,123,126,130,131,132,133,134,135,137,138,139,140,141,142,143,144,166,167,176,195,199,200,202,206,217,218,219,221,223,237,238,265,266,288,298,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,191,192,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'g':([26,28,31,34,73,81,99,100,118,120,122,123,126,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,166,167,176,195,199,200,202,206,217,218,219,221,223,237,238,265,266,288,298,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,193,194,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'h':([26,28,31,34,73,81,85,99,100,118,120,122,123,126,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,166,167,176,195,199,200,202,206,217,218,219,221,223,237,238,265,266,288,298,],[87,87,87,87,87,87,147,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'type':([60,109,207,212,227,247,249,261,274,275,293,],[110,165,242,248,259,276,277,284,292,294,305,]),'when_statements':([71,257,],[125,280,]),'vals':([100,298,],[153,309,]),'args':([100,],[154,]),'column_assignments':([157,],[204,]),'properties':([162,],[208,]),'property':([162,244,],[209,273,]),'parameters':([163,164,],[210,213,]),'null_prod':([242,],[270,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> statements','init',1,'p_init','grammar.py',214),
  ('statements -> statements statement','statements',2,'p_statements','grammar.py',219),
  ('statements -> <empty>','statements',0,'p_statements_2','grammar.py',225),
  ('statement -> create_database_statement SEMICOLON','statement',2,'p_statement','grammar.py',230),
  ('statement -> use_statement SEMICOLON','statement',2,'p_statement','grammar.py',231),
  ('statement -> declare_statement SEMICOLON','statement',2,'p_statement','grammar.py',232),
  ('statement -> set_statement SEMICOLON','statement',2,'p_statement','grammar.py',233),
  ('statement -> create_table_statement SEMICOLON','statement',2,'p_statement','grammar.py',234),
  ('statement -> select_statement SEMICOLON','statement',2,'p_statement','grammar.py',235),
  ('statement -> insert_statement SEMICOLON','statement',2,'p_statement','grammar.py',236),
  ('statement -> create_function_statement SEMICOLON','statement',2,'p_statement','grammar.py',237),
  ('statement -> create_procedure_statement SEMICOLON','statement',2,'p_statement','grammar.py',238),
  ('statement -> alter_table_statement SEMICOLON','statement',2,'p_statement','grammar.py',239),
  ('statement -> if_statement SEMICOLON','statement',2,'p_statement','grammar.py',240),
  ('statement -> exec_statement SEMICOLON','statement',2,'p_statement','grammar.py',241),
  ('statement -> drop_table_statement SEMICOLON','statement',2,'p_statement','grammar.py',242),
  ('statement -> update_statement SEMICOLON','statement',2,'p_statement','grammar.py',243),
  ('statement -> while_statement SEMICOLON','statement',2,'p_statement','grammar.py',244),
  ('statement -> truncate_statement SEMICOLON','statement',2,'p_statement','grammar.py',245),
  ('statement -> return_statement SEMICOLON','statement',2,'p_statement','grammar.py',246),
  ('statement -> delete_statement SEMICOLON','statement',2,'p_statement','grammar.py',247),
  ('create_database_statement -> CREATE DATA BASE NAME','create_database_statement',4,'p_create_database_statement','grammar.py',254),
  ('use_statement -> USE NAME','use_statement',2,'p_use_statement','grammar.py',260),
  ('declare_statement -> DECLARE ID AS type','declare_statement',4,'p_declare_statement','grammar.py',266),
  ('declare_statement -> DECLARE ID type','declare_statement',3,'p_declare_statement_2','grammar.py',270),
  ('set_statement -> SET assignments','set_statement',2,'p_set_statement','grammar.py',276),
  ('assignments -> assignments COMMA ID ASSIGN a','assignments',5,'p_assignments','grammar.py',281),
  ('assignments -> ID ASSIGN a','assignments',3,'p_assignments_2','grammar.py',287),
  ('create_table_statement -> CREATE TABLE NAME L_PAREN properties R_PAREN','create_table_statement',6,'p_create_table_statement','grammar.py',295),
  ('properties -> properties COMMA property','properties',3,'p_properties','grammar.py',299),
  ('properties -> property','properties',1,'p_properties_2','grammar.py',303),
  ('property -> NAME type null_prod PRIMARY KEY','property',5,'p_property','grammar.py',307),
  ('property -> NAME type null_prod','property',3,'p_property_2','grammar.py',311),
  ('property -> NAME type null_prod REFERENCE NAME L_PAREN NAME R_PAREN','property',8,'p_property_3','grammar.py',315),
  ('null_prod -> NOT NULL','null_prod',2,'p_null_prod','grammar.py',319),
  ('null_prod -> NULL','null_prod',1,'p_null_prod_2','grammar.py',323),
  ('null_prod -> <empty>','null_prod',0,'p_null_prod_3','grammar.py',327),
  ('select_statement -> SELECT columns FROM NAME','select_statement',4,'p_select_statement','grammar.py',333),
  ('select_statement -> SELECT columns FROM NAME WHERE a','select_statement',6,'p_select_statement_2','grammar.py',337),
  ('insert_statement -> INSERT INTO NAME L_PAREN columns R_PAREN VALUES L_PAREN vals R_PAREN','insert_statement',10,'p_insert_statement','grammar.py',342),
  ('columns -> columns COMMA column','columns',3,'p_columns','grammar.py',348),
  ('columns -> columns COMMA column POINT column','columns',5,'p_columns_2','grammar.py',352),
  ('columns -> column POINT column','columns',3,'p_columns_3','grammar.py',355),
  ('columns -> column','columns',1,'p_columns_4','grammar.py',358),
  ('column -> TIMES','column',1,'p_column','grammar.py',361),
  ('column -> NAME','column',1,'p_column','grammar.py',362),
  ('column -> case_statement','column',1,'p_column','grammar.py',363),
  ('column -> call_function_prod','column',1,'p_column','grammar.py',364),
  ('column -> if_statement NAME','column',2,'p_column','grammar.py',365),
  ('column -> a NAME','column',2,'p_column','grammar.py',366),
  ('vals -> vals COMMA a','vals',3,'p_vals','grammar.py',371),
  ('vals -> a','vals',1,'p_vals_2','grammar.py',375),
  ('create_function_statement -> CREATE FUNCTION NAME L_PAREN parameters R_PAREN RETURN type AS BEGIN statements END','create_function_statement',12,'p_create_function_statement','grammar.py',381),
  ('create_function_statement -> CREATE FUNCTION NAME L_PAREN R_PAREN RETURN type AS BEGIN statements END','create_function_statement',11,'p_create_function_statement_2','grammar.py',385),
  ('create_procedure_statement -> CREATE PROCEDURE NAME L_PAREN parameters R_PAREN AS BEGIN statements END','create_procedure_statement',10,'p_create_procedure_statement','grammar.py',389),
  ('create_procedure_statement -> CREATE PROCEDURE NAME L_PAREN R_PAREN AS BEGIN statements END','create_procedure_statement',9,'p_create_procedure_statement_2','grammar.py',393),
  ('parameters -> parameters COMMA ID AS type','parameters',5,'p_parameters','grammar.py',399),
  ('parameters -> parameters COMMA ID type','parameters',4,'p_parameters_2','grammar.py',405),
  ('parameters -> ID type','parameters',2,'p_parameters_3','grammar.py',410),
  ('parameters -> ID AS type','parameters',3,'p_parameters_4','grammar.py',415),
  ('alter_table_statement -> ALTER TABLE NAME ADD COLUMN NAME type','alter_table_statement',7,'p_alter_table_statement','grammar.py',424),
  ('alter_table_statement -> ALTER TABLE NAME DROP COLUMN NAME','alter_table_statement',6,'p_alter_table_statement_2','grammar.py',428),
  ('if_statement -> IF a THEN statements END IF','if_statement',6,'p_if_statement','grammar.py',441),
  ('if_statement -> IF a THEN statements ELSE statements END IF','if_statement',8,'p_if_statement_2','grammar.py',446),
  ('if_statement -> IF L_PAREN a COMMA a COMMA a R_PAREN','if_statement',8,'p_if_statement_3','grammar.py',452),
  ('exec_statement -> EXEC NAME vals','exec_statement',3,'p_exec_statement','grammar.py',457),
  ('exec_statement -> EXEC NAME args','exec_statement',3,'p_exec_statement_2','grammar.py',461),
  ('exec_statement -> EXEC NAME','exec_statement',2,'p_exec_statement_3','grammar.py',465),
  ('args -> args COMMA ID ASSIGN a','args',5,'p_args','grammar.py',469),
  ('args -> ID ASSIGN a','args',3,'p_args_2','grammar.py',472),
  ('drop_table_statement -> DROP TABLE NAME','drop_table_statement',3,'p_drop_table_statement','grammar.py',477),
  ('update_statement -> UPDATE NAME SET column_assignments WHERE a','update_statement',6,'p_update_statement','grammar.py',482),
  ('column_assignments -> column_assignments COMMA NAME ASSIGN a','column_assignments',5,'p_column_assignments','grammar.py',487),
  ('column_assignments -> NAME ASSIGN a','column_assignments',3,'p_column_assignments_2','grammar.py',491),
  ('while_statement -> WHILE a BEGIN statements END','while_statement',5,'p_while_statement','grammar.py',496),
  ('truncate_statement -> TRUNCATE TABLE NAME','truncate_statement',3,'p_truncate_statement','grammar.py',502),
  ('delete_statement -> DELETE FROM NAME WHERE a','delete_statement',5,'p_delete_statement','grammar.py',507),
  ('case_statement -> CASE when_statements END NAME','case_statement',4,'p_case_statement','grammar.py',512),
  ('when_statements -> WHEN a THEN a when_statements','when_statements',5,'p_when_statement','grammar.py',516),
  ('when_statements -> ELSE THEN a','when_statements',3,'p_when_statement_2','grammar.py',520),
  ('type -> INT','type',1,'p_type','grammar.py',524),
  ('type -> DECIMAL','type',1,'p_type','grammar.py',525),
  ('type -> DATE','type',1,'p_type','grammar.py',526),
  ('type -> DATETIME','type',1,'p_type','grammar.py',527),
  ('type -> NCHAR L_PAREN a R_PAREN','type',4,'p_type_2','grammar.py',533),
  ('type -> NVARCHAR L_PAREN a R_PAREN','type',4,'p_type_2','grammar.py',534),
  ('a -> a OR b','a',3,'p_a','grammar.py',538),
  ('a -> b','a',1,'p_a_2','grammar.py',543),
  ('b -> b AND c','b',3,'p_b','grammar.py',548),
  ('b -> c','b',1,'p_b_2','grammar.py',553),
  ('c -> NOT_SIGN d','c',2,'p_c','grammar.py',558),
  ('c -> d','c',1,'p_c_2','grammar.py',563),
  ('d -> d EQUALS e','d',3,'p_d','grammar.py',568),
  ('d -> d NOT_EQ e','d',3,'p_d','grammar.py',569),
  ('d -> d LESS_THAN e','d',3,'p_d','grammar.py',570),
  ('d -> d GREATER_THAN e','d',3,'p_d','grammar.py',571),
  ('d -> d LESS_EQ e','d',3,'p_d','grammar.py',572),
  ('d -> d GREATER_EQ e','d',3,'p_d','grammar.py',573),
  ('d -> e','d',1,'p_d_2','grammar.py',579),
  ('e -> e PLUS f','e',3,'p_e','grammar.py',584),
  ('e -> e MINUS f','e',3,'p_e','grammar.py',585),
  ('e -> f','e',1,'p_e_2','grammar.py',590),
  ('f -> f TIMES g','f',3,'p_f','grammar.py',595),
  ('f -> f DIVIDE g','f',3,'p_f','grammar.py',596),
  ('f -> g','f',1,'p_f_2','grammar.py',601),
  ('g -> MINUS h','g',2,'p_g','grammar.py',606),
  ('g -> h','g',1,'p_g_2','grammar.py',611),
  ('h -> INTEGER_VALUE','h',1,'p_h','grammar.py',616),
  ('h -> DECIMAL_VALUE','h',1,'p_h_2','grammar.py',621),
  ('h -> STRING','h',1,'p_h_3','grammar.py',626),
  ('h -> ID','h',1,'p_h_4','grammar.py',631),
  ('h -> NAME','h',1,'p_h_5','grammar.py',636),
  ('h -> L_PAREN a R_PAREN','h',3,'p_h_6','grammar.py',640),
  ('h -> exec_statement','h',1,'p_h_7','grammar.py',644),
  ('call_function_prod -> HOY L_PAREN R_PAREN','call_function_prod',3,'p_call_function_prod','grammar.py',648),
  ('call_function_prod -> CONCATENAR L_PAREN a COMMA a R_PAREN','call_function_prod',6,'p_call_function_prod','grammar.py',649),
  ('call_function_prod -> SUBSTRAER L_PAREN a R_PAREN','call_function_prod',4,'p_call_function_prod','grammar.py',650),
  ('call_function_prod -> CONTAR L_PAREN a R_PAREN','call_function_prod',4,'p_call_function_prod','grammar.py',651),
  ('call_function_prod -> SUMA L_PAREN a R_PAREN','call_function_prod',4,'p_call_function_prod','grammar.py',652),
  ('call_function_prod -> CAS L_PAREN a AS type R_PAREN','call_function_prod',6,'p_call_function_prod','grammar.py',653),
  ('return_statement -> RETURN a','return_statement',2,'p_return_statement','grammar.py',657),
]
