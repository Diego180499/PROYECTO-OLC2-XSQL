
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALTER AND AS ASSIGN BASE BEGIN CAS CASE COLUMN COMMA CONCATENAR CONTAR CREATE DATA DATE DATETIME DECIMAL DECIMAL_VALUE DECLARE DELETE DIVIDE DROP ELSE END EQUALS EXEC FROM FUNCTION GREATER_EQ GREATER_THAN HOY ID IF INSERT INT INTEGER_VALUE INTO KEY LESS_EQ LESS_THAN L_PAREN MINUS NAME NCHAR NOT NOT_EQ NOT_SIGN NULL NVARCHAR OR PLUS POINT PRIMARY PROCEDURE REFERENCE RETURN R_PAREN SELECT SEMICOLON SET STRING SUBSTRAER SUMA TABLE THEN TIMES TRUNCATE UPDATE USE VALUES WHEN WHERE WHILEinit   : statementsstatements : statements statementstatements : statement    : create_database_statement SEMICOLON\n                    | use_statement SEMICOLON\n                    | declare_statement SEMICOLON\n                    | set_statement SEMICOLON\n                    | create_table_statement SEMICOLON\n                    | select_statement SEMICOLON\n                    | insert_statement SEMICOLON\n                    | create_function_statement SEMICOLON\n                    | create_procedure_statement SEMICOLON\n                    | alter_table_statement SEMICOLON\n                    | if_statement SEMICOLON\n                    | exec_statement SEMICOLON\n                    | drop_table_statement SEMICOLON\n                    | update_statement SEMICOLON\n                    | while_statement SEMICOLON\n                    | truncate_statement SEMICOLON\n                    | return_statement SEMICOLON\n                    | delete_statement SEMICOLONcreate_database_statement    : CREATE DATA BASE NAMEuse_statement   : USE NAMEdeclare_statement   : DECLARE ID AS typedeclare_statement   : DECLARE ID  typeset_statement   : SET assignmentsassignments    : assignments COMMA ID ASSIGN aassignments    : ID ASSIGN acreate_table_statement : CREATE TABLE NAME L_PAREN properties R_PARENproperties : properties COMMA propertyproperties : propertyproperty   : NAME type null_prod PRIMARY KEYproperty   : NAME type null_prodproperty   : NAME type null_prod REFERENCE NAME L_PAREN NAME R_PARENnull_prod  : NOT NULLnull_prod  : NULLnull_prod  : select_statement   : SELECT columns FROM NAMEselect_statement   : SELECT columns FROM NAME WHERE ainsert_statement   : INSERT INTO NAME L_PAREN columns R_PAREN VALUES L_PAREN vals R_PARENcolumns    : columns COMMA columncolumns    : columns COMMA column POINT columncolumns    : column POINT columncolumns    : columncolumn   : TIMES\n                | NAME\n                | case_statement\n                | call_function_prod\n                | if_statement NAME\n                | a NAMEvals   : vals COMMA avals   : acreate_function_statement  : CREATE FUNCTION NAME L_PAREN parameters R_PAREN RETURN type AS BEGIN statements ENDcreate_function_statement  : CREATE FUNCTION NAME L_PAREN R_PAREN RETURN type AS BEGIN statements ENDcreate_procedure_statement : CREATE PROCEDURE NAME L_PAREN parameters R_PAREN AS BEGIN statements ENDcreate_procedure_statement : CREATE PROCEDURE NAME L_PAREN R_PAREN AS BEGIN statements ENDparameters : parameters COMMA ID AS typeparameters : parameters COMMA ID typeparameters : ID typeparameters : ID AS typealter_table_statement  : ALTER TABLE NAME ADD COLUMN NAME typealter_table_statement  : ALTER TABLE NAME DROP COLUMN NAMEif_statement   : IF a THEN statements END IFif_statement   : IF a THEN statements ELSE statements END IFif_statement   : IF L_PAREN a COMMA a COMMA a R_PARENexec_statement : EXEC NAME valsdrop_table_statement   : DROP TABLE NAMEupdate_statement   : UPDATE NAME SET column_assignments WHERE acolumn_assignments  : column_assignments COMMA NAME ASSIGN acolumn_assignments : NAME ASSIGN awhile_statement    : WHILE a BEGIN statements ENDtruncate_statement : TRUNCATE TABLE NAMEdelete_statement : DELETE FROM NAME WHERE acase_statement : CASE when_statements END NAMEwhen_statements : WHEN a THEN a when_statementswhen_statements : ELSE THEN atype : INT\n            | DECIMAL\n            | DATE\n            | DATETIMEtype : NCHAR L_PAREN a R_PAREN\n            | NVARCHAR L_PAREN a R_PARENa    : a OR ba  : bb  : b AND cb  : cc  : NOT_SIGN dc  : dd    : d EQUALS e\n            | d NOT_EQ e\n            | d LESS_THAN e\n            | d GREATER_THAN e\n            | d LESS_EQ e\n            | d GREATER_EQ e\n    d  : ee    : e PLUS f\n            | e MINUS fe  : ff    : f TIMES g\n            | f DIVIDE gf  : gg  : MINUS hg  : hh    : INTEGER_VALUEh    : DECIMAL_VALUEh    : STRINGh    : IDh    : NAMEh    : L_PAREN a R_PARENcall_function_prod   : HOY L_PAREN R_PAREN\n                            | CONCATENAR L_PAREN a COMMA a R_PAREN\n                            | SUBSTRAER L_PAREN a R_PAREN\n                            | CONTAR L_PAREN a R_PAREN\n                            | SUMA L_PAREN a R_PAREN\n                            | CAS L_PAREN a AS type R_PAREN\n    return_statement : RETURN a'
    
_lr_action_items = {'CREATE':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,150,155,195,200,227,257,271,287,288,297,298,302,303,307,],[-3,22,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,22,22,-3,22,-3,-3,22,-3,22,-3,22,22,]),'USE':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,150,155,195,200,227,257,271,287,288,297,298,302,303,307,],[-3,23,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,23,23,-3,23,-3,-3,23,-3,23,-3,23,23,]),'DECLARE':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,150,155,195,200,227,257,271,287,288,297,298,302,303,307,],[-3,24,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,24,24,-3,24,-3,-3,24,-3,24,-3,24,24,]),'SET':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,100,150,155,195,200,227,257,271,287,288,297,298,302,303,307,],[-3,25,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,154,-3,-3,25,25,-3,25,-3,-3,25,-3,25,-3,25,25,]),'SELECT':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,150,155,195,200,227,257,271,287,288,297,298,302,303,307,],[-3,26,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,26,26,-3,26,-3,-3,26,-3,26,-3,26,26,]),'INSERT':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,150,155,195,200,227,257,271,287,288,297,298,302,303,307,],[-3,27,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,27,27,-3,27,-3,-3,27,-3,27,-3,27,27,]),'ALTER':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,150,155,195,200,227,257,271,287,288,297,298,302,303,307,],[-3,29,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,29,29,-3,29,-3,-3,29,-3,29,-3,29,29,]),'IF':([0,2,3,26,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,119,122,150,155,192,195,200,214,226,227,257,271,277,287,288,297,298,302,303,307,],[-3,31,-2,31,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,31,31,-3,-3,31,31,31,31,256,-3,31,-3,290,-3,31,-3,31,-3,31,31,]),'EXEC':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,150,155,195,200,227,257,271,287,288,297,298,302,303,307,],[-3,32,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,32,32,-3,32,-3,-3,32,-3,32,-3,32,32,]),'DROP':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,148,150,155,195,200,227,257,271,287,288,297,298,302,303,307,],[-3,30,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,194,-3,-3,30,30,-3,30,-3,-3,30,-3,30,-3,30,30,]),'UPDATE':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,150,155,195,200,227,257,271,287,288,297,298,302,303,307,],[-3,33,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,33,33,-3,33,-3,-3,33,-3,33,-3,33,33,]),'WHILE':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,150,155,195,200,227,257,271,287,288,297,298,302,303,307,],[-3,34,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,34,34,-3,34,-3,-3,34,-3,34,-3,34,34,]),'TRUNCATE':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,150,155,195,200,227,257,271,287,288,297,298,302,303,307,],[-3,35,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,35,35,-3,35,-3,-3,35,-3,35,-3,35,35,]),'RETURN':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,150,155,195,200,206,227,238,257,271,287,288,297,298,302,303,307,],[-3,28,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,28,28,240,-3,266,28,-3,-3,28,-3,28,-3,28,28,]),'DELETE':([0,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,150,155,195,200,227,257,271,287,288,297,298,302,303,307,],[-3,36,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-3,-3,36,36,-3,36,-3,-3,36,-3,36,-3,36,36,]),'$end':([0,1,2,3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,],[-3,0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,]),'END':([3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,79,80,82,83,84,86,87,88,89,90,91,94,124,135,146,150,155,169,175,181,182,183,184,185,186,187,188,189,190,191,195,200,217,227,257,271,272,287,288,297,298,302,303,307,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-84,-86,-88,-95,-98,-101,-103,-104,-105,-106,-107,-108,171,-87,-102,-3,-3,-83,-109,-85,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,226,233,-76,-3,277,-3,-75,-3,299,-3,304,-3,308,310,]),'ELSE':([3,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,71,79,80,82,83,84,86,87,88,89,90,91,94,135,146,150,169,175,181,182,183,184,185,186,187,188,189,190,191,195,250,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,126,-84,-86,-88,-95,-98,-101,-103,-104,-105,-106,-107,-108,-87,-102,-3,-83,-109,-85,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,227,126,]),'SEMICOLON':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,59,61,79,80,82,83,84,86,87,88,89,90,91,93,94,109,110,111,112,113,135,146,149,152,153,156,158,162,166,167,169,175,181,182,183,184,185,186,187,188,189,190,191,229,233,234,236,245,246,247,248,255,256,260,276,290,291,299,304,305,308,310,],[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,-23,-26,-84,-86,-88,-95,-98,-101,-103,-104,-105,-106,-107,-116,-108,-25,-77,-78,-79,-80,-87,-102,-67,-66,-52,-72,-22,-24,-28,-38,-83,-109,-85,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,-51,-71,-73,-29,-81,-82,-27,-39,-62,-63,-68,-61,-64,-65,-56,-55,-40,-54,-53,]),'DATA':([22,],[55,]),'TABLE':([22,29,30,35,],[56,95,96,102,]),'FUNCTION':([22,],[57,]),'PROCEDURE':([22,],[58,]),'NAME':([23,26,28,31,32,33,34,56,57,58,64,65,70,73,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,98,99,102,103,104,117,118,119,121,122,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,154,159,163,164,169,171,173,175,181,182,183,184,185,186,187,188,189,190,191,192,196,197,201,212,213,214,216,218,224,225,230,231,232,237,256,258,279,281,289,290,291,301,],[59,64,94,94,99,100,94,105,106,107,-108,120,123,94,-84,-86,94,-88,-95,-98,94,-101,-103,-104,-105,-106,-107,147,-108,148,149,94,94,156,157,158,94,167,64,94,64,94,94,94,94,94,94,94,-87,94,94,94,94,94,94,94,94,94,94,-102,198,202,94,94,-83,215,94,-109,-85,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,64,94,94,94,94,94,64,94,94,254,255,94,94,261,202,-63,94,94,294,94,-64,-65,306,]),'ID':([24,25,26,28,31,34,73,81,85,98,99,116,117,119,121,122,125,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,160,161,163,164,173,192,196,197,201,212,213,214,216,218,230,231,239,258,279,289,],[60,62,91,91,91,91,91,91,91,91,91,165,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,207,207,91,91,91,91,91,91,91,91,91,91,91,91,91,91,267,91,91,91,]),'TIMES':([26,64,84,86,87,88,89,90,91,94,119,122,146,175,188,189,190,191,192,214,],[67,-108,144,-101,-103,-104,-105,-106,-107,-108,67,67,-102,-109,144,144,-99,-100,67,67,]),'CASE':([26,119,122,192,214,],[71,71,71,71,71,]),'HOY':([26,119,122,192,214,],[72,72,72,72,72,]),'CONCATENAR':([26,119,122,192,214,],[74,74,74,74,74,]),'SUBSTRAER':([26,119,122,192,214,],[75,75,75,75,75,]),'CONTAR':([26,119,122,192,214,],[76,76,76,76,76,]),'SUMA':([26,119,122,192,214,],[77,77,77,77,77,]),'CAS':([26,119,122,192,214,],[78,78,78,78,78,]),'NOT_SIGN':([26,28,31,34,73,98,99,117,119,121,122,125,129,130,131,132,133,134,163,164,173,192,196,197,201,212,213,214,216,218,230,231,258,279,289,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'MINUS':([26,28,31,34,64,73,81,83,84,86,87,88,89,90,91,94,98,99,117,119,121,122,125,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,146,163,164,173,175,182,183,184,185,186,187,188,189,190,191,192,196,197,201,212,213,214,216,218,230,231,258,279,289,],[85,85,85,85,-108,85,85,143,-98,-101,-103,-104,-105,-106,-107,-108,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-102,85,85,85,-109,143,143,143,143,143,143,-96,-97,-99,-100,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'INTEGER_VALUE':([26,28,31,34,73,81,85,98,99,117,119,121,122,125,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,163,164,173,192,196,197,201,212,213,214,216,218,230,231,258,279,289,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'DECIMAL_VALUE':([26,28,31,34,73,81,85,98,99,117,119,121,122,125,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,163,164,173,192,196,197,201,212,213,214,216,218,230,231,258,279,289,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'STRING':([26,28,31,34,73,81,85,98,99,117,119,121,122,125,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,163,164,173,192,196,197,201,212,213,214,216,218,230,231,258,279,289,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'L_PAREN':([26,28,31,34,72,73,74,75,76,77,78,81,85,98,99,105,106,107,114,115,117,119,121,122,125,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,147,163,164,173,192,196,197,201,212,213,214,216,218,230,231,258,275,279,289,294,],[73,73,98,73,127,73,129,130,131,132,133,73,73,73,73,159,160,161,163,164,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,192,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,289,73,73,301,]),'INTO':([27,],[92,]),'FROM':([36,63,64,66,67,68,69,120,123,168,170,174,215,219,220,221,249,273,274,],[103,118,-46,-44,-45,-47,-48,-50,-49,-41,-43,-110,-74,-112,-113,-114,-42,-111,-115,]),'BASE':([55,],[104,]),'AS':([60,79,80,82,83,84,86,87,88,89,90,91,94,110,111,112,113,135,146,169,175,180,181,182,183,184,185,186,187,188,189,190,191,207,209,243,245,246,267,268,283,],[108,-84,-86,-88,-95,-98,-101,-103,-104,-105,-106,-107,-108,-77,-78,-79,-80,-87,-102,-83,-109,222,-85,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,242,244,270,-81,-82,284,286,295,]),'INT':([60,108,202,207,222,240,242,254,266,267,284,],[110,110,110,110,110,110,110,110,110,110,110,]),'DECIMAL':([60,108,202,207,222,240,242,254,266,267,284,],[111,111,111,111,111,111,111,111,111,111,111,]),'DATE':([60,108,202,207,222,240,242,254,266,267,284,],[112,112,112,112,112,112,112,112,112,112,112,]),'DATETIME':([60,108,202,207,222,240,242,254,266,267,284,],[113,113,113,113,113,113,113,113,113,113,113,]),'NCHAR':([60,108,202,207,222,240,242,254,266,267,284,],[114,114,114,114,114,114,114,114,114,114,114,]),'NVARCHAR':([60,108,202,207,222,240,242,254,266,267,284,],[115,115,115,115,115,115,115,115,115,115,115,]),'COMMA':([61,63,64,66,67,68,69,79,80,82,83,84,86,87,88,89,90,91,94,110,111,112,113,120,123,135,146,151,152,153,166,168,169,170,174,175,176,181,182,183,184,185,186,187,188,189,190,191,199,203,204,205,208,215,219,220,221,223,228,229,235,241,245,246,247,249,259,262,264,265,269,273,274,282,285,292,293,296,300,309,],[116,119,-46,-44,-45,-47,-48,-84,-86,-88,-95,-98,-101,-103,-104,-105,-106,-107,-108,-77,-78,-79,-80,-50,-49,-87,-102,196,197,-52,-28,-41,-83,-43,-110,-109,218,-85,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,232,237,-31,239,239,-74,-112,-113,-114,119,258,-51,-37,-59,-81,-82,-27,-42,-70,-33,-36,-30,-60,-111,-115,-35,-58,-69,-32,-57,197,-34,]),'ASSIGN':([62,165,198,261,],[117,212,230,279,]),'POINT':([64,66,67,68,69,120,123,168,174,215,219,220,221,273,274,],[-46,122,-45,-47,-48,-50,-49,214,-110,-74,-112,-113,-114,-111,-115,]),'R_PAREN':([64,66,67,68,69,79,80,82,83,84,86,87,88,89,90,91,94,110,111,112,113,120,123,127,128,135,146,151,153,160,161,168,169,170,174,175,177,178,179,181,182,183,184,185,186,187,188,189,190,191,203,204,205,208,210,211,215,219,220,221,223,229,235,241,245,246,249,251,252,262,264,265,269,273,274,278,282,285,293,296,300,306,309,],[-46,-44,-45,-47,-48,-84,-86,-88,-95,-98,-101,-103,-104,-105,-106,-107,-108,-77,-78,-79,-80,-50,-49,174,175,-87,-102,175,-52,206,209,-41,-83,-43,-110,-109,219,220,221,-85,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,236,-31,238,243,245,246,-74,-112,-113,-114,253,-51,-37,-59,-81,-82,-42,273,274,-33,-36,-30,-60,-111,-115,291,-35,-58,-32,-57,305,309,-34,]),'DIVIDE':([64,84,86,87,88,89,90,91,94,146,175,188,189,190,191,],[-108,145,-101,-103,-104,-105,-106,-107,-108,-102,-109,145,145,-99,-100,]),'PLUS':([64,83,84,86,87,88,89,90,91,94,146,175,182,183,184,185,186,187,188,189,190,191,],[-108,142,-98,-101,-103,-104,-105,-106,-107,-108,-102,-109,142,142,142,142,142,142,-96,-97,-99,-100,]),'EQUALS':([64,82,83,84,86,87,88,89,90,91,94,135,146,175,182,183,184,185,186,187,188,189,190,191,],[-108,136,-95,-98,-101,-103,-104,-105,-106,-107,-108,136,-102,-109,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,]),'NOT_EQ':([64,82,83,84,86,87,88,89,90,91,94,135,146,175,182,183,184,185,186,187,188,189,190,191,],[-108,137,-95,-98,-101,-103,-104,-105,-106,-107,-108,137,-102,-109,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,]),'LESS_THAN':([64,82,83,84,86,87,88,89,90,91,94,135,146,175,182,183,184,185,186,187,188,189,190,191,],[-108,138,-95,-98,-101,-103,-104,-105,-106,-107,-108,138,-102,-109,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,]),'GREATER_THAN':([64,82,83,84,86,87,88,89,90,91,94,135,146,175,182,183,184,185,186,187,188,189,190,191,],[-108,139,-95,-98,-101,-103,-104,-105,-106,-107,-108,139,-102,-109,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,]),'LESS_EQ':([64,82,83,84,86,87,88,89,90,91,94,135,146,175,182,183,184,185,186,187,188,189,190,191,],[-108,140,-95,-98,-101,-103,-104,-105,-106,-107,-108,140,-102,-109,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,]),'GREATER_EQ':([64,82,83,84,86,87,88,89,90,91,94,135,146,175,182,183,184,185,186,187,188,189,190,191,],[-108,141,-95,-98,-101,-103,-104,-105,-106,-107,-108,141,-102,-109,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,]),'AND':([64,79,80,82,83,84,86,87,88,89,90,91,94,135,146,169,175,181,182,183,184,185,186,187,188,189,190,191,],[-108,134,-86,-88,-95,-98,-101,-103,-104,-105,-106,-107,-108,-87,-102,134,-109,-85,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,]),'OR':([64,65,79,80,82,83,84,86,87,88,89,90,91,93,94,97,101,128,135,146,151,153,166,169,172,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,210,211,217,228,229,234,247,248,250,251,259,260,278,292,],[-108,121,-84,-86,-88,-95,-98,-101,-103,-104,-105,-106,-107,121,-108,121,121,121,-87,-102,121,121,121,-83,121,-109,121,121,121,121,121,-85,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'WHEN':([71,79,80,82,83,84,86,87,88,89,90,91,94,135,146,169,175,181,182,183,184,185,186,187,188,189,190,191,250,],[125,-84,-86,-88,-95,-98,-101,-103,-104,-105,-106,-107,-108,-87,-102,-83,-109,-85,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,125,]),'THEN':([79,80,82,83,84,86,87,88,89,90,91,94,97,126,135,146,169,172,175,181,182,183,184,185,186,187,188,189,190,191,],[-84,-86,-88,-95,-98,-101,-103,-104,-105,-106,-107,-108,150,173,-87,-102,-83,216,-109,-85,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,]),'BEGIN':([79,80,82,83,84,86,87,88,89,90,91,94,101,135,146,169,175,181,182,183,184,185,186,187,188,189,190,191,244,270,286,295,],[-84,-86,-88,-95,-98,-101,-103,-104,-105,-106,-107,-108,155,-87,-102,-83,-109,-85,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,271,287,297,302,]),'WHERE':([79,80,82,83,84,86,87,88,89,90,91,94,135,146,157,167,169,175,181,182,183,184,185,186,187,188,189,190,191,199,259,292,],[-84,-86,-88,-95,-98,-101,-103,-104,-105,-106,-107,-108,-87,-102,201,213,-83,-109,-85,-89,-90,-91,-92,-93,-94,-96,-97,-99,-100,231,-70,-69,]),'NOT':([110,111,112,113,235,245,246,],[-77,-78,-79,-80,263,-81,-82,]),'NULL':([110,111,112,113,235,245,246,263,],[-77,-78,-79,-80,264,-81,-82,282,]),'PRIMARY':([110,111,112,113,235,245,246,262,264,282,],[-77,-78,-79,-80,-37,-81,-82,280,-36,-35,]),'REFERENCE':([110,111,112,113,235,245,246,262,264,282,],[-77,-78,-79,-80,-37,-81,-82,281,-36,-35,]),'ADD':([148,],[193,]),'COLUMN':([193,194,],[224,225,]),'VALUES':([253,],[275,]),'KEY':([280,],[293,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'statements':([0,150,155,227,271,287,297,302,],[2,195,200,257,288,298,303,307,]),'statement':([2,195,200,257,288,298,303,307,],[3,3,3,3,3,3,3,3,]),'create_database_statement':([2,195,200,257,288,298,303,307,],[4,4,4,4,4,4,4,4,]),'use_statement':([2,195,200,257,288,298,303,307,],[5,5,5,5,5,5,5,5,]),'declare_statement':([2,195,200,257,288,298,303,307,],[6,6,6,6,6,6,6,6,]),'set_statement':([2,195,200,257,288,298,303,307,],[7,7,7,7,7,7,7,7,]),'create_table_statement':([2,195,200,257,288,298,303,307,],[8,8,8,8,8,8,8,8,]),'select_statement':([2,195,200,257,288,298,303,307,],[9,9,9,9,9,9,9,9,]),'insert_statement':([2,195,200,257,288,298,303,307,],[10,10,10,10,10,10,10,10,]),'create_function_statement':([2,195,200,257,288,298,303,307,],[11,11,11,11,11,11,11,11,]),'create_procedure_statement':([2,195,200,257,288,298,303,307,],[12,12,12,12,12,12,12,12,]),'alter_table_statement':([2,195,200,257,288,298,303,307,],[13,13,13,13,13,13,13,13,]),'if_statement':([2,26,119,122,192,195,200,214,257,288,298,303,307,],[14,70,70,70,70,14,14,70,14,14,14,14,14,]),'exec_statement':([2,195,200,257,288,298,303,307,],[15,15,15,15,15,15,15,15,]),'drop_table_statement':([2,195,200,257,288,298,303,307,],[16,16,16,16,16,16,16,16,]),'update_statement':([2,195,200,257,288,298,303,307,],[17,17,17,17,17,17,17,17,]),'while_statement':([2,195,200,257,288,298,303,307,],[18,18,18,18,18,18,18,18,]),'truncate_statement':([2,195,200,257,288,298,303,307,],[19,19,19,19,19,19,19,19,]),'return_statement':([2,195,200,257,288,298,303,307,],[20,20,20,20,20,20,20,20,]),'delete_statement':([2,195,200,257,288,298,303,307,],[21,21,21,21,21,21,21,21,]),'assignments':([25,],[61,]),'columns':([26,192,],[63,223,]),'a':([26,28,31,34,73,98,99,117,119,122,125,129,130,131,132,133,163,164,173,192,196,197,201,212,213,214,216,218,230,231,258,279,289,],[65,93,97,101,128,151,153,166,65,65,172,176,177,178,179,180,210,211,217,65,228,229,234,247,248,65,250,251,259,260,278,292,153,]),'column':([26,119,122,192,214,],[66,168,170,66,249,]),'case_statement':([26,119,122,192,214,],[68,68,68,68,68,]),'call_function_prod':([26,119,122,192,214,],[69,69,69,69,69,]),'b':([26,28,31,34,73,98,99,117,119,121,122,125,129,130,131,132,133,163,164,173,192,196,197,201,212,213,214,216,218,230,231,258,279,289,],[79,79,79,79,79,79,79,79,79,169,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'c':([26,28,31,34,73,98,99,117,119,121,122,125,129,130,131,132,133,134,163,164,173,192,196,197,201,212,213,214,216,218,230,231,258,279,289,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,181,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'d':([26,28,31,34,73,81,98,99,117,119,121,122,125,129,130,131,132,133,134,163,164,173,192,196,197,201,212,213,214,216,218,230,231,258,279,289,],[82,82,82,82,82,135,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'e':([26,28,31,34,73,81,98,99,117,119,121,122,125,129,130,131,132,133,134,136,137,138,139,140,141,163,164,173,192,196,197,201,212,213,214,216,218,230,231,258,279,289,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,182,183,184,185,186,187,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'f':([26,28,31,34,73,81,98,99,117,119,121,122,125,129,130,131,132,133,134,136,137,138,139,140,141,142,143,163,164,173,192,196,197,201,212,213,214,216,218,230,231,258,279,289,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,188,189,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'g':([26,28,31,34,73,81,98,99,117,119,121,122,125,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,163,164,173,192,196,197,201,212,213,214,216,218,230,231,258,279,289,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,190,191,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'h':([26,28,31,34,73,81,85,98,99,117,119,121,122,125,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,163,164,173,192,196,197,201,212,213,214,216,218,230,231,258,279,289,],[87,87,87,87,87,87,146,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'type':([60,108,202,207,222,240,242,254,266,267,284,],[109,162,235,241,252,268,269,276,283,285,296,]),'when_statements':([71,250,],[124,272,]),'vals':([99,289,],[152,300,]),'column_assignments':([154,],[199,]),'properties':([159,],[203,]),'property':([159,237,],[204,265,]),'parameters':([160,161,],[205,208,]),'null_prod':([235,],[262,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> statements','init',1,'p_init','grammar.py',214),
  ('statements -> statements statement','statements',2,'p_statements','grammar.py',219),
  ('statements -> <empty>','statements',0,'p_statements_2','grammar.py',225),
  ('statement -> create_database_statement SEMICOLON','statement',2,'p_statement','grammar.py',230),
  ('statement -> use_statement SEMICOLON','statement',2,'p_statement','grammar.py',231),
  ('statement -> declare_statement SEMICOLON','statement',2,'p_statement','grammar.py',232),
  ('statement -> set_statement SEMICOLON','statement',2,'p_statement','grammar.py',233),
  ('statement -> create_table_statement SEMICOLON','statement',2,'p_statement','grammar.py',234),
  ('statement -> select_statement SEMICOLON','statement',2,'p_statement','grammar.py',235),
  ('statement -> insert_statement SEMICOLON','statement',2,'p_statement','grammar.py',236),
  ('statement -> create_function_statement SEMICOLON','statement',2,'p_statement','grammar.py',237),
  ('statement -> create_procedure_statement SEMICOLON','statement',2,'p_statement','grammar.py',238),
  ('statement -> alter_table_statement SEMICOLON','statement',2,'p_statement','grammar.py',239),
  ('statement -> if_statement SEMICOLON','statement',2,'p_statement','grammar.py',240),
  ('statement -> exec_statement SEMICOLON','statement',2,'p_statement','grammar.py',241),
  ('statement -> drop_table_statement SEMICOLON','statement',2,'p_statement','grammar.py',242),
  ('statement -> update_statement SEMICOLON','statement',2,'p_statement','grammar.py',243),
  ('statement -> while_statement SEMICOLON','statement',2,'p_statement','grammar.py',244),
  ('statement -> truncate_statement SEMICOLON','statement',2,'p_statement','grammar.py',245),
  ('statement -> return_statement SEMICOLON','statement',2,'p_statement','grammar.py',246),
  ('statement -> delete_statement SEMICOLON','statement',2,'p_statement','grammar.py',247),
  ('create_database_statement -> CREATE DATA BASE NAME','create_database_statement',4,'p_create_database_statement','grammar.py',254),
  ('use_statement -> USE NAME','use_statement',2,'p_use_statement','grammar.py',260),
  ('declare_statement -> DECLARE ID AS type','declare_statement',4,'p_declare_statement','grammar.py',266),
  ('declare_statement -> DECLARE ID type','declare_statement',3,'p_declare_statement_2','grammar.py',270),
  ('set_statement -> SET assignments','set_statement',2,'p_set_statement','grammar.py',276),
  ('assignments -> assignments COMMA ID ASSIGN a','assignments',5,'p_assignments','grammar.py',281),
  ('assignments -> ID ASSIGN a','assignments',3,'p_assignments_2','grammar.py',287),
  ('create_table_statement -> CREATE TABLE NAME L_PAREN properties R_PAREN','create_table_statement',6,'p_create_table_statement','grammar.py',295),
  ('properties -> properties COMMA property','properties',3,'p_properties','grammar.py',299),
  ('properties -> property','properties',1,'p_properties_2','grammar.py',303),
  ('property -> NAME type null_prod PRIMARY KEY','property',5,'p_property','grammar.py',307),
  ('property -> NAME type null_prod','property',3,'p_property_2','grammar.py',311),
  ('property -> NAME type null_prod REFERENCE NAME L_PAREN NAME R_PAREN','property',8,'p_property_3','grammar.py',315),
  ('null_prod -> NOT NULL','null_prod',2,'p_null_prod','grammar.py',319),
  ('null_prod -> NULL','null_prod',1,'p_null_prod_2','grammar.py',323),
  ('null_prod -> <empty>','null_prod',0,'p_null_prod_3','grammar.py',327),
  ('select_statement -> SELECT columns FROM NAME','select_statement',4,'p_select_statement','grammar.py',333),
  ('select_statement -> SELECT columns FROM NAME WHERE a','select_statement',6,'p_select_statement_2','grammar.py',337),
  ('insert_statement -> INSERT INTO NAME L_PAREN columns R_PAREN VALUES L_PAREN vals R_PAREN','insert_statement',10,'p_insert_statement','grammar.py',342),
  ('columns -> columns COMMA column','columns',3,'p_columns','grammar.py',348),
  ('columns -> columns COMMA column POINT column','columns',5,'p_columns_2','grammar.py',352),
  ('columns -> column POINT column','columns',3,'p_columns_3','grammar.py',355),
  ('columns -> column','columns',1,'p_columns_4','grammar.py',358),
  ('column -> TIMES','column',1,'p_column','grammar.py',361),
  ('column -> NAME','column',1,'p_column','grammar.py',362),
  ('column -> case_statement','column',1,'p_column','grammar.py',363),
  ('column -> call_function_prod','column',1,'p_column','grammar.py',364),
  ('column -> if_statement NAME','column',2,'p_column','grammar.py',365),
  ('column -> a NAME','column',2,'p_column','grammar.py',366),
  ('vals -> vals COMMA a','vals',3,'p_vals','grammar.py',371),
  ('vals -> a','vals',1,'p_vals_2','grammar.py',375),
  ('create_function_statement -> CREATE FUNCTION NAME L_PAREN parameters R_PAREN RETURN type AS BEGIN statements END','create_function_statement',12,'p_create_function_statement','grammar.py',381),
  ('create_function_statement -> CREATE FUNCTION NAME L_PAREN R_PAREN RETURN type AS BEGIN statements END','create_function_statement',11,'p_create_function_statement_2','grammar.py',385),
  ('create_procedure_statement -> CREATE PROCEDURE NAME L_PAREN parameters R_PAREN AS BEGIN statements END','create_procedure_statement',10,'p_create_procedure_statement','grammar.py',389),
  ('create_procedure_statement -> CREATE PROCEDURE NAME L_PAREN R_PAREN AS BEGIN statements END','create_procedure_statement',9,'p_create_procedure_statement_2','grammar.py',393),
  ('parameters -> parameters COMMA ID AS type','parameters',5,'p_parameters','grammar.py',399),
  ('parameters -> parameters COMMA ID type','parameters',4,'p_parameters_2','grammar.py',405),
  ('parameters -> ID type','parameters',2,'p_parameters_3','grammar.py',410),
  ('parameters -> ID AS type','parameters',3,'p_parameters_4','grammar.py',415),
  ('alter_table_statement -> ALTER TABLE NAME ADD COLUMN NAME type','alter_table_statement',7,'p_alter_table_statement','grammar.py',424),
  ('alter_table_statement -> ALTER TABLE NAME DROP COLUMN NAME','alter_table_statement',6,'p_alter_table_statement_2','grammar.py',428),
  ('if_statement -> IF a THEN statements END IF','if_statement',6,'p_if_statement','grammar.py',441),
  ('if_statement -> IF a THEN statements ELSE statements END IF','if_statement',8,'p_if_statement_2','grammar.py',446),
  ('if_statement -> IF L_PAREN a COMMA a COMMA a R_PAREN','if_statement',8,'p_if_statement_3','grammar.py',452),
  ('exec_statement -> EXEC NAME vals','exec_statement',3,'p_exec_statement','grammar.py',457),
  ('drop_table_statement -> DROP TABLE NAME','drop_table_statement',3,'p_drop_table_statement','grammar.py',462),
  ('update_statement -> UPDATE NAME SET column_assignments WHERE a','update_statement',6,'p_update_statement','grammar.py',467),
  ('column_assignments -> column_assignments COMMA NAME ASSIGN a','column_assignments',5,'p_column_assignments','grammar.py',472),
  ('column_assignments -> NAME ASSIGN a','column_assignments',3,'p_column_assignments_2','grammar.py',476),
  ('while_statement -> WHILE a BEGIN statements END','while_statement',5,'p_while_statement','grammar.py',481),
  ('truncate_statement -> TRUNCATE TABLE NAME','truncate_statement',3,'p_truncate_statement','grammar.py',487),
  ('delete_statement -> DELETE FROM NAME WHERE a','delete_statement',5,'p_delete_statement','grammar.py',492),
  ('case_statement -> CASE when_statements END NAME','case_statement',4,'p_case_statement','grammar.py',497),
  ('when_statements -> WHEN a THEN a when_statements','when_statements',5,'p_when_statement','grammar.py',501),
  ('when_statements -> ELSE THEN a','when_statements',3,'p_when_statement_2','grammar.py',505),
  ('type -> INT','type',1,'p_type','grammar.py',509),
  ('type -> DECIMAL','type',1,'p_type','grammar.py',510),
  ('type -> DATE','type',1,'p_type','grammar.py',511),
  ('type -> DATETIME','type',1,'p_type','grammar.py',512),
  ('type -> NCHAR L_PAREN a R_PAREN','type',4,'p_type_2','grammar.py',518),
  ('type -> NVARCHAR L_PAREN a R_PAREN','type',4,'p_type_2','grammar.py',519),
  ('a -> a OR b','a',3,'p_a','grammar.py',523),
  ('a -> b','a',1,'p_a_2','grammar.py',528),
  ('b -> b AND c','b',3,'p_b','grammar.py',533),
  ('b -> c','b',1,'p_b_2','grammar.py',538),
  ('c -> NOT_SIGN d','c',2,'p_c','grammar.py',543),
  ('c -> d','c',1,'p_c_2','grammar.py',548),
  ('d -> d EQUALS e','d',3,'p_d','grammar.py',553),
  ('d -> d NOT_EQ e','d',3,'p_d','grammar.py',554),
  ('d -> d LESS_THAN e','d',3,'p_d','grammar.py',555),
  ('d -> d GREATER_THAN e','d',3,'p_d','grammar.py',556),
  ('d -> d LESS_EQ e','d',3,'p_d','grammar.py',557),
  ('d -> d GREATER_EQ e','d',3,'p_d','grammar.py',558),
  ('d -> e','d',1,'p_d_2','grammar.py',564),
  ('e -> e PLUS f','e',3,'p_e','grammar.py',569),
  ('e -> e MINUS f','e',3,'p_e','grammar.py',570),
  ('e -> f','e',1,'p_e_2','grammar.py',575),
  ('f -> f TIMES g','f',3,'p_f','grammar.py',580),
  ('f -> f DIVIDE g','f',3,'p_f','grammar.py',581),
  ('f -> g','f',1,'p_f_2','grammar.py',586),
  ('g -> MINUS h','g',2,'p_g','grammar.py',591),
  ('g -> h','g',1,'p_g_2','grammar.py',596),
  ('h -> INTEGER_VALUE','h',1,'p_h','grammar.py',601),
  ('h -> DECIMAL_VALUE','h',1,'p_h_2','grammar.py',606),
  ('h -> STRING','h',1,'p_h_3','grammar.py',611),
  ('h -> ID','h',1,'p_h_4','grammar.py',616),
  ('h -> NAME','h',1,'p_h_5','grammar.py',621),
  ('h -> L_PAREN a R_PAREN','h',3,'p_h_6','grammar.py',625),
  ('call_function_prod -> HOY L_PAREN R_PAREN','call_function_prod',3,'p_call_function_prod','grammar.py',629),
  ('call_function_prod -> CONCATENAR L_PAREN a COMMA a R_PAREN','call_function_prod',6,'p_call_function_prod','grammar.py',630),
  ('call_function_prod -> SUBSTRAER L_PAREN a R_PAREN','call_function_prod',4,'p_call_function_prod','grammar.py',631),
  ('call_function_prod -> CONTAR L_PAREN a R_PAREN','call_function_prod',4,'p_call_function_prod','grammar.py',632),
  ('call_function_prod -> SUMA L_PAREN a R_PAREN','call_function_prod',4,'p_call_function_prod','grammar.py',633),
  ('call_function_prod -> CAS L_PAREN a AS type R_PAREN','call_function_prod',6,'p_call_function_prod','grammar.py',634),
  ('return_statement -> RETURN a','return_statement',2,'p_return_statement','grammar.py',638),
]
