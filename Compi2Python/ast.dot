digraph AST{
node0 [label="inst" shape="oval", color="black"];
node1 [label="inst" shape="oval", color="black"];
node2 [label="inst" shape="oval", color="black"];
node3 [label="inst" shape="oval", color="black"];
node4 [label="declare" shape="oval", color="black"];
node5 [label="@var" shape="oval", color="black"];
node6 [label="set" shape="oval", color="black"];
node7 [label="=" shape="oval", color="black"];
node8 [label="@var" shape="oval", color="black"];
node9 [label="12" shape="oval", color="black"];
node10 [label="if" shape="oval", color="black"];
node11 [label="condition" shape="oval", color="black"];
node12 [label="<" shape="oval", color="black"];
node13 [label="@var" shape="oval", color="black"];
node14 [label="25" shape="oval", color="black"];
node15 [label="true_code" shape="oval", color="black"];
node16 [label="inst" shape="oval", color="black"];
node17 [label="set" shape="oval", color="black"];
node18 [label="=" shape="oval", color="black"];
node19 [label="@var" shape="oval", color="black"];
node20 [label="3" shape="oval", color="black"];
node21 [label="while" shape="oval", color="black"];
node22 [label="condition" shape="oval", color="black"];
node23 [label=">" shape="oval", color="black"];
node24 [label="@var" shape="oval", color="black"];
node25 [label="1" shape="oval", color="black"];
node26 [label="code" shape="oval", color="black"];
node27 [label="inst" shape="oval", color="black"];
node28 [label="set" shape="oval", color="black"];
node29 [label="=" shape="oval", color="black"];
node30 [label="@var" shape="oval", color="black"];
node31 [label="-" shape="oval", color="black"];
node32 [label="@var" shape="oval", color="black"];
node33 [label="1" shape="oval", color="black"];
node0 -> node1;
node1 -> node2;
node2 -> node3;
node3 -> node4;
node4 -> node5;
node3 -> node6;
node6 -> node7;
node7 -> node8;
node7 -> node9;
node2 -> node10;
node10 -> node11;
node11 -> node12;
node12 -> node13;
node12 -> node14;
node10 -> node15;
node15 -> node16;
node16 -> node17;
node17 -> node18;
node18 -> node19;
node18 -> node20;
node1 -> node21;
node21 -> node22;
node22 -> node23;
node23 -> node24;
node23 -> node25;
node21 -> node26;
node26 -> node27;
node27 -> node28;
node28 -> node29;
node29 -> node30;
node29 -> node31;
node31 -> node32;
node31 -> node33;
}